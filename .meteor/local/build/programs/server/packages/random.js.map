{"version":3,"sources":["meteor://ðŸ’»app/packages/random/random.js","meteor://ðŸ’»app/packages/random/deprecated.js"],"names":[],"mappings":"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","file":"/packages/random.js","sourcesContent":["// We use cryptographically strong PRNGs (crypto.getRandomBytes() on the server,\n// window.crypto.getRandomValues() in the browser) when available. If these\n// PRNGs fail, we fall back to the Alea PRNG, which is not cryptographically\n// strong, and we seed it with various sources such as the date, Math.random,\n// and window size on the client.  When using crypto.getRandomValues(), our\n// primitive is hexString(), from which we construct fraction(). When using\n// window.crypto.getRandomValues() or alea, the primitive is fraction and we use\n// that to construct hex string.\n\nif (Meteor.isServer)\n  var nodeCrypto = Npm.require('crypto');\n\n// see http://baagoe.org/en/wiki/Better_random_numbers_for_javascript\n// for a full discussion and Alea implementation.\nvar Alea = function () {\n  function Mash() {\n    var n = 0xefc8249d;\n\n    var mash = function(data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n\n    mash.version = 'Mash 0.9';\n    return mash;\n  }\n\n  return (function (args) {\n    var s0 = 0;\n    var s1 = 0;\n    var s2 = 0;\n    var c = 1;\n\n    if (args.length == 0) {\n      args = [+new Date];\n    }\n    var mash = Mash();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n\n    for (var i = 0; i < args.length; i++) {\n      s0 -= mash(args[i]);\n      if (s0 < 0) {\n        s0 += 1;\n      }\n      s1 -= mash(args[i]);\n      if (s1 < 0) {\n        s1 += 1;\n      }\n      s2 -= mash(args[i]);\n      if (s2 < 0) {\n        s2 += 1;\n      }\n    }\n    mash = null;\n\n    var random = function() {\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n      s0 = s1;\n      s1 = s2;\n      return s2 = t - (c = t | 0);\n    };\n    random.uint32 = function() {\n      return random() * 0x100000000; // 2^32\n    };\n    random.fract53 = function() {\n      return random() +\n        (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n    };\n    random.version = 'Alea 0.9';\n    random.args = args;\n    return random;\n\n  } (Array.prototype.slice.call(arguments)));\n};\n\nvar UNMISTAKABLE_CHARS = \"23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz\";\nvar BASE64_CHARS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n  \"0123456789-_\";\n\n// `type` is one of `RandomGenerator.Type` as defined below.\n//\n// options:\n// - seeds: (required, only for RandomGenerator.Type.ALEA) an array\n//   whose items will be `toString`ed and used as the seed to the Alea\n//   algorithm\nvar RandomGenerator = function (type, options) {\n  var self = this;\n  self.type = type;\n\n  if (!RandomGenerator.Type[type]) {\n    throw new Error(\"Unknown random generator type: \" + type);\n  }\n\n  if (type === RandomGenerator.Type.ALEA) {\n    if (!options.seeds) {\n      throw new Error(\"No seeds were provided for Alea PRNG\");\n    }\n    self.alea = Alea.apply(null, options.seeds);\n  }\n};\n\n// Types of PRNGs supported by the `RandomGenerator` class\nRandomGenerator.Type = {\n  // Use Node's built-in `crypto.getRandomBytes` (cryptographically\n  // secure but not seedable, runs only on the server). Reverts to\n  // `crypto.getPseudoRandomBytes` in the extremely uncommon case that\n  // there isn't enough entropy yet\n  NODE_CRYPTO: \"NODE_CRYPTO\",\n\n  // Use non-IE browser's built-in `window.crypto.getRandomValues`\n  // (cryptographically secure but not seedable, runs only in the\n  // browser).\n  BROWSER_CRYPTO: \"BROWSER_CRYPTO\",\n\n  // Use the *fast*, seedaable and not cryptographically secure\n  // Alea algorithm\n  ALEA: \"ALEA\",\n};\n\nRandomGenerator.prototype.fraction = function () {\n  var self = this;\n  if (self.type === RandomGenerator.Type.ALEA) {\n    return self.alea();\n  } else if (self.type === RandomGenerator.Type.NODE_CRYPTO) {\n    var numerator = parseInt(self.hexString(8), 16);\n    return numerator * 2.3283064365386963e-10; // 2^-32\n  } else if (self.type === RandomGenerator.Type.BROWSER_CRYPTO) {\n    var array = new Uint32Array(1);\n    window.crypto.getRandomValues(array);\n    return array[0] * 2.3283064365386963e-10; // 2^-32\n  } else {\n    throw new Error('Unknown random generator type: ' + self.type);\n  }\n};\n\nRandomGenerator.prototype.hexString = function (digits) {\n  var self = this;\n  if (self.type === RandomGenerator.Type.NODE_CRYPTO) {\n    var numBytes = Math.ceil(digits / 2);\n    var bytes;\n    // Try to get cryptographically strong randomness. Fall back to\n    // non-cryptographically strong if not available.\n    try {\n      bytes = nodeCrypto.randomBytes(numBytes);\n    } catch (e) {\n      // XXX should re-throw any error except insufficient entropy\n      bytes = nodeCrypto.pseudoRandomBytes(numBytes);\n    }\n    var result = bytes.toString(\"hex\");\n    // If the number of digits is odd, we'll have generated an extra 4 bits\n    // of randomness, so we need to trim the last digit.\n    return result.substring(0, digits);\n  } else {\n    return this._randomString(digits, \"0123456789abcdef\");\n  }\n};\n\nRandomGenerator.prototype._randomString = function (charsCount,\n                                                    alphabet) {\n  var self = this;\n  var digits = [];\n  for (var i = 0; i < charsCount; i++) {\n    digits[i] = self.choice(alphabet);\n  }\n  return digits.join(\"\");\n};\n\nRandomGenerator.prototype.id = function (charsCount) {\n  var self = this;\n  // 17 characters is around 96 bits of entropy, which is the amount of\n  // state in the Alea PRNG.\n  if (charsCount === undefined)\n    charsCount = 17;\n\n  return self._randomString(charsCount, UNMISTAKABLE_CHARS);\n};\n\nRandomGenerator.prototype.secret = function (charsCount) {\n  var self = this;\n  // Default to 256 bits of entropy, or 43 characters at 6 bits per\n  // character.\n  if (charsCount === undefined)\n    charsCount = 43;\n  return self._randomString(charsCount, BASE64_CHARS);\n};\n\nRandomGenerator.prototype.choice = function (arrayOrString) {\n  var index = Math.floor(this.fraction() * arrayOrString.length);\n  if (typeof arrayOrString === \"string\")\n    return arrayOrString.substr(index, 1);\n  else\n    return arrayOrString[index];\n};\n\n// instantiate RNG.  Heuristically collect entropy from various sources when a\n// cryptographic PRNG isn't available.\n\n// client sources\nvar height = (typeof window !== 'undefined' && window.innerHeight) ||\n      (typeof document !== 'undefined'\n       && document.documentElement\n       && document.documentElement.clientHeight) ||\n      (typeof document !== 'undefined'\n       && document.body\n       && document.body.clientHeight) ||\n      1;\n\nvar width = (typeof window !== 'undefined' && window.innerWidth) ||\n      (typeof document !== 'undefined'\n       && document.documentElement\n       && document.documentElement.clientWidth) ||\n      (typeof document !== 'undefined'\n       && document.body\n       && document.body.clientWidth) ||\n      1;\n\nvar agent = (typeof navigator !== 'undefined' && navigator.userAgent) || \"\";\n\nfunction createAleaGeneratorWithGeneratedSeed() {\n  return new RandomGenerator(\n    RandomGenerator.Type.ALEA,\n    {seeds: [new Date, height, width, agent, Math.random()]});\n};\n\nif (Meteor.isServer) {\n  Random = new RandomGenerator(RandomGenerator.Type.NODE_CRYPTO);\n} else {\n  if (typeof window !== \"undefined\" && window.crypto &&\n      window.crypto.getRandomValues) {\n    Random = new RandomGenerator(RandomGenerator.Type.BROWSER_CRYPTO);\n  } else {\n    // On IE 10 and below, there's no browser crypto API\n    // available. Fall back to Alea\n    //\n    // XXX looks like at the moment, we use Alea in IE 11 as well,\n    // which has `window.msCrypto` instead of `window.crypto`.\n    Random = createAleaGeneratorWithGeneratedSeed();\n  }\n}\n\n// Create a non-cryptographically secure PRNG with a given seed (using\n// the Alea algorithm)\nRandom.createWithSeeds = function (...seeds) {\n  if (seeds.length === 0) {\n    throw new Error(\"No seeds were provided\");\n  }\n  return new RandomGenerator(RandomGenerator.Type.ALEA, {seeds: seeds});\n};\n\n// Used like `Random`, but much faster and not cryptographically\n// secure\nRandom.insecure = createAleaGeneratorWithGeneratedSeed();\n","// Before this package existed, we used to use this Meteor.uuid()\n// implementing the RFC 4122 v4 UUID. It is no longer documented\n// and will go away.\n// XXX COMPAT WITH 0.5.6\nMeteor.uuid = function () {\n  var HEX_DIGITS = \"0123456789abcdef\";\n  var s = [];\n  for (var i = 0; i < 36; i++) {\n    s[i] = Random.choice(HEX_DIGITS);\n  }\n  s[14] = \"4\";\n  s[19] = HEX_DIGITS.substr((parseInt(s[19],16) & 0x3) | 0x8, 1);\n  s[8] = s[13] = s[18] = s[23] = \"-\";\n\n  var uuid = s.join(\"\");\n  return uuid;\n};\n"]}