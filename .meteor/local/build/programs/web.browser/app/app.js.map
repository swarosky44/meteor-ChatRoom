{"version":3,"sources":["meteor://ðŸ’»app/client/main.jsx","meteor://ðŸ’»app/imports/api/msgs.js","meteor://ðŸ’»app/imports/startup/accounts-config.js","meteor://ðŸ’»app/imports/ui/AccountsUIWrapper.jsx","meteor://ðŸ’»app/imports/ui/App.jsx","meteor://ðŸ’»app/imports/ui/ChatBox.jsx","meteor://ðŸ’»app/imports/ui/ChatBoxItem.jsx","meteor://ðŸ’»app/imports/ui/MsgBox.jsx","meteor://ðŸ’»app/imports/ui/MsgBoxItem.jsx"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport { Router, Route, browserHistory } from 'react-router'\n \nimport '../imports/startup/accounts-config.js'\nimport App from '../imports/ui/App.jsx'\nimport ChatBox from '../imports/ui/ChatBox.jsx'\n \nMeteor.startup(() => {\n  render((\n    <Router history={browserHistory}>\n      <Route path=\"/\" component={App} />\n      <Route path=\"/:friendId\" component={ChatBox} />\n    </Router>), document.getElementById('app'))\n});","import { Meteor } from 'meteor/meteor'\nimport { Mongo } from 'meteor/mongo'\nimport { check } from 'meteor/check'\n \nexport const Msgs = new Mongo.Collection('msgs');\nif (Meteor.isServer) {\n  Meteor.publish('msgs', function msgsPublication() {\n    return Msgs.find({\n      $or: [\n        { 'sender.id': this.userId },\n        { 'recevier.id': this.userId },\n      ],\n    })\n  })\n  Meteor.publish('chatMsgs', function chatMsgsPublication(friend_id) {\n    console.log(friend_id,'asdsadsdsadasdas')\n    return Msgs.find({\n      $or: [\n        {'sender.id': this.userId, 'recevier.id': friend_id}, \n        {'sender.id': friend_id, 'recevier.id': this.userId}\n      ] \n    })\n  })\n}\n \nMeteor.methods({\n  'msgs.insert'(text, friend) {\n    check(text, String)\n\n    if (! Meteor.userId()) {\n      throw new Meteor.Error('not-authorized')\n    }\n\n    Msgs.insert({\n      sender: {\n        id: Meteor.userId(),\n        name: Meteor.user().username\n      },\n      recevier: friend,\n      content: text,\n      time: new Date(),\n      isUnread: true\n    })\n  },\n  'msgs.setUnread'(_id) {\n    check(_id, String)\n    if (! Meteor.userId()) {\n      throw new Meteor.Error('not-authorized')\n    }\n    Msgs.update(_id, { $set: { isUnread: false } })\n  }\n})","import { Accounts } from 'meteor/accounts-base';\n \nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n});","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n \nexport default class AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons,\n      ReactDOM.findDOMNode(this.refs.container));\n  }\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n  render() {\n    // Just render a placeholder container that will be filled in\n    return <span ref=\"container\" />;\n  }\n}","import React, { Component, PropTypes } from 'react'\nimport { Meteor } from 'meteor/meteor'\nimport { createContainer } from 'meteor/react-meteor-data'\nimport { Msgs } from '../api/msgs.js'\nimport MsgBox from './MsgBox.jsx'\nimport AccountsUIWrapper from './AccountsUIWrapper.jsx'\nclass App extends Component {\n\n  concatMsgs (msgs) {\n    let fList = []\n    let result = []\n    msgs.forEach((msg) => {\n      let friend_id = msg.sender.id == this.props.currentUser._id ? msg.recevier.id : msg.sender.id\n      if(fList.indexOf(friend_id) < 0) {\n        fList.push(friend_id)\n        result.push(msg)\n      }\n    })\n    return result\n  }\n\n  render() {\n    return (\n      <div className=\"page-wrap\">\n        <AccountsUIWrapper />\n        <MsgBox msgs={ this.concatMsgs(this.props.msgs) }/>\n      </div> \n    );\n  }\n}\n \nApp.propTypes = {\n  msgs: PropTypes.array.isRequired,\n  currentUser: PropTypes.object,\n};\n \nexport default createContainer(() => {\n  Meteor.subscribe('msgs')\n  return {\n    msgs: Msgs.find({}, { sort:{ time :-1} }).fetch(),\n    currentUser: Meteor.user(),\n  };\n}, App);","import React, { Component, PropTypes } from 'react'\nimport { createContainer } from 'meteor/react-meteor-data'\nimport ReactDOM from 'react-dom'\nimport { Meteor } from 'meteor/meteor'\nimport ChatBoxItem from './ChatBoxItem.jsx'\nimport { Msgs } from \"../api/msgs.js\"\nimport { Link } from 'react-router'\n\nclass ChatBox extends Component {\n  renderChatList() {\n    const msgs = this.props.msgs\n    const friend_name = msgs[0].sender.name == Meteor.user().username ? msgs[0].recevier.name : msgs[0].sender.name\n    return msgs.map((msg) => {\n      return (\n        <ChatBoxItem\n         key={msg._id}\n         msg={msg}\n         friendName={friend_name}\n        />\n      )\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim()\n    if (text) {\n      const _msg = this.props.msgs[0]\n      const friend = {\n        id: _msg.sender.id === Meteor.userId() ? _msg.recevier.id : _msg.sender.id,\n        name: _msg.sender.name == Meteor.user().username ? _msg.recevier.name : _msg.sender.name\n      }\n      Meteor.call('msgs.insert', text, friend)\n      ReactDOM.findDOMNode(this.refs.textInput).value = ''\n    }\n  }\n\n  render() {\n    const msgs = this.props.msgs\n    const friend_name = msgs[0].sender.name == Meteor.user().username ? msgs[0].recevier.name : msgs[0].sender.name\n    return (\n      <div className=\"chat-box page\">\n        <h1 className=\"page-title\">\n          <Link className=\"page-title_back\" to={'/'}>&lt;</Link>\n          { friend_name }\n        </h1>\n        <ul className=\"chat-box_list\">\n          { this.renderChatList() }\n        </ul>\n        <form className=\"chat-box_msg\" onSubmit={this.handleSubmit.bind(this)}>\n          <input className=\"chat-box_input\" type=\"text\" ref=\"textInput\" placeholder=\"Type to send a messsage\"/>\n        </form>\n      </div>\n    )\n  } \n}\n\n\nChatBox.propTypes = {\n  msgs: PropTypes.array.isRequired\n}\n\nexport default createContainer(() => {\n  const user_id = Meteor.userId()\n  // TODO  == Don't know how to get friend_id from component's props ==\n  const friend_id = this.location.pathname.slice(1)\n  Meteor.subscribe('chatMsgs', friend_id)\n  return {\n    msgs: Msgs.find({\n      $or: [\n        {'sender.id': user_id, 'recevier.id': friend_id}, \n        {'sender.id': friend_id, 'recevier.id': user_id}\n      ] \n    }).fetch()\n  }\n}, ChatBox)\n","import React, { Component, PropTypes } from 'react'\nimport { Meteor } from 'meteor/meteor'\n\n\nexport default class ChatBoxItem extends Component {\n  render() {\n    const msg = this.props.msg\n    const friendName = this.props.msg.sender.id === Meteor.userId() ? Meteor.user().username : this.props.friendName\n    return (\n      <li className=\"chat-item\">\n        <div className=\"chat-item_info\">\n          <span className=\"name\">{ friendName } :</span>\n          <span className=\"time\">{ `${msg.time.toLocaleDateString()}  ${msg.time.toLocaleTimeString()}` }</span>\n        </div>\n        <p className=\"chat-item_content\">{ msg.content }</p>\n      </li>\n    )\n  }\n}\n\nChatBoxItem.propTypes = {\n  msg: PropTypes.object.isRequired,\n  friendName: PropTypes.string.isRequired\n}\n\n","import React, { Component, PropTypes } from 'react'\nimport { Meteor } from 'meteor/meteor'\nimport MsgBoxItem from \"./MsgBoxItem.jsx\"\n// MsgBox component - represents user's msg list\nexport default class MsgBox extends Component {\n  renderMsgList () {\n    let msgs = this.props.msgs\n    return msgs.map(msg => {\n      return (\n        <MsgBoxItem\n          key={msg._id}\n          msg={msg}\n        />\n      )\n    })\n  }\n  unreadMsgCount () {\n    const msgs = this.props.msgs\n    let count = 0\n    msgs.forEach(msg => msg.isUnread && count++)\n    return count\n  }\n  render () {\n    return (\n      <div className=\"page msg-box\">\n        <h1 className=\"page-title\">\n          My Messages\n          <div className=\"page-title_msg-count\">\n            <span className=\"page-title_msg-count--unread\"> { this.unreadMsgCount() } </span> / { this.props.msgs.length }\n          </div>\n        </h1>\n        <ul className=\"msg-list\">  \n          { this.renderMsgList() }\n        </ul>\n      </div>\n    )\n  }\n}\n \nMsgBox.propTypes = {\n  msgs: PropTypes.array.isRequired\n}","import React, { Component, PropTypes } from 'react'\nimport { Meteor } from 'meteor/meteor'\nimport classnames from 'classnames'\nimport { Link } from 'react-router'\n\n\nexport default class MsgBoxItem extends Component {\n\n  readThisMsg() {\n    let _id = this.props.msg._id\n    if (this.props.msg.isUnread) {\n      Meteor.call('msgs.setUnread', _id)\n    }\n  }\n\n  render () {\n    const msg = this.props.msg\n    const friend_id = msg.sender.id == Meteor.userId() ? msg.recevier.id : msg.sender.id\n    console.log(Meteor.user(), ' is my name! <=======>')\n    const friend_name = msg.sender.name == Meteor.user().username ? msg.recevier.name : msg.sender.name\n    const itemClassName = classnames({\n      'msg-item': true,\n      'msg-item--unread': msg.isUnread\n    })\n    return (\n      <li className={itemClassName}>\n        <Link to={`/${friend_id}`} onClick={this.readThisMsg.bind(this)}>\n        <div className=\"msg-item_name\"> { friend_name } </div> \n        <div className=\"msg-item_content\"> \n          <span className=\"msg-item_time\"> { `${msg.time.toLocaleDateString()}  ${msg.time.toLocaleTimeString()}` }</span>\n          <p>{ msg.content } </p>\n        </div>  \n        </Link>\n      </li>\n    )\n  }\n}\n \nMsgBoxItem.propTypes = {\n  msg: PropTypes.object.isRequired\n}\n"]}