[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Accounts = Package['accounts-base'].Accounts;\nvar Mongo = Package.mongo.Mongo;\n\n/* Package-scope variables */\nvar ServiceConfiguration;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                    //\n// packages/service-configuration/service_configuration_common.js                     //\n//                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////\n                                                                                      //\nif (typeof ServiceConfiguration === 'undefined') {                                    // 1\n  ServiceConfiguration = {};                                                          // 2\n}                                                                                     // 3\n                                                                                      // 4\n                                                                                      // 5\n// Table containing documents with configuration options for each                     // 6\n// login service                                                                      // 7\nServiceConfiguration.configurations = new Mongo.Collection(                           // 8\n  \"meteor_accounts_loginServiceConfiguration\", {                                      // 9\n    _preventAutopublish: true,                                                        // 10\n    connection: Meteor.isClient ? Accounts.connection : Meteor.connection             // 11\n  });                                                                                 // 12\n// Leave this collection open in insecure mode. In theory, someone could              // 13\n// hijack your oauth connect requests to a different endpoint or appId,               // 14\n// but you did ask for 'insecure'. The advantage is that it is much                   // 15\n// easier to write a configuration wizard that works only in insecure                 // 16\n// mode.                                                                              // 17\n                                                                                      // 18\n                                                                                      // 19\n// Thrown when trying to use a login service which is not configured                  // 20\nServiceConfiguration.ConfigError = function (serviceName) {                           // 21\n  if (Meteor.isClient && !Accounts.loginServicesConfigured()) {                       // 22\n    this.message = \"Login service configuration not yet loaded\";                      // 23\n  } else if (serviceName) {                                                           // 24\n    this.message = \"Service \" + serviceName + \" not configured\";                      // 25\n  } else {                                                                            // 26\n    this.message = \"Service not configured\";                                          // 27\n  }                                                                                   // 28\n};                                                                                    // 29\nServiceConfiguration.ConfigError.prototype = new Error();                             // 30\nServiceConfiguration.ConfigError.prototype.name = 'ServiceConfiguration.ConfigError';\n                                                                                      // 32\n////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['service-configuration'] = {}, {\n  ServiceConfiguration: ServiceConfiguration\n});\n\n})();\n","servePath":"/packages/service-configuration.js"}]