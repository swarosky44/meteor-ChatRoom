[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n/* Package-scope variables */\nvar LaunchScreen;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/launch-screen/mobile-launch-screen.js                         //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\n// XXX This currently implements loading screens for mobile apps only,    // 1\n// but in the future can be expanded to all apps.                         // 2\n                                                                          // 3\nvar holdCount = 0;                                                        // 4\nvar alreadyHidden = false;                                                // 5\n                                                                          // 6\nLaunchScreen = {                                                          // 7\n  hold: function () {                                                     // 8\n    if (! Meteor.isCordova) {                                             // 9\n      return {                                                            // 10\n        release: function () { /* noop */ }                               // 11\n      };                                                                  // 12\n    }                                                                     // 13\n                                                                          // 14\n    if (alreadyHidden) {                                                  // 15\n      throw new Error(\"Can't show launch screen once it's hidden\");       // 16\n    }                                                                     // 17\n                                                                          // 18\n    holdCount++;                                                          // 19\n                                                                          // 20\n    var released = false;                                                 // 21\n    var release = function () {                                           // 22\n      if (! Meteor.isCordova)                                             // 23\n        return;                                                           // 24\n                                                                          // 25\n      if (! released) {                                                   // 26\n        released = true;                                                  // 27\n        holdCount--;                                                      // 28\n        if (holdCount === 0 &&                                            // 29\n            typeof navigator !== 'undefined' && navigator.splashscreen) {\n          alreadyHidden = true;                                           // 31\n          navigator.splashscreen.hide();                                  // 32\n        }                                                                 // 33\n      }                                                                   // 34\n    };                                                                    // 35\n                                                                          // 36\n    // Returns a launch screen handle with a release method               // 37\n    return {                                                              // 38\n      release: release                                                    // 39\n    };                                                                    // 40\n  }                                                                       // 41\n};                                                                        // 42\n                                                                          // 43\n////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/launch-screen/default-behavior.js                             //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\n// Hold launch screen on app load. This reflects the fact that Meteor     // 1\n// mobile apps that use this package always start with a launch screen    // 2\n// visible. (see XXX comment at the top of package.js for more            // 3\n// details)                                                               // 4\nvar handle = LaunchScreen.hold();                                         // 5\n                                                                          // 6\nvar Template = Package.templating && Package.templating.Template;         // 7\n                                                                          // 8\nMeteor.startup(function () {                                              // 9\n  if (! Template) {                                                       // 10\n    handle.release();                                                     // 11\n  } else if (Package['iron:router']) {                                    // 12\n    // XXX Instead of doing this here, this code should be in             // 13\n    // iron:router directly. Note that since we're in a                   // 14\n    // `Meteor.startup` block it's ok that we don't have a                // 15\n    // weak dependency on iron:router in package.js.                      // 16\n    Package['iron:router'].Router.onAfterAction(function () {             // 17\n      handle.release();                                                   // 18\n    });                                                                   // 19\n  } else {                                                                // 20\n    Template.body.onRendered(function () {                                // 21\n      handle.release();                                                   // 22\n    });                                                                   // 23\n                                                                          // 24\n    // In case `Template.body` never gets rendered (due to some bug),     // 25\n    // hide the launch screen after 6 seconds. This matches the           // 26\n    // observed timeout that Cordova apps on Android (but not iOS)        // 27\n    // have on hiding the launch screen (even if you don't call           // 28\n    // `navigator.splashscreen.hide()`)                                   // 29\n    setTimeout(function () {                                              // 30\n      handle.release();                                                   // 31\n    }, 6000);                                                             // 32\n  }                                                                       // 33\n});                                                                       // 34\n                                                                          // 35\n////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['launch-screen'] = {}, {\n  LaunchScreen: LaunchScreen\n});\n\n})();\n","servePath":"/packages/launch-screen.js"}]