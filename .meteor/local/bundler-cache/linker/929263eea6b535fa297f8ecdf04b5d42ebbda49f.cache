[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar ReactMeteorData;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"react-meteor-data\":{\"react-meteor-data.jsx\":[\"meteor/tmeasday:check-npm-versions\",\"./createContainer.jsx\",\"./ReactMeteorData.jsx\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/react-meteor-data/react-meteor-data.jsx                                                               //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nexports.__esModule = true;                                                                                        //\nexports.ReactMeteorData = exports.createContainer = undefined;                                                    //\n                                                                                                                  //\nvar _tmeasdayCheckNpmVersions = require('meteor/tmeasday:check-npm-versions');                                    // 1\n                                                                                                                  //\n(0, _tmeasdayCheckNpmVersions.checkNpmVersions)({                                                                 // 2\n  react: '0.14.x',                                                                                                // 3\n  'react-addons-pure-render-mixin': '0.14.x'                                                                      // 4\n});                                                                                                               //\n                                                                                                                  //\nvar createContainer = require('./createContainer.jsx')['default'];                                                // 7\nvar ReactMeteorData = require('./ReactMeteorData.jsx')['default'];                                                // 8\n                                                                                                                  //\nexports.createContainer = createContainer;                                                                        //\nexports.ReactMeteorData = ReactMeteorData;                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"ReactMeteorData.jsx\":[\"babel-runtime/helpers/typeof\",\"babel-runtime/helpers/classCallCheck\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/react-meteor-data/ReactMeteorData.jsx                                                                 //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nexports.__esModule = true;                                                                                        //\n                                                                                                                  //\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");                                                           //\n                                                                                                                  //\nvar _typeof3 = _interopRequireDefault(_typeof2);                                                                  //\n                                                                                                                  //\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");                                           //\n                                                                                                                  //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                                  //\n                                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }                 //\n                                                                                                                  //\nvar ReactMeteorData = {                                                                                           // 1\n  componentWillMount: function () {                                                                               // 2\n    function componentWillMount() {                                                                               //\n      this.data = {};                                                                                             // 3\n      this._meteorDataManager = new MeteorDataManager(this);                                                      // 4\n      var newData = this._meteorDataManager.calculateData();                                                      // 5\n      this._meteorDataManager.updateData(newData);                                                                // 6\n    }                                                                                                             //\n                                                                                                                  //\n    return componentWillMount;                                                                                    //\n  }(),                                                                                                            //\n  componentWillUpdate: function () {                                                                              // 8\n    function componentWillUpdate(nextProps, nextState) {                                                          //\n      var saveProps = this.props;                                                                                 // 9\n      var saveState = this.state;                                                                                 // 10\n      var newData = void 0;                                                                                       // 11\n      try {                                                                                                       // 12\n        // Temporarily assign this.state and this.props,                                                          //\n        // so that they are seen by getMeteorData!                                                                //\n        // This is a simulation of how the proposed Observe API                                                   //\n        // for React will work, which calls observe() after                                                       //\n        // componentWillUpdate and after props and state are                                                      //\n        // updated, but before render() is called.                                                                //\n        // See https://github.com/facebook/react/issues/3398.                                                     //\n        this.props = nextProps;                                                                                   // 20\n        this.state = nextState;                                                                                   // 21\n        newData = this._meteorDataManager.calculateData();                                                        // 22\n      } finally {                                                                                                 //\n        this.props = saveProps;                                                                                   // 24\n        this.state = saveState;                                                                                   // 25\n      }                                                                                                           //\n                                                                                                                  //\n      this._meteorDataManager.updateData(newData);                                                                // 28\n    }                                                                                                             //\n                                                                                                                  //\n    return componentWillUpdate;                                                                                   //\n  }(),                                                                                                            //\n  componentWillUnmount: function () {                                                                             // 30\n    function componentWillUnmount() {                                                                             //\n      this._meteorDataManager.dispose();                                                                          // 31\n    }                                                                                                             //\n                                                                                                                  //\n    return componentWillUnmount;                                                                                  //\n  }()                                                                                                             //\n};                                                                                                                //\n                                                                                                                  //\n// A class to keep the state and utility methods needed to manage                                                 //\n// the Meteor data for a component.                                                                               //\n                                                                                                                  //\nvar MeteorDataManager = function () {                                                                             //\n  function MeteorDataManager(component) {                                                                         // 38\n    (0, _classCallCheck3[\"default\"])(this, MeteorDataManager);                                                    //\n                                                                                                                  //\n    this.component = component;                                                                                   // 39\n    this.computation = null;                                                                                      // 40\n    this.oldData = null;                                                                                          // 41\n  }                                                                                                               //\n                                                                                                                  //\n  MeteorDataManager.prototype.dispose = function () {                                                             // 37\n    function dispose() {                                                                                          //\n      if (this.computation) {                                                                                     // 45\n        this.computation.stop();                                                                                  // 46\n        this.computation = null;                                                                                  // 47\n      }                                                                                                           //\n    }                                                                                                             //\n                                                                                                                  //\n    return dispose;                                                                                               //\n  }();                                                                                                            //\n                                                                                                                  //\n  MeteorDataManager.prototype.calculateData = function () {                                                       // 37\n    function calculateData() {                                                                                    //\n      var component = this.component;                                                                             // 52\n                                                                                                                  //\n      if (!component.getMeteorData) {                                                                             // 54\n        return null;                                                                                              // 55\n      }                                                                                                           //\n                                                                                                                  //\n      // When rendering on the server, we don't want to use the Tracker.                                          //\n      // We only do the first rendering on the server so we can get the data right away                           //\n      if (Meteor.isServer) {                                                                                      // 51\n        return component.getMeteorData();                                                                         // 61\n      }                                                                                                           //\n                                                                                                                  //\n      if (this.computation) {                                                                                     // 64\n        this.computation.stop();                                                                                  // 65\n        this.computation = null;                                                                                  // 66\n      }                                                                                                           //\n                                                                                                                  //\n      var data = void 0;                                                                                          // 69\n      // Use Tracker.nonreactive in case we are inside a Tracker Computation.                                     //\n      // This can happen if someone calls `ReactDOM.render` inside a Computation.                                 //\n      // In that case, we want to opt out of the normal behavior of nested                                        //\n      // Computations, where if the outer one is invalidated or stopped,                                          //\n      // it stops the inner one.                                                                                  //\n      this.computation = Tracker.nonreactive(function () {                                                        // 51\n        return Tracker.autorun(function (c) {                                                                     // 76\n          if (c.firstRun) {                                                                                       // 77\n            var savedSetState = component.setState;                                                               // 78\n            try {                                                                                                 // 79\n              component.setState = function () {                                                                  // 80\n                throw new Error(\"Can't call `setState` inside `getMeteorData` as this could cause an endless\" + \" loop. To respond to Meteor data changing, consider making this component\" + \" a \\\"wrapper component\\\" that only fetches data and passes it in as props to\" + \" a child component. Then you can use `componentWillReceiveProps` in that\" + \" child component.\");\n              };                                                                                                  //\n                                                                                                                  //\n              data = component.getMeteorData();                                                                   // 89\n            } finally {                                                                                           //\n              component.setState = savedSetState;                                                                 // 91\n            }                                                                                                     //\n          } else {                                                                                                //\n            // Stop this computation instead of using the re-run.                                                 //\n            // We use a brand-new autorun for each call to getMeteorData                                          //\n            // to capture dependencies on any reactive data sources that                                          //\n            // are accessed.  The reason we can't use a single autorun                                            //\n            // for the lifetime of the component is that Tracker only                                             //\n            // re-runs autoruns at flush time, while we need to be able to                                        //\n            // re-call getMeteorData synchronously whenever we want, e.g.                                         //\n            // from componentWillUpdate.                                                                          //\n            c.stop();                                                                                             // 102\n            // Calling forceUpdate() triggers componentWillUpdate which                                           //\n            // recalculates getMeteorData() and re-renders the component.                                         //\n            component.forceUpdate();                                                                              // 93\n          }                                                                                                       //\n        });                                                                                                       //\n      });                                                                                                         //\n                                                                                                                  //\n      if (Package.mongo && Package.mongo.Mongo) {                                                                 // 110\n        Object.keys(data).forEach(function (key) {                                                                // 111\n          if (data[key] instanceof Package.mongo.Mongo.Cursor) {                                                  // 112\n            console.warn(\"Warning: you are returning a Mongo cursor from getMeteorData. This value \" + \"will not be reactive. You probably want to call `.fetch()` on the cursor \" + \"before returning it.\");\n          }                                                                                                       //\n        });                                                                                                       //\n      }                                                                                                           //\n                                                                                                                  //\n      return data;                                                                                                // 121\n    }                                                                                                             //\n                                                                                                                  //\n    return calculateData;                                                                                         //\n  }();                                                                                                            //\n                                                                                                                  //\n  MeteorDataManager.prototype.updateData = function () {                                                          // 37\n    function updateData(newData) {                                                                                //\n      var component = this.component;                                                                             // 125\n      var oldData = this.oldData;                                                                                 // 126\n                                                                                                                  //\n      if (!(newData && (typeof newData === \"undefined\" ? \"undefined\" : (0, _typeof3[\"default\"])(newData)) === 'object')) {\n        throw new Error(\"Expected object returned from getMeteorData\");                                           // 129\n      }                                                                                                           //\n      // update componentData in place based on newData                                                           //\n      for (var key in meteorBabelHelpers.sanitizeForInObject(newData)) {                                          // 124\n        component.data[key] = newData[key];                                                                       // 133\n      }                                                                                                           //\n      // if there is oldData (which is every time this method is called                                           //\n      // except the first), delete keys in newData that aren't in                                                 //\n      // oldData.  don't interfere with other keys, in case we are                                                //\n      // co-existing with something else that writes to a component's                                             //\n      // this.data.                                                                                               //\n      if (oldData) {                                                                                              // 124\n        for (var _key in meteorBabelHelpers.sanitizeForInObject(oldData)) {                                       // 141\n          if (!(_key in newData)) {                                                                               // 142\n            delete component.data[_key];                                                                          // 143\n          }                                                                                                       //\n        }                                                                                                         //\n      }                                                                                                           //\n      this.oldData = newData;                                                                                     // 147\n    }                                                                                                             //\n                                                                                                                  //\n    return updateData;                                                                                            //\n  }();                                                                                                            //\n                                                                                                                  //\n  return MeteorDataManager;                                                                                       //\n}();                                                                                                              //\n                                                                                                                  //\nexports[\"default\"] = ReactMeteorData;                                                                             //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"createContainer.jsx\":[\"babel-runtime/helpers/extends\",\"react\",\"react-addons-pure-render-mixin\",\"./ReactMeteorData.jsx\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// packages/react-meteor-data/createContainer.jsx                                                                 //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nexports.__esModule = true;                                                                                        //\nexports['default'] = undefined;                                                                                   //\n                                                                                                                  //\nvar _extends2 = require('babel-runtime/helpers/extends');                                                         //\n                                                                                                                  //\nvar _extends3 = _interopRequireDefault(_extends2);                                                                //\n                                                                                                                  //\nvar _react = require('react');                                                                                    // 5\n                                                                                                                  //\nvar _react2 = _interopRequireDefault(_react);                                                                     //\n                                                                                                                  //\nvar _reactAddonsPureRenderMixin = require('react-addons-pure-render-mixin');                                      // 6\n                                                                                                                  //\nvar _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);                           //\n                                                                                                                  //\nvar _ReactMeteorData = require('./ReactMeteorData.jsx');                                                          // 8\n                                                                                                                  //\nvar _ReactMeteorData2 = _interopRequireDefault(_ReactMeteorData);                                                 //\n                                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                 //\n                                                                                                                  //\nfunction createContainer() {                                                                                      // 10\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                          //\n  var Component = arguments[1];                                                                                   //\n                                                                                                                  //\n  var expandedOptions = options;                                                                                  // 11\n  if (typeof options === 'function') {                                                                            // 12\n    expandedOptions = {                                                                                           // 13\n      getMeteorData: options                                                                                      // 14\n    };                                                                                                            //\n  }                                                                                                               //\n                                                                                                                  //\n  var _expandedOptions = expandedOptions;                                                                         //\n  var _getMeteorData = _expandedOptions.getMeteorData;                                                            //\n  var _expandedOptions$pure = _expandedOptions.pure;                                                              //\n  var pure = _expandedOptions$pure === undefined ? true : _expandedOptions$pure;                                  //\n                                                                                                                  //\n                                                                                                                  //\n  var mixins = [_ReactMeteorData2['default']];                                                                    // 23\n  if (pure) {                                                                                                     // 24\n    mixins.push(_reactAddonsPureRenderMixin2['default']);                                                         // 25\n  }                                                                                                               //\n                                                                                                                  //\n  /* eslint-disable react/prefer-es6-class */                                                                     //\n  return _react2['default'].createClass({                                                                         // 10\n    displayName: 'MeteorDataContainer',                                                                           // 30\n    mixins: mixins,                                                                                               // 31\n    getMeteorData: function () {                                                                                  // 32\n      function getMeteorData() {                                                                                  //\n        return _getMeteorData(this.props);                                                                        // 33\n      }                                                                                                           //\n                                                                                                                  //\n      return getMeteorData;                                                                                       //\n    }(),                                                                                                          //\n    render: function () {                                                                                         // 35\n      function render() {                                                                                         //\n        return _react2['default'].createElement(Component, (0, _extends3['default'])({}, this.props, this.data));\n      }                                                                                                           //\n                                                                                                                  //\n      return render;                                                                                              //\n    }()                                                                                                           //\n  });                                                                                                             //\n} /**                                                                                                             //\n   * Container helper using react-meteor-data.                                                                    //\n   */                                                                                                             //\n                                                                                                                  //\nexports.default = createContainer;                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}}},{\"extensions\":[\".js\",\".json\",\".jsx\"]});\nvar exports = require(\"./node_modules/meteor/react-meteor-data/react-meteor-data.jsx\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['react-meteor-data'] = exports, {\n  ReactMeteorData: ReactMeteorData\n});\n\n})();\n","servePath":"/packages/react-meteor-data.js","sourceMap":{"version":3,"sources":["/packages/react-meteor-data/react-meteor-data.jsx","/packages/react-meteor-data/ReactMeteorData.jsx","/packages/react-meteor-data/createContainer.jsx"],"names":[],"mappings":"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","file":"/packages/react-meteor-data.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\ncheckNpmVersions({\n  react: '0.14.x',\n  'react-addons-pure-render-mixin': '0.14.x',\n});\n\nconst createContainer = require('./createContainer.jsx').default;\nconst ReactMeteorData = require('./ReactMeteorData.jsx').default;\n\nexport { createContainer, ReactMeteorData };\n","const ReactMeteorData = {\n  componentWillMount() {\n    this.data = {};\n    this._meteorDataManager = new MeteorDataManager(this);\n    const newData = this._meteorDataManager.calculateData();\n    this._meteorDataManager.updateData(newData);\n  },\n  componentWillUpdate(nextProps, nextState) {\n    const saveProps = this.props;\n    const saveState = this.state;\n    let newData;\n    try {\n      // Temporarily assign this.state and this.props,\n      // so that they are seen by getMeteorData!\n      // This is a simulation of how the proposed Observe API\n      // for React will work, which calls observe() after\n      // componentWillUpdate and after props and state are\n      // updated, but before render() is called.\n      // See https://github.com/facebook/react/issues/3398.\n      this.props = nextProps;\n      this.state = nextState;\n      newData = this._meteorDataManager.calculateData();\n    } finally {\n      this.props = saveProps;\n      this.state = saveState;\n    }\n\n    this._meteorDataManager.updateData(newData);\n  },\n  componentWillUnmount() {\n    this._meteorDataManager.dispose();\n  },\n};\n\n// A class to keep the state and utility methods needed to manage\n// the Meteor data for a component.\nclass MeteorDataManager {\n  constructor(component) {\n    this.component = component;\n    this.computation = null;\n    this.oldData = null;\n  }\n\n  dispose() {\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n  }\n\n  calculateData() {\n    const component = this.component;\n\n    if (! component.getMeteorData) {\n      return null;\n    }\n\n    // When rendering on the server, we don't want to use the Tracker.\n    // We only do the first rendering on the server so we can get the data right away\n    if (Meteor.isServer) {\n      return component.getMeteorData();\n    }\n\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n\n    let data;\n    // Use Tracker.nonreactive in case we are inside a Tracker Computation.\n    // This can happen if someone calls `ReactDOM.render` inside a Computation.\n    // In that case, we want to opt out of the normal behavior of nested\n    // Computations, where if the outer one is invalidated or stopped,\n    // it stops the inner one.\n    this.computation = Tracker.nonreactive(() => {\n      return Tracker.autorun((c) => {\n        if (c.firstRun) {\n          const savedSetState = component.setState;\n          try {\n            component.setState = () => {\n              throw new Error(\n\"Can't call `setState` inside `getMeteorData` as this could cause an endless\" +\n\" loop. To respond to Meteor data changing, consider making this component\" +\n\" a \\\"wrapper component\\\" that only fetches data and passes it in as props to\" +\n\" a child component. Then you can use `componentWillReceiveProps` in that\" +\n\" child component.\");\n            };\n\n            data = component.getMeteorData();\n          } finally {\n            component.setState = savedSetState;\n          }\n        } else {\n          // Stop this computation instead of using the re-run.\n          // We use a brand-new autorun for each call to getMeteorData\n          // to capture dependencies on any reactive data sources that\n          // are accessed.  The reason we can't use a single autorun\n          // for the lifetime of the component is that Tracker only\n          // re-runs autoruns at flush time, while we need to be able to\n          // re-call getMeteorData synchronously whenever we want, e.g.\n          // from componentWillUpdate.\n          c.stop();\n          // Calling forceUpdate() triggers componentWillUpdate which\n          // recalculates getMeteorData() and re-renders the component.\n          component.forceUpdate();\n        }\n      });\n    });\n\n    if (Package.mongo && Package.mongo.Mongo) {\n      Object.keys(data).forEach(function (key) {\n        if (data[key] instanceof Package.mongo.Mongo.Cursor) {\n          console.warn(\n  \"Warning: you are returning a Mongo cursor from getMeteorData. This value \" +\n  \"will not be reactive. You probably want to call `.fetch()` on the cursor \" +\n  \"before returning it.\");\n        }\n      });\n    }\n\n    return data;\n  }\n\n  updateData(newData) {\n    const component = this.component;\n    const oldData = this.oldData;\n\n    if (! (newData && (typeof newData) === 'object')) {\n      throw new Error(\"Expected object returned from getMeteorData\");\n    }\n    // update componentData in place based on newData\n    for (let key in newData) {\n      component.data[key] = newData[key];\n    }\n    // if there is oldData (which is every time this method is called\n    // except the first), delete keys in newData that aren't in\n    // oldData.  don't interfere with other keys, in case we are\n    // co-existing with something else that writes to a component's\n    // this.data.\n    if (oldData) {\n      for (let key in oldData) {\n        if (!(key in newData)) {\n          delete component.data[key];\n        }\n      }\n    }\n    this.oldData = newData;\n  }\n}\n\nexport default ReactMeteorData;\n","/**\n * Container helper using react-meteor-data.\n */\n\nimport React from 'react';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\n\nimport ReactMeteorData from './ReactMeteorData.jsx';\n\nexport default function createContainer(options = {}, Component) {\n  let expandedOptions = options;\n  if (typeof options === 'function') {\n    expandedOptions = {\n      getMeteorData: options,\n    };\n  }\n\n  const {\n    getMeteorData,\n    pure = true,\n  } = expandedOptions;\n\n  const mixins = [ReactMeteorData];\n  if (pure) {\n    mixins.push(PureRenderMixin);\n  }\n\n  /* eslint-disable react/prefer-es6-class */\n  return React.createClass({\n    displayName: 'MeteorDataContainer',\n    mixins,\n    getMeteorData() {\n      return getMeteorData(this.props);\n    },\n    render() {\n      return <Component {...this.props} {...this.data} />;\n    },\n  });\n}\n"]}}]