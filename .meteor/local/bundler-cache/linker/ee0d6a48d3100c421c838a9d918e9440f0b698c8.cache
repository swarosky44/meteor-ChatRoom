[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nvar Accounts = Package['accounts-base'].Accounts;\nvar _ = Package.underscore._;\nvar Template = Package.templating.Template;\nvar Session = Package.session.Session;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar passwordSignupFields, displayName, getLoginServices, hasPasswordService, dropdown, validateUsername, validateEmail, validatePassword;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/accounts-ui-unstyled/accounts_ui.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    // 1\n * @summary Accounts UI                                                                                                // 2\n * @namespace                                                                                                          // 3\n * @memberOf Accounts                                                                                                  // 4\n * @importFromPackage accounts-base                                                                                    // 5\n */                                                                                                                    // 6\nAccounts.ui = {};                                                                                                      // 7\n                                                                                                                       // 8\nAccounts.ui._options = {                                                                                               // 9\n  requestPermissions: {},                                                                                              // 10\n  requestOfflineToken: {},                                                                                             // 11\n  forceApprovalPrompt: {}                                                                                              // 12\n};                                                                                                                     // 13\n                                                                                                                       // 14\n// XXX refactor duplicated code in this function                                                                       // 15\n                                                                                                                       // 16\n/**                                                                                                                    // 17\n * @summary Configure the behavior of [`{{> loginButtons}}`](#accountsui).                                             // 18\n * @locus Client                                                                                                       // 19\n * @param {Object} options                                                                                             // 20\n * @param {Object} options.requestPermissions Which [permissions](#requestpermissions) to request from the user for each external service.\n * @param {Object} options.requestOfflineToken To ask the user for permission to act on their behalf when offline, map the relevant external service to `true`. Currently only supported with Google. See [Meteor.loginWithExternalService](#meteor_loginwithexternalservice) for more details.\n * @param {Object} options.forceApprovalPrompt If true, forces the user to approve the app's permissions, even if previously approved. Currently only supported with Google.\n * @param {String} options.passwordSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`USERNAME_AND_OPTIONAL_EMAIL`', '`USERNAME_ONLY`', or '`EMAIL_ONLY`' (default).\n * @importFromPackage accounts-base                                                                                    // 25\n */                                                                                                                    // 26\nAccounts.ui.config = function(options) {                                                                               // 27\n  // validate options keys                                                                                             // 28\n  var VALID_KEYS = ['passwordSignupFields', 'requestPermissions', 'requestOfflineToken', 'forceApprovalPrompt'];       // 29\n  _.each(_.keys(options), function (key) {                                                                             // 30\n    if (!_.contains(VALID_KEYS, key))                                                                                  // 31\n      throw new Error(\"Accounts.ui.config: Invalid key: \" + key);                                                      // 32\n  });                                                                                                                  // 33\n                                                                                                                       // 34\n  // deal with `passwordSignupFields`                                                                                  // 35\n  if (options.passwordSignupFields) {                                                                                  // 36\n    if (_.contains([                                                                                                   // 37\n      \"USERNAME_AND_EMAIL\",                                                                                            // 38\n      \"USERNAME_AND_OPTIONAL_EMAIL\",                                                                                   // 39\n      \"USERNAME_ONLY\",                                                                                                 // 40\n      \"EMAIL_ONLY\"                                                                                                     // 41\n    ], options.passwordSignupFields)) {                                                                                // 42\n      if (Accounts.ui._options.passwordSignupFields)                                                                   // 43\n        throw new Error(\"Accounts.ui.config: Can't set `passwordSignupFields` more than once\");                        // 44\n      else                                                                                                             // 45\n        Accounts.ui._options.passwordSignupFields = options.passwordSignupFields;                                      // 46\n    } else {                                                                                                           // 47\n      throw new Error(\"Accounts.ui.config: Invalid option for `passwordSignupFields`: \" + options.passwordSignupFields);\n    }                                                                                                                  // 49\n  }                                                                                                                    // 50\n                                                                                                                       // 51\n  // deal with `requestPermissions`                                                                                    // 52\n  if (options.requestPermissions) {                                                                                    // 53\n    _.each(options.requestPermissions, function (scope, service) {                                                     // 54\n      if (Accounts.ui._options.requestPermissions[service]) {                                                          // 55\n        throw new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \" + service);           // 56\n      } else if (!(scope instanceof Array)) {                                                                          // 57\n        throw new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");                        // 58\n      } else {                                                                                                         // 59\n        Accounts.ui._options.requestPermissions[service] = scope;                                                      // 60\n      }                                                                                                                // 61\n    });                                                                                                                // 62\n  }                                                                                                                    // 63\n                                                                                                                       // 64\n  // deal with `requestOfflineToken`                                                                                   // 65\n  if (options.requestOfflineToken) {                                                                                   // 66\n    _.each(options.requestOfflineToken, function (value, service) {                                                    // 67\n      if (service !== 'google')                                                                                        // 68\n        throw new Error(\"Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.\");   // 69\n                                                                                                                       // 70\n      if (Accounts.ui._options.requestOfflineToken[service]) {                                                         // 71\n        throw new Error(\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \" + service);          // 72\n      } else {                                                                                                         // 73\n        Accounts.ui._options.requestOfflineToken[service] = value;                                                     // 74\n      }                                                                                                                // 75\n    });                                                                                                                // 76\n  }                                                                                                                    // 77\n                                                                                                                       // 78\n  // deal with `forceApprovalPrompt`                                                                                   // 79\n  if (options.forceApprovalPrompt) {                                                                                   // 80\n    _.each(options.forceApprovalPrompt, function (value, service) {                                                    // 81\n      if (service !== 'google')                                                                                        // 82\n        throw new Error(\"Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.\");   // 83\n                                                                                                                       // 84\n      if (Accounts.ui._options.forceApprovalPrompt[service]) {                                                         // 85\n        throw new Error(\"Accounts.ui.config: Can't set `forceApprovalPrompt` more than once for \" + service);          // 86\n      } else {                                                                                                         // 87\n        Accounts.ui._options.forceApprovalPrompt[service] = value;                                                     // 88\n      }                                                                                                                // 89\n    });                                                                                                                // 90\n  }                                                                                                                    // 91\n};                                                                                                                     // 92\n                                                                                                                       // 93\npasswordSignupFields = function () {                                                                                   // 94\n  return Accounts.ui._options.passwordSignupFields || \"EMAIL_ONLY\";                                                    // 95\n};                                                                                                                     // 96\n                                                                                                                       // 97\n                                                                                                                       // 98\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/accounts-ui-unstyled/template.login_buttons.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"loginButtons\");                                                                                  // 2\nTemplate[\"loginButtons\"] = new Template(\"Template.loginButtons\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    id: \"login-buttons\",                                                                                               // 6\n    \"class\": function() {                                                                                              // 7\n      return [ \"login-buttons-dropdown-align-\", Spacebars.mustache(view.lookup(\"align\")) ];                            // 8\n    }                                                                                                                  // 9\n  }, \"\\n    \", Blaze.If(function() {                                                                                   // 10\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                 // 11\n  }, function() {                                                                                                      // 12\n    return [ \"\\n      \", Blaze.If(function() {                                                                         // 13\n      return Spacebars.call(view.lookup(\"loggingIn\"));                                                                 // 14\n    }, function() {                                                                                                    // 15\n      return [ \"\\n        \\n        \", Blaze.If(function() {                                                           // 16\n        return Spacebars.call(view.lookup(\"dropdown\"));                                                                // 17\n      }, function() {                                                                                                  // 18\n        return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingIn\")), \"\\n        \" ];     // 19\n      }, function() {                                                                                                  // 20\n        return [ \"\\n          \", HTML.DIV({                                                                            // 21\n          \"class\": \"login-buttons-with-only-one-button\"                                                                // 22\n        }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingInSingleLoginButton\")), \"\\n          \"), \"\\n        \" ];\n      }), \"\\n      \" ];                                                                                                // 24\n    }, function() {                                                                                                    // 25\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedIn\")), \"\\n      \" ];            // 26\n    }), \"\\n    \" ];                                                                                                    // 27\n  }, function() {                                                                                                      // 28\n    return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOut\")), \"\\n    \" ];                 // 29\n  }), \"\\n  \");                                                                                                         // 30\n}));                                                                                                                   // 31\n                                                                                                                       // 32\nTemplate.__checkName(\"_loginButtonsLoggedIn\");                                                                         // 33\nTemplate[\"_loginButtonsLoggedIn\"] = new Template(\"Template._loginButtonsLoggedIn\", (function() {                       // 34\n  var view = this;                                                                                                     // 35\n  return Blaze.If(function() {                                                                                         // 36\n    return Spacebars.call(view.lookup(\"dropdown\"));                                                                    // 37\n  }, function() {                                                                                                      // 38\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedInDropdown\")), \"\\n  \" ];              // 39\n  }, function() {                                                                                                      // 40\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 41\n      \"class\": \"login-buttons-with-only-one-button\"                                                                    // 42\n    }, \"\\n      \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedInSingleLogoutButton\")), \"\\n    \"), \"\\n  \" ];\n  });                                                                                                                  // 44\n}));                                                                                                                   // 45\n                                                                                                                       // 46\nTemplate.__checkName(\"_loginButtonsLoggedOut\");                                                                        // 47\nTemplate[\"_loginButtonsLoggedOut\"] = new Template(\"Template._loginButtonsLoggedOut\", (function() {                     // 48\n  var view = this;                                                                                                     // 49\n  return Blaze.If(function() {                                                                                         // 50\n    return Spacebars.call(view.lookup(\"services\"));                                                                    // 51\n  }, function() {                                                                                                      // 52\n    return [ \" \\n    \", Blaze.If(function() {                                                                          // 53\n      return Spacebars.call(view.lookup(\"configurationLoaded\"));                                                       // 54\n    }, function() {                                                                                                    // 55\n      return [ \"\\n      \", Blaze.If(function() {                                                                       // 56\n        return Spacebars.call(view.lookup(\"dropdown\"));                                                                // 57\n      }, function() {                                                                                                  // 58\n        return [ \" \\n        \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutDropdown\")), \"\\n      \" ];\n      }, function() {                                                                                                  // 60\n        return [ \"\\n        \", Spacebars.With(function() {                                                             // 61\n          return Spacebars.call(view.lookup(\"singleService\"));                                                         // 62\n        }, function() {                                                                                                // 63\n          return [ \" \\n          \", HTML.DIV({                                                                         // 64\n            \"class\": \"login-buttons-with-only-one-button\"                                                              // 65\n          }, \"\\n            \", Blaze.If(function() {                                                                   // 66\n            return Spacebars.call(view.lookup(\"loggingIn\"));                                                           // 67\n          }, function() {                                                                                              // 68\n            return [ \"\\n              \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingInSingleLoginButton\")), \"\\n            \" ];\n          }, function() {                                                                                              // 70\n            return [ \"\\n              \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutSingleLoginButton\")), \"\\n            \" ];\n          }), \"\\n          \"), \"\\n        \" ];                                                                         // 72\n        }), \"\\n      \" ];                                                                                              // 73\n      }), \"\\n    \" ];                                                                                                  // 74\n    }), \"\\n  \" ];                                                                                                      // 75\n  }, function() {                                                                                                      // 76\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 77\n      \"class\": \"no-services\"                                                                                           // 78\n    }, \"No login services configured\"), \"\\n  \" ];                                                                      // 79\n  });                                                                                                                  // 80\n}));                                                                                                                   // 81\n                                                                                                                       // 82\nTemplate.__checkName(\"_loginButtonsMessages\");                                                                         // 83\nTemplate[\"_loginButtonsMessages\"] = new Template(\"Template._loginButtonsMessages\", (function() {                       // 84\n  var view = this;                                                                                                     // 85\n  return [ Blaze.If(function() {                                                                                       // 86\n    return Spacebars.call(view.lookup(\"errorMessage\"));                                                                // 87\n  }, function() {                                                                                                      // 88\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 89\n      \"class\": \"message error-message\"                                                                                 // 90\n    }, Blaze.View(\"lookup:errorMessage\", function() {                                                                  // 91\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));                                                          // 92\n    })), \"\\n  \" ];                                                                                                     // 93\n  }), \"\\n  \", Blaze.If(function() {                                                                                    // 94\n    return Spacebars.call(view.lookup(\"infoMessage\"));                                                                 // 95\n  }, function() {                                                                                                      // 96\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 97\n      \"class\": \"message info-message\"                                                                                  // 98\n    }, Blaze.View(\"lookup:infoMessage\", function() {                                                                   // 99\n      return Spacebars.mustache(view.lookup(\"infoMessage\"));                                                           // 100\n    })), \"\\n  \" ];                                                                                                     // 101\n  }) ];                                                                                                                // 102\n}));                                                                                                                   // 103\n                                                                                                                       // 104\nTemplate.__checkName(\"_loginButtonsLoggingIn\");                                                                        // 105\nTemplate[\"_loginButtonsLoggingIn\"] = new Template(\"Template._loginButtonsLoggingIn\", (function() {                     // 106\n  var view = this;                                                                                                     // 107\n  return [ Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingInPadding\")), HTML.Raw('\\n  <div class=\"loading\">&nbsp;</div>\\n  '), Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingInPadding\")) ];\n}));                                                                                                                   // 109\n                                                                                                                       // 110\nTemplate.__checkName(\"_loginButtonsLoggingInPadding\");                                                                 // 111\nTemplate[\"_loginButtonsLoggingInPadding\"] = new Template(\"Template._loginButtonsLoggingInPadding\", (function() {       // 112\n  var view = this;                                                                                                     // 113\n  return Blaze.Unless(function() {                                                                                     // 114\n    return Spacebars.call(view.lookup(\"dropdown\"));                                                                    // 115\n  }, function() {                                                                                                      // 116\n    return [ \"\\n    \\n    \", HTML.DIV({                                                                                // 117\n      \"class\": \"login-buttons-padding\"                                                                                 // 118\n    }, \"\\n      \", HTML.DIV({                                                                                          // 119\n      \"class\": \"login-button single-login-button\",                                                                     // 120\n      style: \"visibility: hidden;\",                                                                                    // 121\n      id: \"login-buttons-logout\"                                                                                       // 122\n    }, HTML.CharRef({                                                                                                  // 123\n      html: \"&nbsp;\",                                                                                                  // 124\n      str: \" \"                                                                                                         // 125\n    })), \"\\n    \"), \"\\n  \" ];                                                                                          // 126\n  }, function() {                                                                                                      // 127\n    return [ \"\\n    \\n    \", HTML.DIV({                                                                                // 128\n      \"class\": \"login-buttons-padding\"                                                                                 // 129\n    }), \"\\n  \" ];                                                                                                      // 130\n  });                                                                                                                  // 131\n}));                                                                                                                   // 132\n                                                                                                                       // 133\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/accounts-ui-unstyled/template.login_buttons_single.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"_loginButtonsLoggedOutSingleLoginButton\");                                                       // 2\nTemplate[\"_loginButtonsLoggedOutSingleLoginButton\"] = new Template(\"Template._loginButtonsLoggedOutSingleLoginButton\", (function() {\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"login-text-and-button\"                                                                                   // 6\n  }, \"\\n    \", HTML.DIV({                                                                                              // 7\n    \"class\": function() {                                                                                              // 8\n      return [ \"login-button single-login-button \", Blaze.Unless(function() {                                          // 9\n        return Spacebars.call(view.lookup(\"configured\"));                                                              // 10\n      }, function() {                                                                                                  // 11\n        return \"configure-button\";                                                                                     // 12\n      }) ];                                                                                                            // 13\n    },                                                                                                                 // 14\n    id: function() {                                                                                                   // 15\n      return [ \"login-buttons-\", Spacebars.mustache(view.lookup(\"name\")) ];                                            // 16\n    }                                                                                                                  // 17\n  }, \"\\n      \", HTML.DIV({                                                                                            // 18\n    \"class\": \"login-image\",                                                                                            // 19\n    id: function() {                                                                                                   // 20\n      return [ \"login-buttons-image-\", Spacebars.mustache(view.lookup(\"name\")) ];                                      // 21\n    }                                                                                                                  // 22\n  }), \"\\n      \", Blaze.If(function() {                                                                                // 23\n    return Spacebars.call(view.lookup(\"configured\"));                                                                  // 24\n  }, function() {                                                                                                      // 25\n    return [ \"\\n        \", HTML.SPAN({                                                                                 // 26\n      \"class\": function() {                                                                                            // 27\n        return [ \"text-besides-image sign-in-text-\", Spacebars.mustache(view.lookup(\"name\")) ];                        // 28\n      }                                                                                                                // 29\n    }, \"Sign in with \", Blaze.View(\"lookup:capitalizedName\", function() {                                              // 30\n      return Spacebars.mustache(view.lookup(\"capitalizedName\"));                                                       // 31\n    })), \"\\n      \" ];                                                                                                 // 32\n  }, function() {                                                                                                      // 33\n    return [ \"\\n        \", HTML.SPAN({                                                                                 // 34\n      \"class\": function() {                                                                                            // 35\n        return [ \"text-besides-image configure-text-\", Spacebars.mustache(view.lookup(\"name\")) ];                      // 36\n      }                                                                                                                // 37\n    }, \"Configure \", Blaze.View(\"lookup:capitalizedName\", function() {                                                 // 38\n      return Spacebars.mustache(view.lookup(\"capitalizedName\"));                                                       // 39\n    }), \" Login\"), \"\\n      \" ];                                                                                       // 40\n  }), \"\\n    \"), \"\\n  \");                                                                                              // 41\n}));                                                                                                                   // 42\n                                                                                                                       // 43\nTemplate.__checkName(\"_loginButtonsLoggingInSingleLoginButton\");                                                       // 44\nTemplate[\"_loginButtonsLoggingInSingleLoginButton\"] = new Template(\"Template._loginButtonsLoggingInSingleLoginButton\", (function() {\n  var view = this;                                                                                                     // 46\n  return HTML.DIV({                                                                                                    // 47\n    \"class\": \"login-text-and-button\"                                                                                   // 48\n  }, \"\\n    \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingIn\")), \"\\n  \");                              // 49\n}));                                                                                                                   // 50\n                                                                                                                       // 51\nTemplate.__checkName(\"_loginButtonsLoggedInSingleLogoutButton\");                                                       // 52\nTemplate[\"_loginButtonsLoggedInSingleLogoutButton\"] = new Template(\"Template._loginButtonsLoggedInSingleLogoutButton\", (function() {\n  var view = this;                                                                                                     // 54\n  return HTML.DIV({                                                                                                    // 55\n    \"class\": \"login-text-and-button\"                                                                                   // 56\n  }, \"\\n    \", HTML.DIV({                                                                                              // 57\n    \"class\": \"login-display-name\"                                                                                      // 58\n  }, \"\\n      \", Blaze.View(\"lookup:displayName\", function() {                                                         // 59\n    return Spacebars.mustache(view.lookup(\"displayName\"));                                                             // 60\n  }), \"\\n    \"), HTML.Raw('\\n    <div class=\"login-button single-login-button\" id=\"login-buttons-logout\">Sign Out</div>\\n  '));\n}));                                                                                                                   // 62\n                                                                                                                       // 63\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/accounts-ui-unstyled/template.login_buttons_dropdown.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"_loginButtonsLoggedInDropdown\");                                                                 // 2\nTemplate[\"_loginButtonsLoggedInDropdown\"] = new Template(\"Template._loginButtonsLoggedInDropdown\", (function() {       // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"login-link-and-dropdown-list\"                                                                            // 6\n  }, \"\\n    \", HTML.A({                                                                                                // 7\n    \"class\": \"login-link-text\",                                                                                        // 8\n    id: \"login-name-link\"                                                                                              // 9\n  }, \"\\n      \", Blaze.View(\"lookup:displayName\", function() {                                                         // 10\n    return Spacebars.mustache(view.lookup(\"displayName\"));                                                             // 11\n  }), \" ▾\\n    \"), \"\\n\\n    \", Blaze.If(function() {                                                                   // 12\n    return Spacebars.call(view.lookup(\"dropdownVisible\"));                                                             // 13\n  }, function() {                                                                                                      // 14\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 15\n      id: \"login-dropdown-list\",                                                                                       // 16\n      \"class\": \"accounts-dialog\"                                                                                       // 17\n    }, \"\\n        \", HTML.A({                                                                                          // 18\n      \"class\": \"login-close-text\"                                                                                      // 19\n    }, \"Close\"), \"\\n        \", HTML.DIV({                                                                              // 20\n      \"class\": \"login-close-text-clear\"                                                                                // 21\n    }), \"\\n\\n        \", Blaze.If(function() {                                                                          // 22\n      return Spacebars.call(view.lookup(\"inMessageOnlyFlow\"));                                                         // 23\n    }, function() {                                                                                                    // 24\n      return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n        \" ];        // 25\n    }, function() {                                                                                                    // 26\n      return [ \"\\n          \", Blaze.If(function() {                                                                   // 27\n        return Spacebars.call(view.lookup(\"inChangePasswordFlow\"));                                                    // 28\n      }, function() {                                                                                                  // 29\n        return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"_loginButtonsChangePassword\")), \"\\n          \" ];\n      }, function() {                                                                                                  // 31\n        return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedInDropdownActions\")), \"\\n          \" ];\n      }), \"\\n        \" ];                                                                                              // 33\n    }), \"\\n      \"), \"\\n    \" ];                                                                                       // 34\n  }), \"\\n  \");                                                                                                         // 35\n}));                                                                                                                   // 36\n                                                                                                                       // 37\nTemplate.__checkName(\"_loginButtonsLoggedInDropdownActions\");                                                          // 38\nTemplate[\"_loginButtonsLoggedInDropdownActions\"] = new Template(\"Template._loginButtonsLoggedInDropdownActions\", (function() {\n  var view = this;                                                                                                     // 40\n  return [ Blaze.If(function() {                                                                                       // 41\n    return Spacebars.call(view.lookup(\"allowChangingPassword\"));                                                       // 42\n  }, function() {                                                                                                      // 43\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 44\n      \"class\": \"login-button\",                                                                                         // 45\n      id: \"login-buttons-open-change-password\"                                                                         // 46\n    }, \"\\n      Change password\\n    \"), \"\\n  \" ];                                                                     // 47\n  }), HTML.Raw('\\n\\n  <div class=\"login-button\" id=\"login-buttons-logout\">\\n    Sign out\\n  </div>\\n\\n  '), Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")) ];\n}));                                                                                                                   // 49\n                                                                                                                       // 50\nTemplate.__checkName(\"_loginButtonsLoggedOutDropdown\");                                                                // 51\nTemplate[\"_loginButtonsLoggedOutDropdown\"] = new Template(\"Template._loginButtonsLoggedOutDropdown\", (function() {     // 52\n  var view = this;                                                                                                     // 53\n  return HTML.DIV({                                                                                                    // 54\n    \"class\": function() {                                                                                              // 55\n      return [ \"login-link-and-dropdown-list \", Spacebars.mustache(view.lookup(\"additionalClasses\")) ];                // 56\n    }                                                                                                                  // 57\n  }, \"\\n    \", Blaze.If(function() {                                                                                   // 58\n    return Spacebars.call(view.lookup(\"dropdownVisible\"));                                                             // 59\n  }, function() {                                                                                                      // 60\n    return [ \"\\n      \\n      \", HTML.A({                                                                              // 61\n      \"class\": \"login-link-text\",                                                                                      // 62\n      id: \"login-sign-in-link\"                                                                                         // 63\n    }, \"Sign in ▾\"), \"\\n      \", HTML.DIV({                                                                            // 64\n      id: \"login-dropdown-list\",                                                                                       // 65\n      \"class\": \"accounts-dialog\"                                                                                       // 66\n    }, \"\\n        \", HTML.A({                                                                                          // 67\n      \"class\": \"login-close-text\"                                                                                      // 68\n    }, \"Close\"), \"\\n        \", Blaze.If(function() {                                                                   // 69\n      return Spacebars.call(view.lookup(\"loggingIn\"));                                                                 // 70\n    }, function() {                                                                                                    // 71\n      return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingIn\")), \"\\n        \" ];       // 72\n    }), \"\\n        \", HTML.DIV({                                                                                       // 73\n      \"class\": \"login-close-text-clear\"                                                                                // 74\n    }), \"\\n        \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutAllServices\")), \"\\n      \"), \"\\n    \" ];\n  }, function() {                                                                                                      // 76\n    return [ \"\\n      \", Blaze.If(function() {                                                                         // 77\n      return Spacebars.call(view.lookup(\"loggingIn\"));                                                                 // 78\n    }, function() {                                                                                                    // 79\n      return [ \"\\n        \\n        \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggingIn\")), \"\\n      \" ];\n    }, function() {                                                                                                    // 81\n      return [ \"\\n        \", HTML.A({                                                                                  // 82\n        \"class\": \"login-link-text\",                                                                                    // 83\n        id: \"login-sign-in-link\"                                                                                       // 84\n      }, \"Sign in ▾\"), \"\\n      \" ];                                                                                   // 85\n    }), \"\\n    \" ];                                                                                                    // 86\n  }), \"\\n  \");                                                                                                         // 87\n}));                                                                                                                   // 88\n                                                                                                                       // 89\nTemplate.__checkName(\"_loginButtonsLoggedOutAllServices\");                                                             // 90\nTemplate[\"_loginButtonsLoggedOutAllServices\"] = new Template(\"Template._loginButtonsLoggedOutAllServices\", (function() {\n  var view = this;                                                                                                     // 92\n  return [ Blaze.Each(function() {                                                                                     // 93\n    return Spacebars.call(view.lookup(\"services\"));                                                                    // 94\n  }, function() {                                                                                                      // 95\n    return [ \"\\n    \", Blaze.If(function() {                                                                           // 96\n      return Spacebars.call(view.lookup(\"isPasswordService\"));                                                         // 97\n    }, function() {                                                                                                    // 98\n      return [ \"\\n      \", Blaze.If(function() {                                                                       // 99\n        return Spacebars.call(view.lookup(\"hasOtherServices\"));                                                        // 100\n      }, function() {                                                                                                  // 101\n        return [ \" \\n        \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutPasswordServiceSeparator\")), \"\\n      \" ];\n      }), \"\\n      \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutPasswordService\")), \"\\n    \" ];     // 103\n    }, function() {                                                                                                    // 104\n      return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"_loginButtonsLoggedOutSingleLoginButton\")), \"\\n    \" ];\n    }), \"\\n  \" ];                                                                                                      // 106\n  }), \"\\n\\n  \", Blaze.Unless(function() {                                                                              // 107\n    return Spacebars.call(view.lookup(\"hasPasswordService\"));                                                          // 108\n  }, function() {                                                                                                      // 109\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n  \" ];                      // 110\n  }) ];                                                                                                                // 111\n}));                                                                                                                   // 112\n                                                                                                                       // 113\nTemplate.__checkName(\"_loginButtonsLoggedOutPasswordServiceSeparator\");                                                // 114\nTemplate[\"_loginButtonsLoggedOutPasswordServiceSeparator\"] = new Template(\"Template._loginButtonsLoggedOutPasswordServiceSeparator\", (function() {\n  var view = this;                                                                                                     // 116\n  return HTML.Raw('<div class=\"or\">\\n    <span class=\"hline\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n    <span class=\"or-text\">or</span>\\n    <span class=\"hline\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n  </div>');\n}));                                                                                                                   // 118\n                                                                                                                       // 119\nTemplate.__checkName(\"_loginButtonsLoggedOutPasswordService\");                                                         // 120\nTemplate[\"_loginButtonsLoggedOutPasswordService\"] = new Template(\"Template._loginButtonsLoggedOutPasswordService\", (function() {\n  var view = this;                                                                                                     // 122\n  return Blaze.If(function() {                                                                                         // 123\n    return Spacebars.call(view.lookup(\"inForgotPasswordFlow\"));                                                        // 124\n  }, function() {                                                                                                      // 125\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"_forgotPasswordForm\")), \"\\n  \" ];                        // 126\n  }, function() {                                                                                                      // 127\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 128\n      \"class\": \"login-form login-password-form\"                                                                        // 129\n    }, \"\\n      \", Blaze.Each(function() {                                                                             // 130\n      return Spacebars.call(view.lookup(\"fields\"));                                                                    // 131\n    }, function() {                                                                                                    // 132\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"_loginButtonsFormField\")), \"\\n      \" ];           // 133\n    }), \"\\n\\n      \", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\\n      \", HTML.DIV({        // 134\n      \"class\": \"login-button login-button-form-submit\",                                                                // 135\n      id: \"login-buttons-password\"                                                                                     // 136\n    }, \"\\n        \", Blaze.If(function() {                                                                             // 137\n      return Spacebars.call(view.lookup(\"inSignupFlow\"));                                                              // 138\n    }, function() {                                                                                                    // 139\n      return \"\\n          Create account\\n        \";                                                                   // 140\n    }, function() {                                                                                                    // 141\n      return \"\\n          Sign in\\n        \";                                                                          // 142\n    }), \"\\n      \"), \"\\n\\n      \", Blaze.If(function() {                                                               // 143\n      return Spacebars.call(view.lookup(\"inLoginFlow\"));                                                               // 144\n    }, function() {                                                                                                    // 145\n      return [ \"\\n        \", Blaze.If(function() {                                                                     // 146\n        return Spacebars.call(view.lookup(\"showCreateAccountLink\"));                                                   // 147\n      }, function() {                                                                                                  // 148\n        return [ \"\\n          \", HTML.DIV({                                                                            // 149\n          \"class\": \"additional-link-container\"                                                                         // 150\n        }, \"\\n            \", HTML.A({                                                                                  // 151\n          id: \"signup-link\",                                                                                           // 152\n          \"class\": \"additional-link\"                                                                                   // 153\n        }, \"Create account\"), \"\\n          \"), \"\\n        \" ];                                                         // 154\n      }), \"\\n\\n        \", Blaze.If(function() {                                                                        // 155\n        return Spacebars.call(view.lookup(\"showForgotPasswordLink\"));                                                  // 156\n      }, function() {                                                                                                  // 157\n        return [ \"\\n          \", HTML.DIV({                                                                            // 158\n          \"class\": \"additional-link-container\"                                                                         // 159\n        }, \"\\n            \", HTML.A({                                                                                  // 160\n          id: \"forgot-password-link\",                                                                                  // 161\n          \"class\": \"additional-link\"                                                                                   // 162\n        }, \"Forgot password\"), \"\\n          \"), \"\\n        \" ];                                                        // 163\n      }), \"\\n      \" ];                                                                                                // 164\n    }), \"\\n\\n      \", Blaze.If(function() {                                                                            // 165\n      return Spacebars.call(view.lookup(\"inSignupFlow\"));                                                              // 166\n    }, function() {                                                                                                    // 167\n      return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"_loginButtonsBackToLoginLink\")), \"\\n      \" ];     // 168\n    }), \"\\n    \"), \"\\n  \" ];                                                                                           // 169\n  });                                                                                                                  // 170\n}));                                                                                                                   // 171\n                                                                                                                       // 172\nTemplate.__checkName(\"_forgotPasswordForm\");                                                                           // 173\nTemplate[\"_forgotPasswordForm\"] = new Template(\"Template._forgotPasswordForm\", (function() {                           // 174\n  var view = this;                                                                                                     // 175\n  return HTML.DIV({                                                                                                    // 176\n    \"class\": \"login-form\"                                                                                              // 177\n  }, HTML.Raw('\\n    <div id=\"forgot-password-email-label-and-input\"> \\n      <label id=\"forgot-password-email-label\" for=\"forgot-password-email\">Email</label>\\n      <input id=\"forgot-password-email\" type=\"email\">\\n    </div>\\n\\n    '), Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), HTML.Raw('\\n\\n    <div class=\"login-button login-button-form-submit\" id=\"login-buttons-forgot-password\">\\n      Reset password\\n    </div>\\n\\n    '), Spacebars.include(view.lookupTemplate(\"_loginButtonsBackToLoginLink\")), \"\\n  \");\n}));                                                                                                                   // 179\n                                                                                                                       // 180\nTemplate.__checkName(\"_loginButtonsBackToLoginLink\");                                                                  // 181\nTemplate[\"_loginButtonsBackToLoginLink\"] = new Template(\"Template._loginButtonsBackToLoginLink\", (function() {         // 182\n  var view = this;                                                                                                     // 183\n  return HTML.Raw('<div class=\"additional-link-container\">\\n    <a id=\"back-to-login-link\" class=\"additional-link\">Sign in</a>\\n  </div>');\n}));                                                                                                                   // 185\n                                                                                                                       // 186\nTemplate.__checkName(\"_loginButtonsFormField\");                                                                        // 187\nTemplate[\"_loginButtonsFormField\"] = new Template(\"Template._loginButtonsFormField\", (function() {                     // 188\n  var view = this;                                                                                                     // 189\n  return Blaze.If(function() {                                                                                         // 190\n    return Spacebars.call(view.lookup(\"visible\"));                                                                     // 191\n  }, function() {                                                                                                      // 192\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 193\n      id: function() {                                                                                                 // 194\n        return [ \"login-\", Spacebars.mustache(view.lookup(\"fieldName\")), \"-label-and-input\" ];                         // 195\n      }                                                                                                                // 196\n    }, \"\\n      \", HTML.LABEL({                                                                                        // 197\n      id: function() {                                                                                                 // 198\n        return [ \"login-\", Spacebars.mustache(view.lookup(\"fieldName\")), \"-label\" ];                                   // 199\n      },                                                                                                               // 200\n      \"for\": function() {                                                                                              // 201\n        return [ \"login-\", Spacebars.mustache(view.lookup(\"fieldName\")) ];                                             // 202\n      }                                                                                                                // 203\n    }, \"\\n        \", Blaze.View(\"lookup:fieldLabel\", function() {                                                      // 204\n      return Spacebars.mustache(view.lookup(\"fieldLabel\"));                                                            // 205\n    }), \"\\n      \"), \"\\n      \", HTML.INPUT({                                                                          // 206\n      id: function() {                                                                                                 // 207\n        return [ \"login-\", Spacebars.mustache(view.lookup(\"fieldName\")) ];                                             // 208\n      },                                                                                                               // 209\n      type: function() {                                                                                               // 210\n        return Spacebars.mustache(view.lookup(\"inputType\"));                                                           // 211\n      }                                                                                                                // 212\n    }), \"\\n    \"), \"\\n  \" ];                                                                                           // 213\n  });                                                                                                                  // 214\n}));                                                                                                                   // 215\n                                                                                                                       // 216\nTemplate.__checkName(\"_loginButtonsChangePassword\");                                                                   // 217\nTemplate[\"_loginButtonsChangePassword\"] = new Template(\"Template._loginButtonsChangePassword\", (function() {           // 218\n  var view = this;                                                                                                     // 219\n  return [ Blaze.Each(function() {                                                                                     // 220\n    return Spacebars.call(view.lookup(\"fields\"));                                                                      // 221\n  }, function() {                                                                                                      // 222\n    return [ \"\\n    \", Spacebars.include(view.lookupTemplate(\"_loginButtonsFormField\")), \"\\n  \" ];                     // 223\n  }), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), HTML.Raw('\\n\\n  <div class=\"login-button login-button-form-submit\" id=\"login-buttons-do-change-password\">\\n    Change password\\n  </div>') ];\n}));                                                                                                                   // 225\n                                                                                                                       // 226\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/accounts-ui-unstyled/template.login_buttons_dialogs.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.body.addContent((function() {                                                                                 // 2\n  var view = this;                                                                                                     // 3\n  return [ Spacebars.include(view.lookupTemplate(\"_resetPasswordDialog\")), \"\\n  \", Spacebars.include(view.lookupTemplate(\"_justResetPasswordDialog\")), \"\\n  \", Spacebars.include(view.lookupTemplate(\"_enrollAccountDialog\")), \"\\n  \", Spacebars.include(view.lookupTemplate(\"_justVerifiedEmailDialog\")), \"\\n  \", Spacebars.include(view.lookupTemplate(\"_configureLoginServiceDialog\")), \"\\n  \", Spacebars.include(view.lookupTemplate(\"_configureLoginOnDesktopDialog\")), \"\\n\\n  \\n  \", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessagesDialog\")) ];\n}));                                                                                                                   // 5\nMeteor.startup(Template.body.renderToDocument);                                                                        // 6\n                                                                                                                       // 7\nTemplate.__checkName(\"_resetPasswordDialog\");                                                                          // 8\nTemplate[\"_resetPasswordDialog\"] = new Template(\"Template._resetPasswordDialog\", (function() {                         // 9\n  var view = this;                                                                                                     // 10\n  return Blaze.If(function() {                                                                                         // 11\n    return Spacebars.call(view.lookup(\"inResetPasswordFlow\"));                                                         // 12\n  }, function() {                                                                                                      // 13\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 14\n      \"class\": \"hide-background\"                                                                                       // 15\n    }), \"\\n\\n    \", HTML.DIV({                                                                                         // 16\n      \"class\": \"accounts-dialog accounts-centered-dialog\"                                                              // 17\n    }, \"\\n      \", HTML.LABEL({                                                                                        // 18\n      id: \"reset-password-new-password-label\",                                                                         // 19\n      \"for\": \"reset-password-new-password\"                                                                             // 20\n    }, \"\\n        New password\\n      \"), \"\\n\\n      \", HTML.DIV({                                                     // 21\n      \"class\": \"reset-password-new-password-wrapper\"                                                                   // 22\n    }, \"\\n        \", HTML.INPUT({                                                                                      // 23\n      id: \"reset-password-new-password\",                                                                               // 24\n      type: \"password\"                                                                                                 // 25\n    }), \"\\n      \"), \"\\n\\n      \", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\\n      \", HTML.DIV({\n      \"class\": \"login-button login-button-form-submit\",                                                                // 27\n      id: \"login-buttons-reset-password-button\"                                                                        // 28\n    }, \"\\n        Set password\\n      \"), \"\\n\\n      \", HTML.A({                                                       // 29\n      \"class\": \"accounts-close\",                                                                                       // 30\n      id: \"login-buttons-cancel-reset-password\"                                                                        // 31\n    }, HTML.CharRef({                                                                                                  // 32\n      html: \"&times;\",                                                                                                 // 33\n      str: \"×\"                                                                                                         // 34\n    })), \"\\n    \"), \"\\n  \" ];                                                                                          // 35\n  });                                                                                                                  // 36\n}));                                                                                                                   // 37\n                                                                                                                       // 38\nTemplate.__checkName(\"_justResetPasswordDialog\");                                                                      // 39\nTemplate[\"_justResetPasswordDialog\"] = new Template(\"Template._justResetPasswordDialog\", (function() {                 // 40\n  var view = this;                                                                                                     // 41\n  return Blaze.If(function() {                                                                                         // 42\n    return Spacebars.call(view.lookup(\"visible\"));                                                                     // 43\n  }, function() {                                                                                                      // 44\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 45\n      \"class\": \"accounts-dialog accounts-centered-dialog\"                                                              // 46\n    }, \"\\n      Password reset.\\n      You are now logged in as \", Blaze.View(\"lookup:displayName\", function() {       // 47\n      return Spacebars.mustache(view.lookup(\"displayName\"));                                                           // 48\n    }), \".\\n      \", HTML.DIV({                                                                                        // 49\n      \"class\": \"login-button\",                                                                                         // 50\n      id: \"just-verified-dismiss-button\"                                                                               // 51\n    }, \"Dismiss\"), \"\\n    \"), \"\\n  \" ];                                                                                // 52\n  });                                                                                                                  // 53\n}));                                                                                                                   // 54\n                                                                                                                       // 55\nTemplate.__checkName(\"_enrollAccountDialog\");                                                                          // 56\nTemplate[\"_enrollAccountDialog\"] = new Template(\"Template._enrollAccountDialog\", (function() {                         // 57\n  var view = this;                                                                                                     // 58\n  return Blaze.If(function() {                                                                                         // 59\n    return Spacebars.call(view.lookup(\"inEnrollAccountFlow\"));                                                         // 60\n  }, function() {                                                                                                      // 61\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 62\n      \"class\": \"hide-background\"                                                                                       // 63\n    }), \"\\n\\n    \", HTML.DIV({                                                                                         // 64\n      \"class\": \"accounts-dialog accounts-centered-dialog\"                                                              // 65\n    }, \"\\n      \", HTML.LABEL({                                                                                        // 66\n      id: \"enroll-account-password-label\",                                                                             // 67\n      \"for\": \"enroll-account-password\"                                                                                 // 68\n    }, \"\\n        Choose a password\\n      \"), \"\\n\\n      \", HTML.DIV({                                                // 69\n      \"class\": \"enroll-account-password-wrapper\"                                                                       // 70\n    }, \"\\n        \", HTML.INPUT({                                                                                      // 71\n      id: \"enroll-account-password\",                                                                                   // 72\n      type: \"password\"                                                                                                 // 73\n    }), \"\\n      \"), \"\\n\\n      \", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n\\n      \", HTML.DIV({\n      \"class\": \"login-button login-button-form-submit\",                                                                // 75\n      id: \"login-buttons-enroll-account-button\"                                                                        // 76\n    }, \"\\n        Create account\\n      \"), \"\\n\\n      \", HTML.A({                                                     // 77\n      \"class\": \"accounts-close\",                                                                                       // 78\n      id: \"login-buttons-cancel-enroll-account\"                                                                        // 79\n    }, HTML.CharRef({                                                                                                  // 80\n      html: \"&times;\",                                                                                                 // 81\n      str: \"×\"                                                                                                         // 82\n    })), \"\\n    \"), \"\\n  \" ];                                                                                          // 83\n  });                                                                                                                  // 84\n}));                                                                                                                   // 85\n                                                                                                                       // 86\nTemplate.__checkName(\"_justVerifiedEmailDialog\");                                                                      // 87\nTemplate[\"_justVerifiedEmailDialog\"] = new Template(\"Template._justVerifiedEmailDialog\", (function() {                 // 88\n  var view = this;                                                                                                     // 89\n  return Blaze.If(function() {                                                                                         // 90\n    return Spacebars.call(view.lookup(\"visible\"));                                                                     // 91\n  }, function() {                                                                                                      // 92\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 93\n      \"class\": \"accounts-dialog accounts-centered-dialog\"                                                              // 94\n    }, \"\\n      Email verified.\\n      You are now logged in as \", Blaze.View(\"lookup:displayName\", function() {       // 95\n      return Spacebars.mustache(view.lookup(\"displayName\"));                                                           // 96\n    }), \".\\n      \", HTML.DIV({                                                                                        // 97\n      \"class\": \"login-button\",                                                                                         // 98\n      id: \"just-verified-dismiss-button\"                                                                               // 99\n    }, \"Dismiss\"), \"\\n    \"), \"\\n  \" ];                                                                                // 100\n  });                                                                                                                  // 101\n}));                                                                                                                   // 102\n                                                                                                                       // 103\nTemplate.__checkName(\"_configureLoginServiceDialog\");                                                                  // 104\nTemplate[\"_configureLoginServiceDialog\"] = new Template(\"Template._configureLoginServiceDialog\", (function() {         // 105\n  var view = this;                                                                                                     // 106\n  return Blaze.If(function() {                                                                                         // 107\n    return Spacebars.call(view.lookup(\"visible\"));                                                                     // 108\n  }, function() {                                                                                                      // 109\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 110\n      id: \"configure-login-service-dialog\",                                                                            // 111\n      \"class\": \"accounts-dialog accounts-centered-dialog\"                                                              // 112\n    }, \"\\n      \", Spacebars.include(view.lookupTemplate(\"configurationSteps\")), \"\\n\\n      \", HTML.P(\"\\n        Now, copy over some details.\\n      \"), \"\\n      \", HTML.P(\"\\n        \", HTML.TABLE(\"\\n          \", HTML.COLGROUP(\"\\n            \", HTML.COL({\n      span: \"1\",                                                                                                       // 114\n      \"class\": \"configuration_labels\"                                                                                  // 115\n    }), \"\\n            \", HTML.COL({                                                                                   // 116\n      span: \"1\",                                                                                                       // 117\n      \"class\": \"configuration_inputs\"                                                                                  // 118\n    }), \"\\n          \"), \"\\n          \", Blaze.Each(function() {                                                       // 119\n      return Spacebars.call(view.lookup(\"configurationFields\"));                                                       // 120\n    }, function() {                                                                                                    // 121\n      return [ \"\\n            \", HTML.TR(\"\\n              \", HTML.TD(\"\\n                \", HTML.LABEL({                // 122\n        \"for\": function() {                                                                                            // 123\n          return [ \"configure-login-service-dialog-\", Spacebars.mustache(view.lookup(\"property\")) ];                   // 124\n        }                                                                                                              // 125\n      }, Blaze.View(\"lookup:label\", function() {                                                                       // 126\n        return Spacebars.mustache(view.lookup(\"label\"));                                                               // 127\n      })), \"\\n              \"), \"\\n              \", HTML.TD(\"\\n                \", HTML.INPUT({                         // 128\n        id: function() {                                                                                               // 129\n          return [ \"configure-login-service-dialog-\", Spacebars.mustache(view.lookup(\"property\")) ];                   // 130\n        },                                                                                                             // 131\n        type: \"text\"                                                                                                   // 132\n      }), \"\\n              \"), \"\\n            \"), \"\\n          \" ];                                                    // 133\n    }), \"\\n        \"), \"\\n      \"), \"\\n      \", HTML.P({                                                               // 134\n      \"class\": \"new-section\"                                                                                           // 135\n    }, \"\\n        Choose the login style:\\n      \"), \"\\n      \", HTML.P(\"\\n        \", HTML.CharRef({                   // 136\n      html: \"&emsp;\",                                                                                                  // 137\n      str: \" \"                                                                                                         // 138\n    }), HTML.INPUT({                                                                                                   // 139\n      id: \"configure-login-service-dialog-popupBasedLogin\",                                                            // 140\n      type: \"radio\",                                                                                                   // 141\n      checked: \"checked\",                                                                                              // 142\n      name: \"loginStyle\",                                                                                              // 143\n      value: \"popup\"                                                                                                   // 144\n    }), \"\\n        \", HTML.LABEL({                                                                                     // 145\n      \"for\": \"configure-login-service-dialog-popupBasedLogin\"                                                          // 146\n    }, \"Popup-based login (recommended for most applications)\"), \"\\n\\n        \", HTML.BR(), HTML.CharRef({             // 147\n      html: \"&emsp;\",                                                                                                  // 148\n      str: \" \"                                                                                                         // 149\n    }), HTML.INPUT({                                                                                                   // 150\n      id: \"configure-login-service-dialog-redirectBasedLogin\",                                                         // 151\n      type: \"radio\",                                                                                                   // 152\n      name: \"loginStyle\",                                                                                              // 153\n      value: \"redirect\"                                                                                                // 154\n    }), \"\\n        \", HTML.LABEL({                                                                                     // 155\n      \"for\": \"configure-login-service-dialog-redirectBasedLogin\"                                                       // 156\n    }, \"\\n          Redirect-based login (special cases explained\\n          \", HTML.A({                               // 157\n      href: \"https://github.com/meteor/meteor/wiki/OAuth-for-mobile-Meteor-clients#popup-versus-redirect-flow\",        // 158\n      target: \"_blank\"                                                                                                 // 159\n    }, \"here\"), \")\\n        \"), \"\\n      \"), \"\\n      \", HTML.DIV({                                                    // 160\n      \"class\": \"new-section\"                                                                                           // 161\n    }, \"\\n        \", HTML.DIV({                                                                                        // 162\n      \"class\": \"login-button configure-login-service-dismiss-button\"                                                   // 163\n    }, \"\\n          I'll do this later\\n        \"), \"\\n        \", HTML.A({                                             // 164\n      \"class\": \"accounts-close configure-login-service-dismiss-button\"                                                 // 165\n    }, HTML.CharRef({                                                                                                  // 166\n      html: \"&times;\",                                                                                                 // 167\n      str: \"×\"                                                                                                         // 168\n    })), \"\\n\\n        \", HTML.DIV({                                                                                    // 169\n      \"class\": function() {                                                                                            // 170\n        return [ \"login-button login-button-configure \", Blaze.If(function() {                                         // 171\n          return Spacebars.call(view.lookup(\"saveDisabled\"));                                                          // 172\n        }, function() {                                                                                                // 173\n          return \"login-button-disabled\";                                                                              // 174\n        }) ];                                                                                                          // 175\n      },                                                                                                               // 176\n      id: \"configure-login-service-dialog-save-configuration\"                                                          // 177\n    }, \"\\n          Save Configuration\\n        \"), \"\\n      \"), \"\\n    \"), \"\\n  \" ];                                  // 178\n  });                                                                                                                  // 179\n}));                                                                                                                   // 180\n                                                                                                                       // 181\nTemplate.__checkName(\"_loginButtonsMessagesDialog\");                                                                   // 182\nTemplate[\"_loginButtonsMessagesDialog\"] = new Template(\"Template._loginButtonsMessagesDialog\", (function() {           // 183\n  var view = this;                                                                                                     // 184\n  return Blaze.If(function() {                                                                                         // 185\n    return Spacebars.call(view.lookup(\"visible\"));                                                                     // 186\n  }, function() {                                                                                                      // 187\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 188\n      \"class\": \"accounts-dialog accounts-centered-dialog\",                                                             // 189\n      id: \"login-buttons-message-dialog\"                                                                               // 190\n    }, \"\\n      \", Spacebars.include(view.lookupTemplate(\"_loginButtonsMessages\")), \"\\n      \", HTML.DIV({             // 191\n      \"class\": \"login-button\",                                                                                         // 192\n      id: \"messages-dialog-dismiss-button\"                                                                             // 193\n    }, \"Dismiss\"), \"\\n    \"), \"\\n  \" ];                                                                                // 194\n  });                                                                                                                  // 195\n}));                                                                                                                   // 196\n                                                                                                                       // 197\nTemplate.__checkName(\"_configureLoginOnDesktopDialog\");                                                                // 198\nTemplate[\"_configureLoginOnDesktopDialog\"] = new Template(\"Template._configureLoginOnDesktopDialog\", (function() {     // 199\n  var view = this;                                                                                                     // 200\n  return Blaze.If(function() {                                                                                         // 201\n    return Spacebars.call(view.lookup(\"visible\"));                                                                     // 202\n  }, function() {                                                                                                      // 203\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 204\n      \"class\": \"accounts-dialog accounts-centered-dialog\",                                                             // 205\n      id: \"configure-on-desktop-dialog\"                                                                                // 206\n    }, \"\\n      \", HTML.P(\"\\n        Please configure login on a desktop browser.\\n      \"), \"\\n      \", HTML.DIV({    // 207\n      \"class\": \"login-button\",                                                                                         // 208\n      id: \"configure-on-desktop-dismiss-button\"                                                                        // 209\n    }, \"Dismiss\"), \"\\n    \"), \"\\n  \" ];                                                                                // 210\n  });                                                                                                                  // 211\n}));                                                                                                                   // 212\n                                                                                                                       // 213\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/accounts-ui-unstyled/login_buttons_session.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar VALID_KEYS = [                                                                                                     // 1\n  'dropdownVisible',                                                                                                   // 2\n                                                                                                                       // 3\n  // XXX consider replacing these with one key that has an enum for values.                                            // 4\n  'inSignupFlow',                                                                                                      // 5\n  'inForgotPasswordFlow',                                                                                              // 6\n  'inChangePasswordFlow',                                                                                              // 7\n  'inMessageOnlyFlow',                                                                                                 // 8\n                                                                                                                       // 9\n  'errorMessage',                                                                                                      // 10\n  'infoMessage',                                                                                                       // 11\n                                                                                                                       // 12\n  // dialogs with messages (info and error)                                                                            // 13\n  'resetPasswordToken',                                                                                                // 14\n  'enrollAccountToken',                                                                                                // 15\n  'justVerifiedEmail',                                                                                                 // 16\n  'justResetPassword',                                                                                                 // 17\n                                                                                                                       // 18\n  'configureLoginServiceDialogVisible',                                                                                // 19\n  'configureLoginServiceDialogServiceName',                                                                            // 20\n  'configureLoginServiceDialogSaveDisabled',                                                                           // 21\n  'configureOnDesktopVisible'                                                                                          // 22\n];                                                                                                                     // 23\n                                                                                                                       // 24\nvar validateKey = function (key) {                                                                                     // 25\n  if (!_.contains(VALID_KEYS, key))                                                                                    // 26\n    throw new Error(\"Invalid key in loginButtonsSession: \" + key);                                                     // 27\n};                                                                                                                     // 28\n                                                                                                                       // 29\nvar KEY_PREFIX = \"Meteor.loginButtons.\";                                                                               // 30\n                                                                                                                       // 31\n// XXX This should probably be package scope rather than exported                                                      // 32\n// (there was even a comment to that effect here from before we had                                                    // 33\n// namespacing) but accounts-ui-viewer uses it, so leave it as is for                                                  // 34\n// now                                                                                                                 // 35\nAccounts._loginButtonsSession = {                                                                                      // 36\n  set: function(key, value) {                                                                                          // 37\n    validateKey(key);                                                                                                  // 38\n    if (_.contains(['errorMessage', 'infoMessage'], key))                                                              // 39\n      throw new Error(\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\");\n                                                                                                                       // 41\n    this._set(key, value);                                                                                             // 42\n  },                                                                                                                   // 43\n                                                                                                                       // 44\n  _set: function(key, value) {                                                                                         // 45\n    Session.set(KEY_PREFIX + key, value);                                                                              // 46\n  },                                                                                                                   // 47\n                                                                                                                       // 48\n  get: function(key) {                                                                                                 // 49\n    validateKey(key);                                                                                                  // 50\n    return Session.get(KEY_PREFIX + key);                                                                              // 51\n  },                                                                                                                   // 52\n                                                                                                                       // 53\n  closeDropdown: function () {                                                                                         // 54\n    this.set('inSignupFlow', false);                                                                                   // 55\n    this.set('inForgotPasswordFlow', false);                                                                           // 56\n    this.set('inChangePasswordFlow', false);                                                                           // 57\n    this.set('inMessageOnlyFlow', false);                                                                              // 58\n    this.set('dropdownVisible', false);                                                                                // 59\n    this.resetMessages();                                                                                              // 60\n  },                                                                                                                   // 61\n                                                                                                                       // 62\n  infoMessage: function(message) {                                                                                     // 63\n    this._set(\"errorMessage\", null);                                                                                   // 64\n    this._set(\"infoMessage\", message);                                                                                 // 65\n    this.ensureMessageVisible();                                                                                       // 66\n  },                                                                                                                   // 67\n                                                                                                                       // 68\n  errorMessage: function(message) {                                                                                    // 69\n    this._set(\"errorMessage\", message);                                                                                // 70\n    this._set(\"infoMessage\", null);                                                                                    // 71\n    this.ensureMessageVisible();                                                                                       // 72\n  },                                                                                                                   // 73\n                                                                                                                       // 74\n  // is there a visible dialog that shows messages (info and error)                                                    // 75\n  isMessageDialogVisible: function () {                                                                                // 76\n    return this.get('resetPasswordToken') ||                                                                           // 77\n      this.get('enrollAccountToken') ||                                                                                // 78\n      this.get('justVerifiedEmail');                                                                                   // 79\n  },                                                                                                                   // 80\n                                                                                                                       // 81\n  // ensure that somethings displaying a message (info or error) is                                                    // 82\n  // visible.  if a dialog with messages is open, do nothing;                                                          // 83\n  // otherwise open the dropdown.                                                                                      // 84\n  //                                                                                                                   // 85\n  // notably this doesn't matter when only displaying a single login                                                   // 86\n  // button since then we have an explicit message dialog                                                              // 87\n  // (_loginButtonsMessageDialog), and dropdownVisible is ignored in                                                   // 88\n  // this case.                                                                                                        // 89\n  ensureMessageVisible: function () {                                                                                  // 90\n    if (!this.isMessageDialogVisible())                                                                                // 91\n      this.set(\"dropdownVisible\", true);                                                                               // 92\n  },                                                                                                                   // 93\n                                                                                                                       // 94\n  resetMessages: function () {                                                                                         // 95\n    this._set(\"errorMessage\", null);                                                                                   // 96\n    this._set(\"infoMessage\", null);                                                                                    // 97\n  },                                                                                                                   // 98\n                                                                                                                       // 99\n  configureService: function (name) {                                                                                  // 100\n    if (Meteor.isCordova) {                                                                                            // 101\n      this.set('configureOnDesktopVisible', true);                                                                     // 102\n    } else {                                                                                                           // 103\n      this.set('configureLoginServiceDialogVisible', true);                                                            // 104\n      this.set('configureLoginServiceDialogServiceName', name);                                                        // 105\n      this.set('configureLoginServiceDialogSaveDisabled', true);                                                       // 106\n    }                                                                                                                  // 107\n  }                                                                                                                    // 108\n};                                                                                                                     // 109\n                                                                                                                       // 110\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/accounts-ui-unstyled/login_buttons.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// for convenience                                                                                                     // 1\nvar loginButtonsSession = Accounts._loginButtonsSession;                                                               // 2\n                                                                                                                       // 3\n// shared between dropdown and single mode                                                                             // 4\nTemplate.loginButtons.events({                                                                                         // 5\n  'click #login-buttons-logout': function() {                                                                          // 6\n    Meteor.logout(function () {                                                                                        // 7\n      loginButtonsSession.closeDropdown();                                                                             // 8\n    });                                                                                                                // 9\n  }                                                                                                                    // 10\n});                                                                                                                    // 11\n                                                                                                                       // 12\nTemplate.registerHelper('loginButtons', function () {                                                                  // 13\n  throw new Error(\"Use {{> loginButtons}} instead of {{loginButtons}}\");                                               // 14\n});                                                                                                                    // 15\n                                                                                                                       // 16\n//                                                                                                                     // 17\n// helpers                                                                                                             // 18\n//                                                                                                                     // 19\n                                                                                                                       // 20\ndisplayName = function () {                                                                                            // 21\n  var user = Meteor.user();                                                                                            // 22\n  if (!user)                                                                                                           // 23\n    return '';                                                                                                         // 24\n                                                                                                                       // 25\n  if (user.profile && user.profile.name)                                                                               // 26\n    return user.profile.name;                                                                                          // 27\n  if (user.username)                                                                                                   // 28\n    return user.username;                                                                                              // 29\n  if (user.emails && user.emails[0] && user.emails[0].address)                                                         // 30\n    return user.emails[0].address;                                                                                     // 31\n                                                                                                                       // 32\n  return '';                                                                                                           // 33\n};                                                                                                                     // 34\n                                                                                                                       // 35\n// returns an array of the login services used by this app. each                                                       // 36\n// element of the array is an object (eg {name: 'facebook'}), since                                                    // 37\n// that makes it useful in combination with handlebars {{#each}}.                                                      // 38\n//                                                                                                                     // 39\n// don't cache the output of this function: if called during startup (before                                           // 40\n// oauth packages load) it might not include them all.                                                                 // 41\n//                                                                                                                     // 42\n// NOTE: It is very important to have this return password last                                                        // 43\n// because of the way we render the different providers in                                                             // 44\n// login_buttons_dropdown.html                                                                                         // 45\ngetLoginServices = function () {                                                                                       // 46\n  var self = this;                                                                                                     // 47\n                                                                                                                       // 48\n  // First look for OAuth services.                                                                                    // 49\n  var services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : [];                                       // 50\n                                                                                                                       // 51\n  // Be equally kind to all login services. This also preserves                                                        // 52\n  // backwards-compatibility. (But maybe order should be                                                               // 53\n  // configurable?)                                                                                                    // 54\n  services.sort();                                                                                                     // 55\n                                                                                                                       // 56\n  // Add password, if it's there; it must come last.                                                                   // 57\n  if (hasPasswordService())                                                                                            // 58\n    services.push('password');                                                                                         // 59\n                                                                                                                       // 60\n  return _.map(services, function(name) {                                                                              // 61\n    return {name: name};                                                                                               // 62\n  });                                                                                                                  // 63\n};                                                                                                                     // 64\n                                                                                                                       // 65\nhasPasswordService = function () {                                                                                     // 66\n  return !!Package['accounts-password'];                                                                               // 67\n};                                                                                                                     // 68\n                                                                                                                       // 69\ndropdown = function () {                                                                                               // 70\n  return hasPasswordService() || getLoginServices().length > 1;                                                        // 71\n};                                                                                                                     // 72\n                                                                                                                       // 73\n// XXX improve these. should this be in accounts-password instead?                                                     // 74\n//                                                                                                                     // 75\n// XXX these will become configurable, and will be validated on                                                        // 76\n// the server as well.                                                                                                 // 77\nvalidateUsername = function (username) {                                                                               // 78\n  if (username.length >= 3) {                                                                                          // 79\n    return true;                                                                                                       // 80\n  } else {                                                                                                             // 81\n    loginButtonsSession.errorMessage(\"Username must be at least 3 characters long\");                                   // 82\n    return false;                                                                                                      // 83\n  }                                                                                                                    // 84\n};                                                                                                                     // 85\nvalidateEmail = function (email) {                                                                                     // 86\n  if (passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\" && email === '')                                        // 87\n    return true;                                                                                                       // 88\n                                                                                                                       // 89\n  if (email.indexOf('@') !== -1) {                                                                                     // 90\n    return true;                                                                                                       // 91\n  } else {                                                                                                             // 92\n    loginButtonsSession.errorMessage(\"Invalid email\");                                                                 // 93\n    return false;                                                                                                      // 94\n  }                                                                                                                    // 95\n};                                                                                                                     // 96\nvalidatePassword = function (password) {                                                                               // 97\n  if (password.length >= 6) {                                                                                          // 98\n    return true;                                                                                                       // 99\n  } else {                                                                                                             // 100\n    loginButtonsSession.errorMessage(\"Password must be at least 6 characters long\");                                   // 101\n    return false;                                                                                                      // 102\n  }                                                                                                                    // 103\n};                                                                                                                     // 104\n                                                                                                                       // 105\n//                                                                                                                     // 106\n// loginButtonLoggedOut template                                                                                       // 107\n//                                                                                                                     // 108\n                                                                                                                       // 109\nTemplate._loginButtonsLoggedOut.helpers({                                                                              // 110\n  dropdown: dropdown,                                                                                                  // 111\n  services: getLoginServices,                                                                                          // 112\n  singleService: function () {                                                                                         // 113\n    var services = getLoginServices();                                                                                 // 114\n    if (services.length !== 1)                                                                                         // 115\n      throw new Error(                                                                                                 // 116\n        \"Shouldn't be rendering this template with more than one configured service\");                                 // 117\n    return services[0];                                                                                                // 118\n  },                                                                                                                   // 119\n  configurationLoaded: function () {                                                                                   // 120\n    return Accounts.loginServicesConfigured();                                                                         // 121\n  }                                                                                                                    // 122\n});                                                                                                                    // 123\n                                                                                                                       // 124\n                                                                                                                       // 125\n//                                                                                                                     // 126\n// loginButtonsLoggedIn template                                                                                       // 127\n//                                                                                                                     // 128\n                                                                                                                       // 129\n  // decide whether we should show a dropdown rather than a row of                                                     // 130\n  // buttons                                                                                                           // 131\nTemplate._loginButtonsLoggedIn.helpers({                                                                               // 132\n  dropdown: dropdown                                                                                                   // 133\n});                                                                                                                    // 134\n                                                                                                                       // 135\n                                                                                                                       // 136\n                                                                                                                       // 137\n//                                                                                                                     // 138\n// loginButtonsLoggedInSingleLogoutButton template                                                                     // 139\n//                                                                                                                     // 140\n                                                                                                                       // 141\nTemplate._loginButtonsLoggedInSingleLogoutButton.helpers({                                                             // 142\n  displayName: displayName                                                                                             // 143\n});                                                                                                                    // 144\n                                                                                                                       // 145\n                                                                                                                       // 146\n                                                                                                                       // 147\n//                                                                                                                     // 148\n// loginButtonsMessage template                                                                                        // 149\n//                                                                                                                     // 150\n                                                                                                                       // 151\nTemplate._loginButtonsMessages.helpers({                                                                               // 152\n  errorMessage: function () {                                                                                          // 153\n    return loginButtonsSession.get('errorMessage');                                                                    // 154\n  }                                                                                                                    // 155\n});                                                                                                                    // 156\n                                                                                                                       // 157\nTemplate._loginButtonsMessages.helpers({                                                                               // 158\n  infoMessage: function () {                                                                                           // 159\n    return loginButtonsSession.get('infoMessage');                                                                     // 160\n  }                                                                                                                    // 161\n});                                                                                                                    // 162\n                                                                                                                       // 163\n                                                                                                                       // 164\n//                                                                                                                     // 165\n// loginButtonsLoggingInPadding template                                                                               // 166\n//                                                                                                                     // 167\n                                                                                                                       // 168\nTemplate._loginButtonsLoggingInPadding.helpers({                                                                       // 169\n  dropdown: dropdown                                                                                                   // 170\n});                                                                                                                    // 171\n                                                                                                                       // 172\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/accounts-ui-unstyled/login_buttons_single.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// for convenience                                                                                                     // 1\nvar loginButtonsSession = Accounts._loginButtonsSession;                                                               // 2\n                                                                                                                       // 3\n                                                                                                                       // 4\nvar loginResultCallback = function (serviceName, err) {                                                                // 5\n  if (!err) {                                                                                                          // 6\n    loginButtonsSession.closeDropdown();                                                                               // 7\n  } else if (err instanceof Accounts.LoginCancelledError) {                                                            // 8\n    // do nothing                                                                                                      // 9\n  } else if (err instanceof ServiceConfiguration.ConfigError) {                                                        // 10\n    loginButtonsSession.configureService(serviceName);                                                                 // 11\n  } else {                                                                                                             // 12\n    loginButtonsSession.errorMessage(err.reason || \"Unknown error\");                                                   // 13\n  }                                                                                                                    // 14\n};                                                                                                                     // 15\n                                                                                                                       // 16\n                                                                                                                       // 17\n// In the login redirect flow, we'll have the result of the login                                                      // 18\n// attempt at page load time when we're redirected back to the                                                         // 19\n// application.  Register a callback to update the UI (i.e. to close                                                   // 20\n// the dialog on a successful login or display the error on a failed                                                   // 21\n// login).                                                                                                             // 22\n//                                                                                                                     // 23\nAccounts.onPageLoadLogin(function (attemptInfo) {                                                                      // 24\n  // Ignore if we have a left over login attempt for a service that is no longer registered.                           // 25\n  if (_.contains(_.pluck(getLoginServices(), \"name\"), attemptInfo.type))                                               // 26\n    loginResultCallback(attemptInfo.type, attemptInfo.error);                                                          // 27\n});                                                                                                                    // 28\n                                                                                                                       // 29\n                                                                                                                       // 30\nTemplate._loginButtonsLoggedOutSingleLoginButton.events({                                                              // 31\n  'click .login-button': function () {                                                                                 // 32\n    var serviceName = this.name;                                                                                       // 33\n    loginButtonsSession.resetMessages();                                                                               // 34\n                                                                                                                       // 35\n    // XXX Service providers should be able to specify their                                                           // 36\n    // `Meteor.loginWithX` method name.                                                                                // 37\n    var loginWithService = Meteor[\"loginWith\" +                                                                        // 38\n                                  (serviceName === 'meteor-developer' ?                                                // 39\n                                   'MeteorDeveloperAccount' :                                                          // 40\n                                   capitalize(serviceName))];                                                          // 41\n                                                                                                                       // 42\n    var options = {}; // use default scope unless specified                                                            // 43\n    if (Accounts.ui._options.requestPermissions[serviceName])                                                          // 44\n      options.requestPermissions = Accounts.ui._options.requestPermissions[serviceName];                               // 45\n    if (Accounts.ui._options.requestOfflineToken[serviceName])                                                         // 46\n      options.requestOfflineToken = Accounts.ui._options.requestOfflineToken[serviceName];                             // 47\n    if (Accounts.ui._options.forceApprovalPrompt[serviceName])                                                         // 48\n      options.forceApprovalPrompt = Accounts.ui._options.forceApprovalPrompt[serviceName];                             // 49\n                                                                                                                       // 50\n    loginWithService(options, function (err) {                                                                         // 51\n      loginResultCallback(serviceName, err);                                                                           // 52\n    });                                                                                                                // 53\n  }                                                                                                                    // 54\n});                                                                                                                    // 55\n                                                                                                                       // 56\nTemplate._loginButtonsLoggedOutSingleLoginButton.helpers({                                                             // 57\n  configured: function () {                                                                                            // 58\n    return !!ServiceConfiguration.configurations.findOne({service: this.name});                                        // 59\n  },                                                                                                                   // 60\n  capitalizedName: function () {                                                                                       // 61\n    if (this.name === 'github')                                                                                        // 62\n      // XXX we should allow service packages to set their capitalized name                                            // 63\n      return 'GitHub';                                                                                                 // 64\n    else if (this.name === 'meteor-developer')                                                                         // 65\n      return 'Meteor';                                                                                                 // 66\n    else                                                                                                               // 67\n      return capitalize(this.name);                                                                                    // 68\n  }                                                                                                                    // 69\n});                                                                                                                    // 70\n                                                                                                                       // 71\n// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js                                         // 72\nvar capitalize = function(str){                                                                                        // 73\n  str = str == null ? '' : String(str);                                                                                // 74\n  return str.charAt(0).toUpperCase() + str.slice(1);                                                                   // 75\n};                                                                                                                     // 76\n                                                                                                                       // 77\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/accounts-ui-unstyled/login_buttons_dropdown.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// for convenience                                                                                                     // 1\nvar loginButtonsSession = Accounts._loginButtonsSession;                                                               // 2\n                                                                                                                       // 3\n// events shared between loginButtonsLoggedOutDropdown and                                                             // 4\n// loginButtonsLoggedInDropdown                                                                                        // 5\nTemplate.loginButtons.events({                                                                                         // 6\n  'click #login-name-link, click #login-sign-in-link': function () {                                                   // 7\n    loginButtonsSession.set('dropdownVisible', true);                                                                  // 8\n  },                                                                                                                   // 9\n  'click .login-close-text': function () {                                                                             // 10\n    loginButtonsSession.closeDropdown();                                                                               // 11\n  }                                                                                                                    // 12\n});                                                                                                                    // 13\n                                                                                                                       // 14\n                                                                                                                       // 15\n//                                                                                                                     // 16\n// loginButtonsLoggedInDropdown template and related                                                                   // 17\n//                                                                                                                     // 18\n                                                                                                                       // 19\nTemplate._loginButtonsLoggedInDropdown.events({                                                                        // 20\n  'click #login-buttons-open-change-password': function() {                                                            // 21\n    loginButtonsSession.resetMessages();                                                                               // 22\n    loginButtonsSession.set('inChangePasswordFlow', true);                                                             // 23\n  }                                                                                                                    // 24\n});                                                                                                                    // 25\n                                                                                                                       // 26\nTemplate._loginButtonsLoggedInDropdown.helpers({                                                                       // 27\n  displayName: displayName,                                                                                            // 28\n                                                                                                                       // 29\n  inChangePasswordFlow: function () {                                                                                  // 30\n    return loginButtonsSession.get('inChangePasswordFlow');                                                            // 31\n  },                                                                                                                   // 32\n                                                                                                                       // 33\n  inMessageOnlyFlow: function () {                                                                                     // 34\n    return loginButtonsSession.get('inMessageOnlyFlow');                                                               // 35\n  },                                                                                                                   // 36\n                                                                                                                       // 37\n  dropdownVisible: function () {                                                                                       // 38\n    return loginButtonsSession.get('dropdownVisible');                                                                 // 39\n  }                                                                                                                    // 40\n});                                                                                                                    // 41\n                                                                                                                       // 42\nTemplate._loginButtonsLoggedInDropdownActions.helpers({                                                                // 43\n  allowChangingPassword: function () {                                                                                 // 44\n    // it would be more correct to check whether the user has a password set,                                          // 45\n    // but in order to do that we'd have to send more data down to the client,                                         // 46\n    // and it'd be preferable not to send down the entire service.password document.                                   // 47\n    //                                                                                                                 // 48\n    // instead we use the heuristic: if the user has a username or email set.                                          // 49\n    var user = Meteor.user();                                                                                          // 50\n    return user.username || (user.emails && user.emails[0] && user.emails[0].address);                                 // 51\n  }                                                                                                                    // 52\n});                                                                                                                    // 53\n                                                                                                                       // 54\n                                                                                                                       // 55\n//                                                                                                                     // 56\n// loginButtonsLoggedOutDropdown template and related                                                                  // 57\n//                                                                                                                     // 58\n                                                                                                                       // 59\nTemplate._loginButtonsLoggedOutDropdown.events({                                                                       // 60\n  'click #login-buttons-password': function () {                                                                       // 61\n    loginOrSignup();                                                                                                   // 62\n  },                                                                                                                   // 63\n                                                                                                                       // 64\n  'keypress #forgot-password-email': function (event) {                                                                // 65\n    if (event.keyCode === 13)                                                                                          // 66\n      forgotPassword();                                                                                                // 67\n  },                                                                                                                   // 68\n                                                                                                                       // 69\n  'click #login-buttons-forgot-password': function () {                                                                // 70\n    forgotPassword();                                                                                                  // 71\n  },                                                                                                                   // 72\n                                                                                                                       // 73\n  'click #signup-link': function () {                                                                                  // 74\n    loginButtonsSession.resetMessages();                                                                               // 75\n                                                                                                                       // 76\n    // store values of fields before swtiching to the signup form                                                      // 77\n    var username = trimmedElementValueById('login-username');                                                          // 78\n    var email = trimmedElementValueById('login-email');                                                                // 79\n    var usernameOrEmail = trimmedElementValueById('login-username-or-email');                                          // 80\n    // notably not trimmed. a password could (?) start or end with a space                                             // 81\n    var password = elementValueById('login-password');                                                                 // 82\n                                                                                                                       // 83\n    loginButtonsSession.set('inSignupFlow', true);                                                                     // 84\n    loginButtonsSession.set('inForgotPasswordFlow', false);                                                            // 85\n    // force the ui to update so that we have the approprate fields to fill in                                         // 86\n    Tracker.flush();                                                                                                   // 87\n                                                                                                                       // 88\n    // update new fields with appropriate defaults                                                                     // 89\n    if (username !== null)                                                                                             // 90\n      document.getElementById('login-username').value = username;                                                      // 91\n    else if (email !== null)                                                                                           // 92\n      document.getElementById('login-email').value = email;                                                            // 93\n    else if (usernameOrEmail !== null)                                                                                 // 94\n      if (usernameOrEmail.indexOf('@') === -1)                                                                         // 95\n        document.getElementById('login-username').value = usernameOrEmail;                                             // 96\n    else                                                                                                               // 97\n      document.getElementById('login-email').value = usernameOrEmail;                                                  // 98\n                                                                                                                       // 99\n    if (password !== null)                                                                                             // 100\n      document.getElementById('login-password').value = password;                                                      // 101\n                                                                                                                       // 102\n    // Force redrawing the `login-dropdown-list` element because of                                                    // 103\n    // a bizarre Chrome bug in which part of the DIV is not redrawn                                                    // 104\n    // in case you had tried to unsuccessfully log in before                                                           // 105\n    // switching to the signup form.                                                                                   // 106\n    //                                                                                                                 // 107\n    // Found tip on how to force a redraw on                                                                           // 108\n    // http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes/3485654#3485654\n    var redraw = document.getElementById('login-dropdown-list');                                                       // 110\n    redraw.style.display = 'none';                                                                                     // 111\n    redraw.offsetHeight; // it seems that this line does nothing but is necessary for the redraw to work               // 112\n    redraw.style.display = 'block';                                                                                    // 113\n  },                                                                                                                   // 114\n  'click #forgot-password-link': function () {                                                                         // 115\n    loginButtonsSession.resetMessages();                                                                               // 116\n                                                                                                                       // 117\n    // store values of fields before swtiching to the signup form                                                      // 118\n    var email = trimmedElementValueById('login-email');                                                                // 119\n    var usernameOrEmail = trimmedElementValueById('login-username-or-email');                                          // 120\n                                                                                                                       // 121\n    loginButtonsSession.set('inSignupFlow', false);                                                                    // 122\n    loginButtonsSession.set('inForgotPasswordFlow', true);                                                             // 123\n    // force the ui to update so that we have the approprate fields to fill in                                         // 124\n    Tracker.flush();                                                                                                   // 125\n                                                                                                                       // 126\n    // update new fields with appropriate defaults                                                                     // 127\n    if (email !== null)                                                                                                // 128\n      document.getElementById('forgot-password-email').value = email;                                                  // 129\n    else if (usernameOrEmail !== null)                                                                                 // 130\n      if (usernameOrEmail.indexOf('@') !== -1)                                                                         // 131\n        document.getElementById('forgot-password-email').value = usernameOrEmail;                                      // 132\n                                                                                                                       // 133\n  },                                                                                                                   // 134\n  'click #back-to-login-link': function () {                                                                           // 135\n    loginButtonsSession.resetMessages();                                                                               // 136\n                                                                                                                       // 137\n    var username = trimmedElementValueById('login-username');                                                          // 138\n    var email = trimmedElementValueById('login-email')                                                                 // 139\n          || trimmedElementValueById('forgot-password-email'); // Ughh. Standardize on names?                          // 140\n    // notably not trimmed. a password could (?) start or end with a space                                             // 141\n    var password = elementValueById('login-password');                                                                 // 142\n                                                                                                                       // 143\n    loginButtonsSession.set('inSignupFlow', false);                                                                    // 144\n    loginButtonsSession.set('inForgotPasswordFlow', false);                                                            // 145\n    // force the ui to update so that we have the approprate fields to fill in                                         // 146\n    Tracker.flush();                                                                                                   // 147\n                                                                                                                       // 148\n    if (document.getElementById('login-username') && username !== null)                                                // 149\n      document.getElementById('login-username').value = username;                                                      // 150\n    if (document.getElementById('login-email') && email !== null)                                                      // 151\n      document.getElementById('login-email').value = email;                                                            // 152\n                                                                                                                       // 153\n    var usernameOrEmailInput = document.getElementById('login-username-or-email');                                     // 154\n    if (usernameOrEmailInput) {                                                                                        // 155\n      if (email !== null)                                                                                              // 156\n        usernameOrEmailInput.value = email;                                                                            // 157\n      if (username !== null)                                                                                           // 158\n        usernameOrEmailInput.value = username;                                                                         // 159\n    }                                                                                                                  // 160\n                                                                                                                       // 161\n    if (password !== null)                                                                                             // 162\n      document.getElementById('login-password').value = password;                                                      // 163\n  },                                                                                                                   // 164\n  'keypress #login-username, keypress #login-email, keypress #login-username-or-email, keypress #login-password, keypress #login-password-again': function (event) {\n    if (event.keyCode === 13)                                                                                          // 166\n      loginOrSignup();                                                                                                 // 167\n  }                                                                                                                    // 168\n});                                                                                                                    // 169\n                                                                                                                       // 170\nTemplate._loginButtonsLoggedOutDropdown.helpers({                                                                      // 171\n  // additional classes that can be helpful in styling the dropdown                                                    // 172\n  additionalClasses: function () {                                                                                     // 173\n    if (!hasPasswordService()) {                                                                                       // 174\n      return false;                                                                                                    // 175\n    } else {                                                                                                           // 176\n      if (loginButtonsSession.get('inSignupFlow')) {                                                                   // 177\n        return 'login-form-create-account';                                                                            // 178\n      } else if (loginButtonsSession.get('inForgotPasswordFlow')) {                                                    // 179\n        return 'login-form-forgot-password';                                                                           // 180\n      } else {                                                                                                         // 181\n        return 'login-form-sign-in';                                                                                   // 182\n      }                                                                                                                // 183\n    }                                                                                                                  // 184\n  },                                                                                                                   // 185\n                                                                                                                       // 186\n  dropdownVisible: function () {                                                                                       // 187\n    return loginButtonsSession.get('dropdownVisible');                                                                 // 188\n  },                                                                                                                   // 189\n                                                                                                                       // 190\n  hasPasswordService: hasPasswordService                                                                               // 191\n});                                                                                                                    // 192\n                                                                                                                       // 193\n// return all login services, with password last                                                                       // 194\nTemplate._loginButtonsLoggedOutAllServices.helpers({                                                                   // 195\n  services: getLoginServices,                                                                                          // 196\n                                                                                                                       // 197\n  isPasswordService: function () {                                                                                     // 198\n    return this.name === 'password';                                                                                   // 199\n  },                                                                                                                   // 200\n                                                                                                                       // 201\n  hasOtherServices: function () {                                                                                      // 202\n    return getLoginServices().length > 1;                                                                              // 203\n  },                                                                                                                   // 204\n                                                                                                                       // 205\n  hasPasswordService: hasPasswordService                                                                               // 206\n});                                                                                                                    // 207\n                                                                                                                       // 208\nTemplate._loginButtonsLoggedOutPasswordService.helpers({                                                               // 209\n  fields: function () {                                                                                                // 210\n    var loginFields = [                                                                                                // 211\n      {fieldName: 'username-or-email', fieldLabel: 'Username or Email',                                                // 212\n       visible: function () {                                                                                          // 213\n         return _.contains(                                                                                            // 214\n           [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\"],                                                      // 215\n           passwordSignupFields());                                                                                    // 216\n       }},                                                                                                             // 217\n      {fieldName: 'username', fieldLabel: 'Username',                                                                  // 218\n       visible: function () {                                                                                          // 219\n         return passwordSignupFields() === \"USERNAME_ONLY\";                                                            // 220\n       }},                                                                                                             // 221\n      {fieldName: 'email', fieldLabel: 'Email', inputType: 'email',                                                    // 222\n       visible: function () {                                                                                          // 223\n         return passwordSignupFields() === \"EMAIL_ONLY\";                                                               // 224\n       }},                                                                                                             // 225\n      {fieldName: 'password', fieldLabel: 'Password', inputType: 'password',                                           // 226\n       visible: function () {                                                                                          // 227\n         return true;                                                                                                  // 228\n       }}                                                                                                              // 229\n    ];                                                                                                                 // 230\n                                                                                                                       // 231\n    var signupFields = [                                                                                               // 232\n      {fieldName: 'username', fieldLabel: 'Username',                                                                  // 233\n       visible: function () {                                                                                          // 234\n         return _.contains(                                                                                            // 235\n           [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],                                     // 236\n           passwordSignupFields());                                                                                    // 237\n       }},                                                                                                             // 238\n      {fieldName: 'email', fieldLabel: 'Email', inputType: 'email',                                                    // 239\n       visible: function () {                                                                                          // 240\n         return _.contains(                                                                                            // 241\n           [\"USERNAME_AND_EMAIL\", \"EMAIL_ONLY\"],                                                                       // 242\n           passwordSignupFields());                                                                                    // 243\n       }},                                                                                                             // 244\n      {fieldName: 'email', fieldLabel: 'Email (optional)', inputType: 'email',                                         // 245\n       visible: function () {                                                                                          // 246\n         return passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\";                                              // 247\n       }},                                                                                                             // 248\n      {fieldName: 'password', fieldLabel: 'Password', inputType: 'password',                                           // 249\n       visible: function () {                                                                                          // 250\n         return true;                                                                                                  // 251\n       }},                                                                                                             // 252\n      {fieldName: 'password-again', fieldLabel: 'Password (again)',                                                    // 253\n       inputType: 'password',                                                                                          // 254\n       visible: function () {                                                                                          // 255\n         // No need to make users double-enter their password if                                                       // 256\n         // they'll necessarily have an email set, since they can use                                                  // 257\n         // the \"forgot password\" flow.                                                                                // 258\n         return _.contains(                                                                                            // 259\n           [\"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],                                                           // 260\n           passwordSignupFields());                                                                                    // 261\n       }}                                                                                                              // 262\n    ];                                                                                                                 // 263\n                                                                                                                       // 264\n    return loginButtonsSession.get('inSignupFlow') ? signupFields : loginFields;                                       // 265\n  },                                                                                                                   // 266\n                                                                                                                       // 267\n  inForgotPasswordFlow: function () {                                                                                  // 268\n    return loginButtonsSession.get('inForgotPasswordFlow');                                                            // 269\n  },                                                                                                                   // 270\n                                                                                                                       // 271\n  inLoginFlow: function () {                                                                                           // 272\n    return !loginButtonsSession.get('inSignupFlow') && !loginButtonsSession.get('inForgotPasswordFlow');               // 273\n  },                                                                                                                   // 274\n                                                                                                                       // 275\n  inSignupFlow: function () {                                                                                          // 276\n    return loginButtonsSession.get('inSignupFlow');                                                                    // 277\n  },                                                                                                                   // 278\n                                                                                                                       // 279\n  showCreateAccountLink: function () {                                                                                 // 280\n    return !Accounts._options.forbidClientAccountCreation;                                                             // 281\n  },                                                                                                                   // 282\n                                                                                                                       // 283\n  showForgotPasswordLink: function () {                                                                                // 284\n    return _.contains(                                                                                                 // 285\n      [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"EMAIL_ONLY\"],                                             // 286\n      passwordSignupFields());                                                                                         // 287\n  }                                                                                                                    // 288\n});                                                                                                                    // 289\n                                                                                                                       // 290\nTemplate._loginButtonsFormField.helpers({                                                                              // 291\n  inputType: function () {                                                                                             // 292\n    return this.inputType || \"text\";                                                                                   // 293\n  }                                                                                                                    // 294\n});                                                                                                                    // 295\n                                                                                                                       // 296\n                                                                                                                       // 297\n//                                                                                                                     // 298\n// loginButtonsChangePassword template                                                                                 // 299\n//                                                                                                                     // 300\n                                                                                                                       // 301\nTemplate._loginButtonsChangePassword.events({                                                                          // 302\n  'keypress #login-old-password, keypress #login-password, keypress #login-password-again': function (event) {         // 303\n    if (event.keyCode === 13)                                                                                          // 304\n      changePassword();                                                                                                // 305\n  },                                                                                                                   // 306\n  'click #login-buttons-do-change-password': function () {                                                             // 307\n    changePassword();                                                                                                  // 308\n  }                                                                                                                    // 309\n});                                                                                                                    // 310\n                                                                                                                       // 311\nTemplate._loginButtonsChangePassword.helpers({                                                                         // 312\n  fields: function () {                                                                                                // 313\n    return [                                                                                                           // 314\n      {fieldName: 'old-password', fieldLabel: 'Current Password', inputType: 'password',                               // 315\n       visible: function () {                                                                                          // 316\n         return true;                                                                                                  // 317\n       }},                                                                                                             // 318\n      {fieldName: 'password', fieldLabel: 'New Password', inputType: 'password',                                       // 319\n       visible: function () {                                                                                          // 320\n         return true;                                                                                                  // 321\n       }},                                                                                                             // 322\n      {fieldName: 'password-again', fieldLabel: 'New Password (again)',                                                // 323\n       inputType: 'password',                                                                                          // 324\n       visible: function () {                                                                                          // 325\n         // No need to make users double-enter their password if                                                       // 326\n         // they'll necessarily have an email set, since they can use                                                  // 327\n         // the \"forgot password\" flow.                                                                                // 328\n         return _.contains(                                                                                            // 329\n           [\"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"],                                                           // 330\n           passwordSignupFields());                                                                                    // 331\n       }}                                                                                                              // 332\n    ];                                                                                                                 // 333\n  }                                                                                                                    // 334\n});                                                                                                                    // 335\n                                                                                                                       // 336\n                                                                                                                       // 337\n//                                                                                                                     // 338\n// helpers                                                                                                             // 339\n//                                                                                                                     // 340\n                                                                                                                       // 341\nvar elementValueById = function(id) {                                                                                  // 342\n  var element = document.getElementById(id);                                                                           // 343\n  if (!element)                                                                                                        // 344\n    return null;                                                                                                       // 345\n  else                                                                                                                 // 346\n    return element.value;                                                                                              // 347\n};                                                                                                                     // 348\n                                                                                                                       // 349\nvar trimmedElementValueById = function(id) {                                                                           // 350\n  var element = document.getElementById(id);                                                                           // 351\n  if (!element)                                                                                                        // 352\n    return null;                                                                                                       // 353\n  else                                                                                                                 // 354\n    return element.value.replace(/^\\s*|\\s*$/g, \"\"); // trim() doesn't work on IE8;                                     // 355\n};                                                                                                                     // 356\n                                                                                                                       // 357\nvar loginOrSignup = function () {                                                                                      // 358\n  if (loginButtonsSession.get('inSignupFlow'))                                                                         // 359\n    signup();                                                                                                          // 360\n  else                                                                                                                 // 361\n    login();                                                                                                           // 362\n};                                                                                                                     // 363\n                                                                                                                       // 364\nvar login = function () {                                                                                              // 365\n  loginButtonsSession.resetMessages();                                                                                 // 366\n                                                                                                                       // 367\n  var username = trimmedElementValueById('login-username');                                                            // 368\n  var email = trimmedElementValueById('login-email');                                                                  // 369\n  var usernameOrEmail = trimmedElementValueById('login-username-or-email');                                            // 370\n  // notably not trimmed. a password could (?) start or end with a space                                               // 371\n  var password = elementValueById('login-password');                                                                   // 372\n                                                                                                                       // 373\n  var loginSelector;                                                                                                   // 374\n  if (username !== null) {                                                                                             // 375\n    if (!validateUsername(username))                                                                                   // 376\n      return;                                                                                                          // 377\n    else                                                                                                               // 378\n      loginSelector = {username: username};                                                                            // 379\n  } else if (email !== null) {                                                                                         // 380\n    if (!validateEmail(email))                                                                                         // 381\n      return;                                                                                                          // 382\n    else                                                                                                               // 383\n      loginSelector = {email: email};                                                                                  // 384\n  } else if (usernameOrEmail !== null) {                                                                               // 385\n    // XXX not sure how we should validate this. but this seems good enough (for now),                                 // 386\n    // since an email must have at least 3 characters anyways                                                          // 387\n    if (!validateUsername(usernameOrEmail))                                                                            // 388\n      return;                                                                                                          // 389\n    else                                                                                                               // 390\n      loginSelector = usernameOrEmail;                                                                                 // 391\n  } else {                                                                                                             // 392\n    throw new Error(\"Unexpected -- no element to use as a login user selector\");                                       // 393\n  }                                                                                                                    // 394\n                                                                                                                       // 395\n  Meteor.loginWithPassword(loginSelector, password, function (error, result) {                                         // 396\n    if (error) {                                                                                                       // 397\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");                                               // 398\n    } else {                                                                                                           // 399\n      loginButtonsSession.closeDropdown();                                                                             // 400\n    }                                                                                                                  // 401\n  });                                                                                                                  // 402\n};                                                                                                                     // 403\n                                                                                                                       // 404\nvar signup = function () {                                                                                             // 405\n  loginButtonsSession.resetMessages();                                                                                 // 406\n                                                                                                                       // 407\n  var options = {}; // to be passed to Accounts.createUser                                                             // 408\n                                                                                                                       // 409\n  var username = trimmedElementValueById('login-username');                                                            // 410\n  if (username !== null) {                                                                                             // 411\n    if (!validateUsername(username))                                                                                   // 412\n      return;                                                                                                          // 413\n    else                                                                                                               // 414\n      options.username = username;                                                                                     // 415\n  }                                                                                                                    // 416\n                                                                                                                       // 417\n  var email = trimmedElementValueById('login-email');                                                                  // 418\n  if (email !== null) {                                                                                                // 419\n    if (!validateEmail(email))                                                                                         // 420\n      return;                                                                                                          // 421\n    else                                                                                                               // 422\n      options.email = email;                                                                                           // 423\n  }                                                                                                                    // 424\n                                                                                                                       // 425\n  // notably not trimmed. a password could (?) start or end with a space                                               // 426\n  var password = elementValueById('login-password');                                                                   // 427\n  if (!validatePassword(password))                                                                                     // 428\n    return;                                                                                                            // 429\n  else                                                                                                                 // 430\n    options.password = password;                                                                                       // 431\n                                                                                                                       // 432\n  if (!matchPasswordAgainIfPresent())                                                                                  // 433\n    return;                                                                                                            // 434\n                                                                                                                       // 435\n  Accounts.createUser(options, function (error) {                                                                      // 436\n    if (error) {                                                                                                       // 437\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");                                               // 438\n    } else {                                                                                                           // 439\n      loginButtonsSession.closeDropdown();                                                                             // 440\n    }                                                                                                                  // 441\n  });                                                                                                                  // 442\n};                                                                                                                     // 443\n                                                                                                                       // 444\nvar forgotPassword = function () {                                                                                     // 445\n  loginButtonsSession.resetMessages();                                                                                 // 446\n                                                                                                                       // 447\n  var email = trimmedElementValueById(\"forgot-password-email\");                                                        // 448\n  if (email.indexOf('@') !== -1) {                                                                                     // 449\n    Accounts.forgotPassword({email: email}, function (error) {                                                         // 450\n      if (error)                                                                                                       // 451\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");                                             // 452\n      else                                                                                                             // 453\n        loginButtonsSession.infoMessage(\"Email sent\");                                                                 // 454\n    });                                                                                                                // 455\n  } else {                                                                                                             // 456\n    loginButtonsSession.errorMessage(\"Invalid email\");                                                                 // 457\n  }                                                                                                                    // 458\n};                                                                                                                     // 459\n                                                                                                                       // 460\nvar changePassword = function () {                                                                                     // 461\n  loginButtonsSession.resetMessages();                                                                                 // 462\n                                                                                                                       // 463\n  // notably not trimmed. a password could (?) start or end with a space                                               // 464\n  var oldPassword = elementValueById('login-old-password');                                                            // 465\n                                                                                                                       // 466\n  // notably not trimmed. a password could (?) start or end with a space                                               // 467\n  var password = elementValueById('login-password');                                                                   // 468\n  if (!validatePassword(password))                                                                                     // 469\n    return;                                                                                                            // 470\n                                                                                                                       // 471\n  if (!matchPasswordAgainIfPresent())                                                                                  // 472\n    return;                                                                                                            // 473\n                                                                                                                       // 474\n  Accounts.changePassword(oldPassword, password, function (error) {                                                    // 475\n    if (error) {                                                                                                       // 476\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");                                               // 477\n    } else {                                                                                                           // 478\n      loginButtonsSession.set('inChangePasswordFlow', false);                                                          // 479\n      loginButtonsSession.set('inMessageOnlyFlow', true);                                                              // 480\n      loginButtonsSession.infoMessage(\"Password changed\");                                                             // 481\n    }                                                                                                                  // 482\n  });                                                                                                                  // 483\n};                                                                                                                     // 484\n                                                                                                                       // 485\nvar matchPasswordAgainIfPresent = function () {                                                                        // 486\n  // notably not trimmed. a password could (?) start or end with a space                                               // 487\n  var passwordAgain = elementValueById('login-password-again');                                                        // 488\n  if (passwordAgain !== null) {                                                                                        // 489\n    // notably not trimmed. a password could (?) start or end with a space                                             // 490\n    var password = elementValueById('login-password');                                                                 // 491\n    if (password !== passwordAgain) {                                                                                  // 492\n      loginButtonsSession.errorMessage(\"Passwords don't match\");                                                       // 493\n      return false;                                                                                                    // 494\n    }                                                                                                                  // 495\n  }                                                                                                                    // 496\n  return true;                                                                                                         // 497\n};                                                                                                                     // 498\n                                                                                                                       // 499\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/accounts-ui-unstyled/login_buttons_dialogs.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// for convenience                                                                                                     // 1\nvar loginButtonsSession = Accounts._loginButtonsSession;                                                               // 2\n                                                                                                                       // 3\n// since we don't want to pass around the callback that we get from our event                                          // 4\n// handlers, we just make it a variable for the whole file                                                             // 5\nvar doneCallback;                                                                                                      // 6\n                                                                                                                       // 7\nAccounts.onResetPasswordLink(function (token, done) {                                                                  // 8\n  loginButtonsSession.set(\"resetPasswordToken\", token);                                                                // 9\n  doneCallback = done;                                                                                                 // 10\n});                                                                                                                    // 11\n                                                                                                                       // 12\nAccounts.onEnrollmentLink(function (token, done) {                                                                     // 13\n  loginButtonsSession.set(\"enrollAccountToken\", token);                                                                // 14\n  doneCallback = done;                                                                                                 // 15\n});                                                                                                                    // 16\n                                                                                                                       // 17\nAccounts.onEmailVerificationLink(function (token, done) {                                                              // 18\n  Accounts.verifyEmail(token, function (error) {                                                                       // 19\n    if (! error) {                                                                                                     // 20\n      loginButtonsSession.set('justVerifiedEmail', true);                                                              // 21\n    }                                                                                                                  // 22\n                                                                                                                       // 23\n    done();                                                                                                            // 24\n    // XXX show something if there was an error.                                                                       // 25\n  });                                                                                                                  // 26\n});                                                                                                                    // 27\n                                                                                                                       // 28\n                                                                                                                       // 29\n//                                                                                                                     // 30\n// resetPasswordDialog template                                                                                        // 31\n//                                                                                                                     // 32\n                                                                                                                       // 33\nTemplate._resetPasswordDialog.events({                                                                                 // 34\n  'click #login-buttons-reset-password-button': function () {                                                          // 35\n    resetPassword();                                                                                                   // 36\n  },                                                                                                                   // 37\n  'keypress #reset-password-new-password': function (event) {                                                          // 38\n    if (event.keyCode === 13)                                                                                          // 39\n      resetPassword();                                                                                                 // 40\n  },                                                                                                                   // 41\n  'click #login-buttons-cancel-reset-password': function () {                                                          // 42\n    loginButtonsSession.set('resetPasswordToken', null);                                                               // 43\n    if (doneCallback)                                                                                                  // 44\n      doneCallback();                                                                                                  // 45\n  }                                                                                                                    // 46\n});                                                                                                                    // 47\n                                                                                                                       // 48\nvar resetPassword = function () {                                                                                      // 49\n  loginButtonsSession.resetMessages();                                                                                 // 50\n  var newPassword = document.getElementById('reset-password-new-password').value;                                      // 51\n  if (!validatePassword(newPassword))                                                                                  // 52\n    return;                                                                                                            // 53\n                                                                                                                       // 54\n  Accounts.resetPassword(                                                                                              // 55\n    loginButtonsSession.get('resetPasswordToken'), newPassword,                                                        // 56\n    function (error) {                                                                                                 // 57\n      if (error) {                                                                                                     // 58\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");                                             // 59\n      } else {                                                                                                         // 60\n        loginButtonsSession.set('resetPasswordToken', null);                                                           // 61\n        loginButtonsSession.set('justResetPassword', true);                                                            // 62\n        if (doneCallback)                                                                                              // 63\n          doneCallback();                                                                                              // 64\n      }                                                                                                                // 65\n    });                                                                                                                // 66\n};                                                                                                                     // 67\n                                                                                                                       // 68\nTemplate._resetPasswordDialog.helpers({                                                                                // 69\n  inResetPasswordFlow: function () {                                                                                   // 70\n    return loginButtonsSession.get('resetPasswordToken');                                                              // 71\n  }                                                                                                                    // 72\n});                                                                                                                    // 73\n                                                                                                                       // 74\n//                                                                                                                     // 75\n// justResetPasswordDialog template                                                                                    // 76\n//                                                                                                                     // 77\n                                                                                                                       // 78\nTemplate._justResetPasswordDialog.events({                                                                             // 79\n  'click #just-verified-dismiss-button': function () {                                                                 // 80\n    loginButtonsSession.set('justResetPassword', false);                                                               // 81\n  }                                                                                                                    // 82\n});                                                                                                                    // 83\n                                                                                                                       // 84\nTemplate._justResetPasswordDialog.helpers({                                                                            // 85\n  visible: function () {                                                                                               // 86\n    return loginButtonsSession.get('justResetPassword');                                                               // 87\n  },                                                                                                                   // 88\n  displayName: displayName                                                                                             // 89\n});                                                                                                                    // 90\n                                                                                                                       // 91\n                                                                                                                       // 92\n                                                                                                                       // 93\n//                                                                                                                     // 94\n// enrollAccountDialog template                                                                                        // 95\n//                                                                                                                     // 96\n                                                                                                                       // 97\nTemplate._enrollAccountDialog.events({                                                                                 // 98\n  'click #login-buttons-enroll-account-button': function () {                                                          // 99\n    enrollAccount();                                                                                                   // 100\n  },                                                                                                                   // 101\n  'keypress #enroll-account-password': function (event) {                                                              // 102\n    if (event.keyCode === 13)                                                                                          // 103\n      enrollAccount();                                                                                                 // 104\n  },                                                                                                                   // 105\n  'click #login-buttons-cancel-enroll-account': function () {                                                          // 106\n    loginButtonsSession.set('enrollAccountToken', null);                                                               // 107\n    if (doneCallback)                                                                                                  // 108\n      doneCallback();                                                                                                  // 109\n  }                                                                                                                    // 110\n});                                                                                                                    // 111\n                                                                                                                       // 112\nvar enrollAccount = function () {                                                                                      // 113\n  loginButtonsSession.resetMessages();                                                                                 // 114\n  var password = document.getElementById('enroll-account-password').value;                                             // 115\n  if (!validatePassword(password))                                                                                     // 116\n    return;                                                                                                            // 117\n                                                                                                                       // 118\n  Accounts.resetPassword(                                                                                              // 119\n    loginButtonsSession.get('enrollAccountToken'), password,                                                           // 120\n    function (error) {                                                                                                 // 121\n      if (error) {                                                                                                     // 122\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");                                             // 123\n      } else {                                                                                                         // 124\n        loginButtonsSession.set('enrollAccountToken', null);                                                           // 125\n        if (doneCallback)                                                                                              // 126\n          doneCallback();                                                                                              // 127\n      }                                                                                                                // 128\n    });                                                                                                                // 129\n};                                                                                                                     // 130\n                                                                                                                       // 131\nTemplate._enrollAccountDialog.helpers({                                                                                // 132\n  inEnrollAccountFlow: function () {                                                                                   // 133\n    return loginButtonsSession.get('enrollAccountToken');                                                              // 134\n  }                                                                                                                    // 135\n});                                                                                                                    // 136\n                                                                                                                       // 137\n                                                                                                                       // 138\n//                                                                                                                     // 139\n// justVerifiedEmailDialog template                                                                                    // 140\n//                                                                                                                     // 141\n                                                                                                                       // 142\nTemplate._justVerifiedEmailDialog.events({                                                                             // 143\n  'click #just-verified-dismiss-button': function () {                                                                 // 144\n    loginButtonsSession.set('justVerifiedEmail', false);                                                               // 145\n  }                                                                                                                    // 146\n});                                                                                                                    // 147\n                                                                                                                       // 148\nTemplate._justVerifiedEmailDialog.helpers({                                                                            // 149\n  visible: function () {                                                                                               // 150\n    return loginButtonsSession.get('justVerifiedEmail');                                                               // 151\n  },                                                                                                                   // 152\n  displayName: displayName                                                                                             // 153\n});                                                                                                                    // 154\n                                                                                                                       // 155\n                                                                                                                       // 156\n//                                                                                                                     // 157\n// loginButtonsMessagesDialog template                                                                                 // 158\n//                                                                                                                     // 159\n                                                                                                                       // 160\nTemplate._loginButtonsMessagesDialog.events({                                                                          // 161\n  'click #messages-dialog-dismiss-button': function () {                                                               // 162\n    loginButtonsSession.resetMessages();                                                                               // 163\n  }                                                                                                                    // 164\n});                                                                                                                    // 165\n                                                                                                                       // 166\nTemplate._loginButtonsMessagesDialog.helpers({                                                                         // 167\n  visible: function () {                                                                                               // 168\n    var hasMessage = loginButtonsSession.get('infoMessage') || loginButtonsSession.get('errorMessage');                // 169\n    return !dropdown() && hasMessage;                                                                                  // 170\n  }                                                                                                                    // 171\n});                                                                                                                    // 172\n                                                                                                                       // 173\n                                                                                                                       // 174\n//                                                                                                                     // 175\n// configureLoginServiceDialog template                                                                                // 176\n//                                                                                                                     // 177\n                                                                                                                       // 178\nTemplate._configureLoginServiceDialog.events({                                                                         // 179\n  'click .configure-login-service-dismiss-button': function () {                                                       // 180\n    loginButtonsSession.set('configureLoginServiceDialogVisible', false);                                              // 181\n  },                                                                                                                   // 182\n  'click #configure-login-service-dialog-save-configuration': function () {                                            // 183\n    if (loginButtonsSession.get('configureLoginServiceDialogVisible') &&                                               // 184\n        ! loginButtonsSession.get('configureLoginServiceDialogSaveDisabled')) {                                        // 185\n      // Prepare the configuration document for this login service                                                     // 186\n      var serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');                             // 187\n      var configuration = {                                                                                            // 188\n        service: serviceName                                                                                           // 189\n      };                                                                                                               // 190\n                                                                                                                       // 191\n      // Fetch the value of each input field                                                                           // 192\n      _.each(configurationFields(), function(field) {                                                                  // 193\n        configuration[field.property] = document.getElementById(                                                       // 194\n          'configure-login-service-dialog-' + field.property).value                                                    // 195\n          .replace(/^\\s*|\\s*$/g, \"\"); // trim() doesnt work on IE8;                                                    // 196\n      });                                                                                                              // 197\n                                                                                                                       // 198\n      configuration.loginStyle =                                                                                       // 199\n        $('#configure-login-service-dialog input[name=\"loginStyle\"]:checked')                                          // 200\n        .val();                                                                                                        // 201\n                                                                                                                       // 202\n      // Configure this login service                                                                                  // 203\n      Accounts.connection.call(                                                                                        // 204\n        \"configureLoginService\", configuration, function (error, result) {                                             // 205\n          if (error)                                                                                                   // 206\n            Meteor._debug(\"Error configuring login service \" + serviceName,                                            // 207\n                          error);                                                                                      // 208\n          else                                                                                                         // 209\n            loginButtonsSession.set('configureLoginServiceDialogVisible',                                              // 210\n                                    false);                                                                            // 211\n        });                                                                                                            // 212\n    }                                                                                                                  // 213\n  },                                                                                                                   // 214\n  // IE8 doesn't support the 'input' event, so we'll run this on the keyup as                                          // 215\n  // well. (Keeping the 'input' event means that this also fires when you use                                          // 216\n  // the mouse to change the contents of the field, eg 'Cut' menu item.)                                               // 217\n  'input, keyup input': function (event) {                                                                             // 218\n    // if the event fired on one of the configuration input fields,                                                    // 219\n    // check whether we should enable the 'save configuration' button                                                  // 220\n    if (event.target.id.indexOf('configure-login-service-dialog') === 0)                                               // 221\n      updateSaveDisabled();                                                                                            // 222\n  }                                                                                                                    // 223\n});                                                                                                                    // 224\n                                                                                                                       // 225\n// check whether the 'save configuration' button should be enabled.                                                    // 226\n// this is a really strange way to implement this and a Forms                                                          // 227\n// Abstraction would make all of this reactive, and simpler.                                                           // 228\nvar updateSaveDisabled = function () {                                                                                 // 229\n  var anyFieldEmpty = _.any(configurationFields(), function(field) {                                                   // 230\n    return document.getElementById(                                                                                    // 231\n      'configure-login-service-dialog-' + field.property).value === '';                                                // 232\n  });                                                                                                                  // 233\n                                                                                                                       // 234\n  loginButtonsSession.set('configureLoginServiceDialogSaveDisabled', anyFieldEmpty);                                   // 235\n};                                                                                                                     // 236\n                                                                                                                       // 237\n// Returns the appropriate template for this login service.  This                                                      // 238\n// template should be defined in the service's package                                                                 // 239\nvar configureLoginServiceDialogTemplateForService = function () {                                                      // 240\n  var serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');                                 // 241\n  // XXX Service providers should be able to specify their configuration                                               // 242\n  // template name.                                                                                                    // 243\n  return Template['configureLoginServiceDialogFor' +                                                                   // 244\n                  (serviceName === 'meteor-developer' ?                                                                // 245\n                   'MeteorDeveloper' :                                                                                 // 246\n                   capitalize(serviceName))];                                                                          // 247\n};                                                                                                                     // 248\n                                                                                                                       // 249\nvar configurationFields = function () {                                                                                // 250\n  var template = configureLoginServiceDialogTemplateForService();                                                      // 251\n  return template.fields();                                                                                            // 252\n};                                                                                                                     // 253\n                                                                                                                       // 254\nTemplate._configureLoginServiceDialog.helpers({                                                                        // 255\n  configurationFields: function () {                                                                                   // 256\n    return configurationFields();                                                                                      // 257\n  },                                                                                                                   // 258\n  visible: function () {                                                                                               // 259\n    return loginButtonsSession.get('configureLoginServiceDialogVisible');                                              // 260\n  },                                                                                                                   // 261\n  configurationSteps: function () {                                                                                    // 262\n    // renders the appropriate template                                                                                // 263\n    return configureLoginServiceDialogTemplateForService();                                                            // 264\n  },                                                                                                                   // 265\n  saveDisabled: function () {                                                                                          // 266\n    return loginButtonsSession.get('configureLoginServiceDialogSaveDisabled');                                         // 267\n  }                                                                                                                    // 268\n});                                                                                                                    // 269\n                                                                                                                       // 270\n// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js                                         // 271\nvar capitalize = function(str){                                                                                        // 272\n  str = str == null ? '' : String(str);                                                                                // 273\n  return str.charAt(0).toUpperCase() + str.slice(1);                                                                   // 274\n};                                                                                                                     // 275\n                                                                                                                       // 276\nTemplate._configureLoginOnDesktopDialog.helpers({                                                                      // 277\n  visible: function () {                                                                                               // 278\n    return loginButtonsSession.get('configureOnDesktopVisible');                                                       // 279\n  }                                                                                                                    // 280\n});                                                                                                                    // 281\n                                                                                                                       // 282\nTemplate._configureLoginOnDesktopDialog.events({                                                                       // 283\n  'click #configure-on-desktop-dismiss-button': function () {                                                          // 284\n    loginButtonsSession.set('configureOnDesktopVisible', false);                                                       // 285\n  }                                                                                                                    // 286\n});                                                                                                                    // 287\n                                                                                                                       // 288\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['accounts-ui-unstyled'] = {};\n\n})();\n","servePath":"/packages/accounts-ui-unstyled.js"}]