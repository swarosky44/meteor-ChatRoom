[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// client/template.main.js                                                                        //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\n                                                                                                  // 1\nTemplate.body.addContent((function() {                                                            // 2\n  var view = this;                                                                                // 3\n  return HTML.Raw('<div id=\"render-target\"></div>');                                              // 4\n}));                                                                                              // 5\nMeteor.startup(Template.body.renderToDocument);                                                   // 6\n                                                                                                  // 7\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.jsx\":[\"react\",\"meteor/meteor\",\"react-dom\",\"../imports/startup/accounts-config.js\",\"../imports/ui/App.jsx\",function(require){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// client/main.jsx                                                                                //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nvar _react = require('react');                                                                    // 1\n                                                                                                  //\nvar _react2 = _interopRequireDefault(_react);                                                     //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 2\n                                                                                                  //\nvar _reactDom = require('react-dom');                                                             // 3\n                                                                                                  //\nrequire('../imports/startup/accounts-config.js');                                                 // 5\n                                                                                                  //\nvar _App = require('../imports/ui/App.jsx');                                                      // 6\n                                                                                                  //\nvar _App2 = _interopRequireDefault(_App);                                                         //\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n                                                                                                  //\n_meteor.Meteor.startup(function () {                                                              // 8\n  (0, _reactDom.render)(_react2['default'].createElement(_App2['default'], null), document.getElementById('render-target'));\n});                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"imports\":{\"api\":{\"msgs.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/api/msgs.js                                                                            //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\nexports.Msgs = undefined;                                                                         //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 1\n                                                                                                  //\nvar _mongo = require('meteor/mongo');                                                             // 2\n                                                                                                  //\nvar _check = require('meteor/check');                                                             // 3\n                                                                                                  //\nvar Msgs = exports.Msgs = new _mongo.Mongo.Collection('msgs');                                    // 5\nif (_meteor.Meteor.isServer) {                                                                    // 6\n  _meteor.Meteor.publish('msgs', function () {                                                    // 7\n    function msgsPublication() {                                                                  // 7\n      return Msgs.find({                                                                          // 8\n        $or: [{ send_id: this.userId }, { recevier_id: this.userId }]                             // 9\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return msgsPublication;                                                                       //\n  }());                                                                                           //\n}                                                                                                 //\n_meteor.Meteor.methods({                                                                          // 16\n  'msg.chatMsgs': function () {                                                                   // 17\n    function msgChatMsgs(friend_id) {                                                             //\n      console.log(this.userId, friend_id, 'xx');                                                  // 18\n      (0, _check.check)(friend_id, String);                                                       // 19\n      return Msgs.find({                                                                          // 20\n        $or: [{ send_id: \"jb6BJiYd7aKK2tvG4\", recevier_id: \"J7dTSDmwLs4jeqhHk\" }, { recevier_id: \"jb6BJiYd7aKK2tvG4\", send_id: \"J7dTSDmwLs4jeqhHk\" }]\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return msgChatMsgs;                                                                           //\n  }()                                                                                             //\n});                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"tasks.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/api/tasks.js                                                                           //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\nexports.Tasks = undefined;                                                                        //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 1\n                                                                                                  //\nvar _mongo = require('meteor/mongo');                                                             // 2\n                                                                                                  //\nvar _check = require('meteor/check');                                                             // 3\n                                                                                                  //\nvar Tasks = exports.Tasks = new _mongo.Mongo.Collection('tasks');                                 // 5\nif (_meteor.Meteor.isServer) {                                                                    // 6\n  // This code only runs on the server                                                            //\n  // Only return public tasks and private tasks belong to owner                                   //\n  _meteor.Meteor.publish('tasks', function () {                                                   // 9\n    function tasksPublication() {                                                                 // 9\n      return Tasks.find({                                                                         // 10\n        $or: [{ 'private': { $ne: true } }, { owner: this.userId }]                               // 11\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return tasksPublication;                                                                      //\n  }());                                                                                           //\n}                                                                                                 //\n_meteor.Meteor.methods({                                                                          // 18\n  'tasks.insert': function () {                                                                   // 19\n    function tasksInsert(text) {                                                                  //\n      (0, _check.check)(text, String);                                                            // 20\n                                                                                                  //\n      // Make sure the user is logged in before inserting a task                                  //\n      if (!_meteor.Meteor.userId()) {                                                             // 19\n        throw new _meteor.Meteor.Error('not-authorized');                                         // 24\n      }                                                                                           //\n                                                                                                  //\n      Tasks.insert({                                                                              // 27\n        text: text,                                                                               // 28\n        createdAt: new Date(),                                                                    // 29\n        owner: _meteor.Meteor.userId(),                                                           // 30\n        username: _meteor.Meteor.user().username                                                  // 31\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return tasksInsert;                                                                           //\n  }(),                                                                                            //\n  'tasks.remove': function () {                                                                   // 34\n    function tasksRemove(taskId) {                                                                //\n      (0, _check.check)(taskId, String);                                                          // 35\n                                                                                                  //\n      var task = Tasks.findOne(taskId);                                                           // 37\n      if (task['private'] && task.owner !== _meteor.Meteor.userId()) {                            // 38\n        // If the task is private, make sure only the owner can delete it                         //\n        throw new _meteor.Meteor.Error('not-authorized');                                         // 40\n      }                                                                                           //\n                                                                                                  //\n      Tasks.remove(taskId);                                                                       // 43\n    }                                                                                             //\n                                                                                                  //\n    return tasksRemove;                                                                           //\n  }(),                                                                                            //\n  'tasks.setChecked': function () {                                                               // 45\n    function tasksSetChecked(taskId, setChecked) {                                                //\n      (0, _check.check)(taskId, String);                                                          // 46\n      (0, _check.check)(setChecked, Boolean);                                                     // 47\n      var task = Tasks.findOne(taskId);                                                           // 48\n      if (task['private'] && task.owner !== _meteor.Meteor.userId()) {                            // 49\n        // If the task is private, make sure only the owner can check it off                      //\n        throw new _meteor.Meteor.Error('not-authorized');                                         // 51\n      }                                                                                           //\n      Tasks.update(taskId, { $set: { checked: setChecked } });                                    // 53\n    }                                                                                             //\n                                                                                                  //\n    return tasksSetChecked;                                                                       //\n  }(),                                                                                            //\n  'tasks.setPrivate': function () {                                                               // 55\n    function tasksSetPrivate(taskId, setToPrivate) {                                              //\n      (0, _check.check)(taskId, String);                                                          // 56\n      (0, _check.check)(setToPrivate, Boolean);                                                   // 57\n                                                                                                  //\n      var task = Tasks.findOne(taskId);                                                           // 59\n                                                                                                  //\n      // Make sure only the task owner can make a task private                                    //\n      if (task.owner !== _meteor.Meteor.userId()) {                                               // 55\n        throw new _meteor.Meteor.Error('not-authorized');                                         // 63\n      }                                                                                           //\n                                                                                                  //\n      Tasks.update(taskId, { $set: { 'private': setToPrivate } });                                // 66\n    }                                                                                             //\n                                                                                                  //\n    return tasksSetPrivate;                                                                       //\n  }()                                                                                             //\n});                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"users.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/api/users.js                                                                           //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\nexports.Users = undefined;                                                                        //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 1\n                                                                                                  //\nvar _mongo = require('meteor/mongo');                                                             // 2\n                                                                                                  //\nvar _check = require('meteor/check');                                                             // 3\n                                                                                                  //\nvar Users = exports.Users = _meteor.Meteor.users;                                                 // 5\nif (_meteor.Meteor.isServer) {                                                                    // 6\n  _meteor.Meteor.publish('users', function () {                                                   // 7\n    function usersPublication() {                                                                 // 7\n      return Users.find({});                                                                      // 8\n    }                                                                                             //\n                                                                                                  //\n    return usersPublication;                                                                      //\n  }());                                                                                           //\n}                                                                                                 //\n_meteor.Meteor.methods({                                                                          // 11\n  findUser: function () {                                                                         // 12\n    function findUser(userId) {                                                                   // 12\n      return Users.findOne({                                                                      // 13\n        _id: userId                                                                               // 14\n      }, {                                                                                        //\n        fields: {                                                                                 // 16\n          'username': 1                                                                           // 17\n        }                                                                                         //\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return findUser;                                                                              //\n  }()                                                                                             //\n});                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"startup\":{\"accounts-config.js\":[\"meteor/accounts-base\",function(require){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/startup/accounts-config.js                                                             //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nvar _accountsBase = require('meteor/accounts-base');                                              // 1\n                                                                                                  //\n_accountsBase.Accounts.ui.config({                                                                // 3\n  passwordSignupFields: 'USERNAME_ONLY'                                                           // 4\n});                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"ui\":{\"AccountsUIWrapper.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"react-dom\",\"meteor/templating\",\"meteor/blaze\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/ui/AccountsUIWrapper.jsx                                                               //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\n                                                                                                  //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                           //\n                                                                                                  //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                  //\n                                                                                                  //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');     //\n                                                                                                  //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);            //\n                                                                                                  //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                       //\n                                                                                                  //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                              //\n                                                                                                  //\nvar _react = require('react');                                                                    // 1\n                                                                                                  //\nvar _react2 = _interopRequireDefault(_react);                                                     //\n                                                                                                  //\nvar _reactDom = require('react-dom');                                                             // 2\n                                                                                                  //\nvar _reactDom2 = _interopRequireDefault(_reactDom);                                               //\n                                                                                                  //\nvar _templating = require('meteor/templating');                                                   // 3\n                                                                                                  //\nvar _blaze = require('meteor/blaze');                                                             // 4\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n                                                                                                  //\nvar AccountsUIWrapper = function (_Component) {                                                   //\n  (0, _inherits3['default'])(AccountsUIWrapper, _Component);                                      //\n                                                                                                  //\n  function AccountsUIWrapper() {                                                                  //\n    (0, _classCallCheck3['default'])(this, AccountsUIWrapper);                                    //\n    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));  //\n  }                                                                                               //\n                                                                                                  //\n  AccountsUIWrapper.prototype.componentDidMount = function () {                                   //\n    function componentDidMount() {                                                                //\n      // Use Meteor Blaze to render login buttons                                                 //\n      this.view = _blaze.Blaze.render(_templating.Template.loginButtons, _reactDom2['default'].findDOMNode(this.refs.container));\n    }                                                                                             //\n                                                                                                  //\n    return componentDidMount;                                                                     //\n  }();                                                                                            //\n                                                                                                  //\n  AccountsUIWrapper.prototype.componentWillUnmount = function () {                                // 6\n    function componentWillUnmount() {                                                             //\n      // Clean up Blaze view                                                                      //\n      _blaze.Blaze.remove(this.view);                                                             // 14\n    }                                                                                             //\n                                                                                                  //\n    return componentWillUnmount;                                                                  //\n  }();                                                                                            //\n                                                                                                  //\n  AccountsUIWrapper.prototype.render = function () {                                              // 6\n    function render() {                                                                           //\n      // Just render a placeholder container that will be filled in                               //\n      return _react2['default'].createElement('span', { ref: 'container' });                      // 18\n    }                                                                                             //\n                                                                                                  //\n    return render;                                                                                //\n  }();                                                                                            //\n                                                                                                  //\n  return AccountsUIWrapper;                                                                       //\n}(_react.Component);                                                                              //\n                                                                                                  //\nexports['default'] = AccountsUIWrapper;                                                           //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"App.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"react-dom\",\"meteor/meteor\",\"meteor/react-meteor-data\",\"../api/msgs.js\",\"../api/users.js\",\"./MsgBox.jsx\",\"../api/tasks.js\",\"./Task.jsx\",\"./AccountsUIWrapper.jsx\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/ui/App.jsx                                                                             //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\n                                                                                                  //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                           //\n                                                                                                  //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                  //\n                                                                                                  //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');     //\n                                                                                                  //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);            //\n                                                                                                  //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                       //\n                                                                                                  //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                              //\n                                                                                                  //\nvar _react = require('react');                                                                    // 1\n                                                                                                  //\nvar _react2 = _interopRequireDefault(_react);                                                     //\n                                                                                                  //\nvar _reactDom = require('react-dom');                                                             // 2\n                                                                                                  //\nvar _reactDom2 = _interopRequireDefault(_reactDom);                                               //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 3\n                                                                                                  //\nvar _reactMeteorData = require('meteor/react-meteor-data');                                       // 4\n                                                                                                  //\nvar _msgs = require('../api/msgs.js');                                                            // 5\n                                                                                                  //\nvar _users = require('../api/users.js');                                                          // 6\n                                                                                                  //\nvar _MsgBox = require('./MsgBox.jsx');                                                            // 7\n                                                                                                  //\nvar _MsgBox2 = _interopRequireDefault(_MsgBox);                                                   //\n                                                                                                  //\nvar _tasks = require('../api/tasks.js');                                                          // 8\n                                                                                                  //\nvar _Task = require('./Task.jsx');                                                                // 9\n                                                                                                  //\nvar _Task2 = _interopRequireDefault(_Task);                                                       //\n                                                                                                  //\nvar _AccountsUIWrapper = require('./AccountsUIWrapper.jsx');                                      // 10\n                                                                                                  //\nvar _AccountsUIWrapper2 = _interopRequireDefault(_AccountsUIWrapper);                             //\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n                                                                                                  //\nconsole.log(_meteor.Meteor.users.find().fetch(), 'xas');                                          // 11\n// App component - represents the whole app                                                       //\n                                                                                                  //\nvar App = function (_Component) {                                                                 //\n  (0, _inherits3['default'])(App, _Component);                                                    //\n                                                                                                  //\n  function App(props) {                                                                           // 14\n    (0, _classCallCheck3['default'])(this, App);                                                  //\n                                                                                                  //\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _Component.call(this, props));  //\n                                                                                                  //\n    _this.state = {                                                                               // 17\n      hideCompleted: false                                                                        // 18\n    };                                                                                            //\n    return _this;                                                                                 //\n  }                                                                                               //\n                                                                                                  //\n  App.prototype.handleSubmit = function () {                                                      // 13\n    function handleSubmit(event) {                                                                //\n      event.preventDefault();                                                                     // 23\n                                                                                                  //\n      // Find the text field via the React ref                                                    //\n      var text = _reactDom2['default'].findDOMNode(this.refs.textInput).value.trim();             // 22\n                                                                                                  //\n      _meteor.Meteor.call('tasks.insert', text);                                                  // 28\n                                                                                                  //\n      // Clear form                                                                               //\n      _reactDom2['default'].findDOMNode(this.refs.textInput).value = '';                          // 22\n    }                                                                                             //\n                                                                                                  //\n    return handleSubmit;                                                                          //\n  }();                                                                                            //\n                                                                                                  //\n  App.prototype.toggleHideCompleted = function () {                                               // 13\n    function toggleHideCompleted() {                                                              //\n      this.setState({                                                                             // 35\n        hideCompleted: !this.state.hideCompleted                                                  // 36\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return toggleHideCompleted;                                                                   //\n  }();                                                                                            //\n                                                                                                  //\n  App.prototype.renderTasks = function () {                                                       // 13\n    function renderTasks() {                                                                      //\n      var _this2 = this;                                                                          //\n                                                                                                  //\n      var filteredTasks = this.props.tasks;                                                       // 41\n      if (this.state.hideCompleted) {                                                             // 42\n        filteredTasks = filteredTasks.filter(function (task) {                                    // 43\n          return !task.checked;                                                                   //\n        });                                                                                       //\n      }                                                                                           //\n      return filteredTasks.map(function (task) {                                                  // 45\n        var currentUserId = _this2.props.currentUser && _this2.props.currentUser._id;             // 46\n        var showPrivateButton = task.owner === currentUserId;                                     // 47\n                                                                                                  //\n        return _react2['default'].createElement(_Task2['default'], {                              // 49\n          key: task._id,                                                                          // 51\n          task: task,                                                                             // 52\n          showPrivateButton: showPrivateButton                                                    // 53\n        });                                                                                       //\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return renderTasks;                                                                           //\n  }();                                                                                            //\n                                                                                                  //\n  App.prototype.render = function () {                                                            // 13\n    function render() {                                                                           //\n      return _react2['default'].createElement(                                                    // 59\n        'div',                                                                                    //\n        { className: 'container' },                                                               //\n        _react2['default'].createElement(_MsgBox2['default'], { msgs: this.props.msgs }),         //\n        _react2['default'].createElement(                                                         //\n          'header',                                                                               //\n          null,                                                                                   //\n          _react2['default'].createElement(                                                       //\n            'h1',                                                                                 //\n            null,                                                                                 //\n            'Todo List (',                                                                        //\n            this.props.incompleteCount,                                                           //\n            ')'                                                                                   //\n          ),                                                                                      //\n          _react2['default'].createElement(                                                       //\n            'label',                                                                              //\n            { className: 'hide-completed' },                                                      //\n            _react2['default'].createElement('input', {                                           //\n              type: 'checkbox',                                                                   // 67\n              readOnly: true,                                                                     // 68\n              checked: this.state.hideCompleted,                                                  // 69\n              onClick: this.toggleHideCompleted.bind(this)                                        // 70\n            }),                                                                                   //\n            'Hide Completed Tasks'                                                                //\n          ),                                                                                      //\n          _react2['default'].createElement(_AccountsUIWrapper2['default'], null),                 //\n          this.props.currentUser ? _react2['default'].createElement(                              //\n            'form',                                                                               //\n            { className: 'new-task', onSubmit: this.handleSubmit.bind(this) },                    //\n            _react2['default'].createElement('input', {                                           //\n              type: 'text',                                                                       // 80\n              ref: 'textInput',                                                                   // 81\n              placeholder: 'Type to add new tasks'                                                // 82\n            })                                                                                    //\n          ) : ''                                                                                  //\n        ),                                                                                        //\n        _react2['default'].createElement(                                                         //\n          'ul',                                                                                   //\n          null,                                                                                   //\n          this.renderTasks()                                                                      //\n        )                                                                                         //\n      );                                                                                          //\n    }                                                                                             //\n                                                                                                  //\n    return render;                                                                                //\n  }();                                                                                            //\n                                                                                                  //\n  return App;                                                                                     //\n}(_react.Component);                                                                              //\n                                                                                                  //\nApp.propTypes = {                                                                                 // 97\n  msgs: _react.PropTypes.array.isRequired,                                                        // 98\n  tasks: _react.PropTypes.array.isRequired,                                                       // 99\n  incompleteCount: _react.PropTypes.number.isRequired,                                            // 100\n  currentUser: _react.PropTypes.object                                                            // 101\n};                                                                                                //\n                                                                                                  //\nexports['default'] = (0, _reactMeteorData.createContainer)(function () {                          //\n  _meteor.Meteor.subscribe('tasks');                                                              // 105\n  _meteor.Meteor.subscribe('msgs');                                                               // 106\n  _meteor.Meteor.subscribe('users');                                                              // 107\n  return {                                                                                        // 108\n    msgs: _msgs.Msgs.find({}).fetch(),                                                            // 109\n    tasks: _tasks.Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),                            // 110\n    incompleteCount: _tasks.Tasks.find({ checked: { $ne: true } }).count(),                       // 111\n    currentUser: _meteor.Meteor.user()                                                            // 112\n  };                                                                                              //\n}, App);                                                                                          //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"MsgBox.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"meteor/meteor\",\"classnames\",\"./MsgBoxItem.jsx\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/ui/MsgBox.jsx                                                                          //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\n                                                                                                  //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                           //\n                                                                                                  //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                  //\n                                                                                                  //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');     //\n                                                                                                  //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);            //\n                                                                                                  //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                       //\n                                                                                                  //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                              //\n                                                                                                  //\nvar _react = require('react');                                                                    // 1\n                                                                                                  //\nvar _react2 = _interopRequireDefault(_react);                                                     //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 2\n                                                                                                  //\nvar _classnames = require('classnames');                                                          // 3\n                                                                                                  //\nvar _classnames2 = _interopRequireDefault(_classnames);                                           //\n                                                                                                  //\nvar _MsgBoxItem = require('./MsgBoxItem.jsx');                                                    // 4\n                                                                                                  //\nvar _MsgBoxItem2 = _interopRequireDefault(_MsgBoxItem);                                           //\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n                                                                                                  //\n// MsgBox component - represents user's msg list                                                  //\n                                                                                                  //\nvar MsgBox = function (_Component) {                                                              //\n  (0, _inherits3['default'])(MsgBox, _Component);                                                 //\n                                                                                                  //\n  function MsgBox() {                                                                             //\n    (0, _classCallCheck3['default'])(this, MsgBox);                                               //\n    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));  //\n  }                                                                                               //\n                                                                                                  //\n  MsgBox.prototype.renderMsgList = function () {                                                  //\n    function renderMsgList() {                                                                    //\n      var msgs = this.props.msgs;                                                                 // 8\n      return msgs.map(function (msg) {                                                            // 9\n        return _react2['default'].createElement(_MsgBoxItem2['default'], {                        // 10\n          key: msg._id,                                                                           // 12\n          msg: msg                                                                                // 13\n        });                                                                                       //\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return renderMsgList;                                                                         //\n  }();                                                                                            //\n                                                                                                  //\n  MsgBox.prototype.render = function () {                                                         // 6\n    function render() {                                                                           //\n      var unreadMsgCount = 0;                                                                     // 19\n      var totalMsgCount = 0;                                                                      // 20\n      return _react2['default'].createElement(                                                    // 21\n        'div',                                                                                    //\n        { className: 'page' },                                                                    //\n        _react2['default'].createElement(                                                         //\n          'h1',                                                                                   //\n          { className: 'page-title' },                                                            //\n          'My Messages',                                                                          //\n          _react2['default'].createElement(                                                       //\n            'div',                                                                                //\n            { className: 'msg-count' },                                                           //\n            _react2['default'].createElement(                                                     //\n              'span',                                                                             //\n              { className: 'msg-count-unread' },                                                  //\n              ' 1 '                                                                               //\n            ),                                                                                    //\n            ' / 2'                                                                                //\n          )                                                                                       //\n        ),                                                                                        //\n        _react2['default'].createElement(                                                         //\n          'ul',                                                                                   //\n          { className: 'msg-list' },                                                              //\n          this.renderMsgList()                                                                    //\n        )                                                                                         //\n      );                                                                                          //\n    }                                                                                             //\n                                                                                                  //\n    return render;                                                                                //\n  }();                                                                                            //\n                                                                                                  //\n  return MsgBox;                                                                                  //\n}(_react.Component);                                                                              //\n                                                                                                  //\nexports['default'] = MsgBox;                                                                      //\n                                                                                                  //\n                                                                                                  //\nMsgBox.propTypes = {                                                                              // 37\n  msgs: _react.PropTypes.array.isRequired                                                         // 38\n};                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"MsgBoxItem.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"meteor/meteor\",\"classnames\",\"../api/users.js\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/ui/MsgBoxItem.jsx                                                                      //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\n                                                                                                  //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                           //\n                                                                                                  //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                  //\n                                                                                                  //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');     //\n                                                                                                  //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);            //\n                                                                                                  //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                       //\n                                                                                                  //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                              //\n                                                                                                  //\nvar _react = require('react');                                                                    // 1\n                                                                                                  //\nvar _react2 = _interopRequireDefault(_react);                                                     //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 2\n                                                                                                  //\nvar _classnames = require('classnames');                                                          // 3\n                                                                                                  //\nvar _classnames2 = _interopRequireDefault(_classnames);                                           //\n                                                                                                  //\nvar _users = require('../api/users.js');                                                          // 4\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n                                                                                                  //\n// MsgBoxItem component - represents msg item of user's msgBox list                               //\n                                                                                                  //\nvar MsgBoxItem = function (_Component) {                                                          //\n  (0, _inherits3['default'])(MsgBoxItem, _Component);                                             //\n                                                                                                  //\n  function MsgBoxItem(props) {                                                                    // 7\n    (0, _classCallCheck3['default'])(this, MsgBoxItem);                                           //\n                                                                                                  //\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _Component.call(this, props));  //\n                                                                                                  //\n    _this.state = {                                                                               // 9\n      friendName: '',                                                                             // 10\n      chatMsg: ''                                                                                 // 11\n    };                                                                                            //\n    return _this;                                                                                 //\n  }                                                                                               //\n                                                                                                  //\n  MsgBoxItem.prototype.getFriendName = function () {                                              // 6\n    function getFriendName(send_id, recevier_id) {                                                //\n      var _this2 = this;                                                                          //\n                                                                                                  //\n      var friend_id = send_id == _meteor.Meteor.userId() ? recevier_id : send_id;                 // 15\n      _meteor.Meteor.call('findUser', friend_id, function (err, res) {                            // 16\n        _this2.setState({ friendName: res.username });                                            // 17\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return getFriendName;                                                                         //\n  }();                                                                                            //\n                                                                                                  //\n  MsgBoxItem.prototype.componentWillMount = function () {                                         // 6\n    function componentWillMount() {                                                               //\n      this.getFriendName(this.props.msg.send_id, this.props.msg.recevier_id);                     // 22\n    }                                                                                             //\n                                                                                                  //\n    return componentWillMount;                                                                    //\n  }();                                                                                            //\n                                                                                                  //\n  MsgBoxItem.prototype.renderMsg = function () {                                                  // 6\n    function renderMsg(f_id) {                                                                    //\n      _meteor.Meteor.call('msg.chatMsgs', f_id, function (err, res) {                             // 26\n        console.log(res, 'chatMsgs');                                                             // 27\n      });                                                                                         //\n    }                                                                                             //\n                                                                                                  //\n    return renderMsg;                                                                             //\n  }();                                                                                            //\n                                                                                                  //\n  MsgBoxItem.prototype.render = function () {                                                     // 6\n    function render() {                                                                           //\n      var itemClassName = (0, _classnames2['default'])({                                          // 32\n        'msg-item': true,                                                                         // 33\n        'msg-item--unread': this.props.msg.isUnread                                               // 34\n      });                                                                                         //\n      var msg = this.props.msg;                                                                   // 36\n      return _react2['default'].createElement(                                                    // 37\n        'li',                                                                                     //\n        { className: '{{ itemClassName }}' },                                                     //\n        _react2['default'].createElement(                                                         //\n          'span',                                                                                 //\n          { className: 'msg-item_name' },                                                         //\n          ' ',                                                                                    //\n          this.state.friendName,                                                                  //\n          ' '                                                                                     //\n        ),                                                                                        //\n        _react2['default'].createElement(                                                         //\n          'span',                                                                                 //\n          null,                                                                                   //\n          this.renderMsg(msg._id)                                                                 //\n        )                                                                                         //\n      );                                                                                          //\n    }                                                                                             //\n                                                                                                  //\n    return render;                                                                                //\n  }();                                                                                            //\n                                                                                                  //\n  return MsgBoxItem;                                                                              //\n}(_react.Component);                                                                              //\n                                                                                                  //\nexports['default'] = MsgBoxItem;                                                                  //\n                                                                                                  //\n                                                                                                  //\nMsgBoxItem.propTypes = {                                                                          // 46\n  msg: _react.PropTypes.object.isRequired                                                         // 47\n};                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"Task.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"meteor/meteor\",\"classnames\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/ui/Task.jsx                                                                            //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\n                                                                                                  //\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');                           //\n                                                                                                  //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                  //\n                                                                                                  //\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');     //\n                                                                                                  //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);            //\n                                                                                                  //\nvar _inherits2 = require('babel-runtime/helpers/inherits');                                       //\n                                                                                                  //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                              //\n                                                                                                  //\nvar _react = require('react');                                                                    // 1\n                                                                                                  //\nvar _react2 = _interopRequireDefault(_react);                                                     //\n                                                                                                  //\nvar _meteor = require('meteor/meteor');                                                           // 2\n                                                                                                  //\nvar _classnames = require('classnames');                                                          // 3\n                                                                                                  //\nvar _classnames2 = _interopRequireDefault(_classnames);                                           //\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n                                                                                                  //\n// Task component - represents a single todo item                                                 //\n                                                                                                  //\nvar Task = function (_Component) {                                                                //\n  (0, _inherits3['default'])(Task, _Component);                                                   //\n                                                                                                  //\n  function Task() {                                                                               //\n    (0, _classCallCheck3['default'])(this, Task);                                                 //\n    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));  //\n  }                                                                                               //\n                                                                                                  //\n  Task.prototype.togglePrivate = function () {                                                    //\n    function togglePrivate() {                                                                    //\n      _meteor.Meteor.call('tasks.setPrivate', this.props.task._id, !this.props.task['private']);  // 7\n    }                                                                                             //\n                                                                                                  //\n    return togglePrivate;                                                                         //\n  }();                                                                                            //\n                                                                                                  //\n  Task.prototype.toggleChecked = function () {                                                    // 5\n    function toggleChecked() {                                                                    //\n      // Set the checked property to the opposite of its current value                            //\n      _meteor.Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);     // 12\n    }                                                                                             //\n                                                                                                  //\n    return toggleChecked;                                                                         //\n  }();                                                                                            //\n                                                                                                  //\n  Task.prototype.deleteThisTask = function () {                                                   // 5\n    function deleteThisTask() {                                                                   //\n      _meteor.Meteor.call('tasks.remove', this.props.task._id);                                   // 16\n    }                                                                                             //\n                                                                                                  //\n    return deleteThisTask;                                                                        //\n  }();                                                                                            //\n                                                                                                  //\n  Task.prototype.render = function () {                                                           // 5\n    function render() {                                                                           //\n      var taskClassName = (0, _classnames2['default'])({                                          // 20\n        checked: this.props.task.checked,                                                         // 21\n        'private': this.props.task['private']                                                     // 22\n      });                                                                                         //\n                                                                                                  //\n      return _react2['default'].createElement(                                                    // 25\n        'li',                                                                                     //\n        { className: taskClassName },                                                             //\n        _react2['default'].createElement(                                                         //\n          'button',                                                                               //\n          { className: 'delete', onClick: this.deleteThisTask.bind(this) },                       //\n          '×'                                                                                     //\n        ),                                                                                        //\n        _react2['default'].createElement('input', {                                               //\n          type: 'checkbox',                                                                       // 32\n          readOnly: true,                                                                         // 33\n          checked: this.props.task.checked,                                                       // 34\n          onClick: this.toggleChecked.bind(this)                                                  // 35\n        }),                                                                                       //\n        this.props.showPrivateButton ? _react2['default'].createElement(                          //\n          'button',                                                                               //\n          { className: 'toggle-private', onClick: this.togglePrivate.bind(this) },                //\n          this.props.task['private'] ? 'Private' : 'Public'                                       //\n        ) : '',                                                                                   //\n        _react2['default'].createElement(                                                         //\n          'span',                                                                                 //\n          { className: 'text' },                                                                  //\n          _react2['default'].createElement(                                                       //\n            'strong',                                                                             //\n            null,                                                                                 //\n            this.props.task.username                                                              //\n          ),                                                                                      //\n          ': ',                                                                                   //\n          this.props.task.text                                                                    //\n        )                                                                                         //\n      );                                                                                          //\n    }                                                                                             //\n                                                                                                  //\n    return render;                                                                                //\n  }();                                                                                            //\n                                                                                                  //\n  return Task;                                                                                    //\n}(_react.Component);                                                                              //\n                                                                                                  //\nexports['default'] = Task;                                                                        //\n                                                                                                  //\n                                                                                                  //\nTask.propTypes = {                                                                                // 52\n  // This component gets the task to display through a React prop.                                //\n  // We can use propTypes to indicate it is required                                              //\n  task: _react.PropTypes.object.isRequired,                                                       // 55\n  showPrivateButton: _react2['default'].PropTypes.bool.isRequired                                 // 56\n};                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}},{\"extensions\":[\".js\",\".json\",\".html\",\".jsx\",\".less\"]});\nrequire(\"./client/main.html\");\nrequire(\"./client/main.jsx\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/main.jsx","/imports/api/msgs.js","/imports/api/tasks.js","/imports/api/users.js","/imports/startup/accounts-config.js","/imports/ui/AccountsUIWrapper.jsx","/imports/ui/App.jsx","/imports/ui/MsgBox.jsx","/imports/ui/MsgBoxItem.jsx","/imports/ui/Task.jsx"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n \nimport '../imports/startup/accounts-config.js';\nimport App from '../imports/ui/App.jsx';\n \nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});","import { Meteor } from 'meteor/meteor'\nimport { Mongo } from 'meteor/mongo'\nimport { check } from 'meteor/check'\n \nexport const Msgs = new Mongo.Collection('msgs');\nif (Meteor.isServer) {\n  Meteor.publish('msgs', function msgsPublication() {\n    return Msgs.find({\n      $or: [\n        { send_id: this.userId },\n        { recevier_id: this.userId },\n      ],\n    })\n  })\n} \nMeteor.methods({\n  'msg.chatMsgs'(friend_id) {\n    console.log(this.userId, friend_id, 'xx')\n    check(friend_id, String)\n    return Msgs.find({ \n      $or: [\n        {send_id: \"jb6BJiYd7aKK2tvG4\", recevier_id:\"J7dTSDmwLs4jeqhHk\"}, \n        {recevier_id: \"jb6BJiYd7aKK2tvG4\", send_id: \"J7dTSDmwLs4jeqhHk\"}\n      ] \n    })\n  } \n})","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n \nexport const Tasks = new Mongo.Collection('tasks');\nif (Meteor.isServer) {\n  // This code only runs on the server\n  // Only return public tasks and private tasks belong to owner\n  Meteor.publish('tasks', function tasksPublication() {\n    return Tasks.find({\n      $or: [\n        { private: { $ne: true } },\n        { owner: this.userId },\n      ],\n    });\n  });\n} \nMeteor.methods({\n  'tasks.insert'(text) {\n    check(text, String);\n \n    // Make sure the user is logged in before inserting a task\n    if (! Meteor.userId()) {\n      throw new Meteor.Error('not-authorized');\n    }\n \n    Tasks.insert({\n      text,\n      createdAt: new Date(),\n      owner: Meteor.userId(),\n      username: Meteor.user().username,\n    });\n  },\n  'tasks.remove'(taskId) {\n    check(taskId, String);\n\n    const task = Tasks.findOne(taskId);\n    if (task.private && task.owner !== Meteor.userId()) {\n      // If the task is private, make sure only the owner can delete it\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.remove(taskId);\n  },\n  'tasks.setChecked'(taskId, setChecked) {\n    check(taskId, String);\n    check(setChecked, Boolean);\n    const task = Tasks.findOne(taskId);\n    if (task.private && task.owner !== Meteor.userId()) {\n      // If the task is private, make sure only the owner can check it off\n      throw new Meteor.Error('not-authorized');\n    }\n    Tasks.update(taskId, { $set: { checked: setChecked } });\n  },\n  'tasks.setPrivate'(taskId, setToPrivate) {\n    check(taskId, String);\n    check(setToPrivate, Boolean);\n \n    const task = Tasks.findOne(taskId);\n \n    // Make sure only the task owner can make a task private\n    if (task.owner !== Meteor.userId()) {\n      throw new Meteor.Error('not-authorized');\n    }\n \n    Tasks.update(taskId, { $set: { private: setToPrivate } });\n  },\n});","import { Meteor } from 'meteor/meteor'\nimport { Mongo } from 'meteor/mongo'\nimport { check } from 'meteor/check'\n \nexport const Users = Meteor.users;\nif (Meteor.isServer) {\n  Meteor.publish('users', function usersPublication() {\n    return Users.find({})\n  })\n} \nMeteor.methods({\n  findUser: function(userId) {\n    return Users.findOne({\n      _id: userId\n    }, {\n      fields: {\n        'username': 1\n      }\n    });\n  }\n});","import { Accounts } from 'meteor/accounts-base';\n \nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n});","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n \nexport default class AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons,\n      ReactDOM.findDOMNode(this.refs.container));\n  }\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n  render() {\n    // Just render a placeholder container that will be filled in\n    return <span ref=\"container\" />;\n  }\n}","import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Meteor } from 'meteor/meteor';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { Msgs } from '../api/msgs.js'\nimport { Users } from '../api/users.js'\nimport MsgBox from './MsgBox.jsx'\nimport { Tasks } from '../api/tasks.js';\nimport Task from './Task.jsx';\nimport AccountsUIWrapper from './AccountsUIWrapper.jsx';\nconsole.log(Meteor.users.find().fetch(), 'xas')\n// App component - represents the whole app\nclass App extends Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      hideCompleted: false,\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n \n    // Find the text field via the React ref\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n    \n    Meteor.call('tasks.insert', text);\n\n    // Clear form\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted,\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n    return filteredTasks.map((task) => {\n      const currentUserId = this.props.currentUser && this.props.currentUser._id;\n      const showPrivateButton = task.owner === currentUserId;\n \n      return (\n        <Task\n          key={task._id}\n          task={task}\n          showPrivateButton={showPrivateButton}\n        />\n      );\n    });\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <MsgBox msgs={ this.props.msgs }/>\n        <header>\n          <h1>Todo List ({this.props.incompleteCount})</h1>\n          \n          <label className=\"hide-completed\">\n            <input\n              type=\"checkbox\"\n              readOnly\n              checked={this.state.hideCompleted}\n              onClick={this.toggleHideCompleted.bind(this)}\n            />\n            Hide Completed Tasks\n          </label>\n\n          <AccountsUIWrapper />\n\n          { this.props.currentUser ?\n            <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n              <input\n                type=\"text\"\n                ref=\"textInput\"\n                placeholder=\"Type to add new tasks\"\n              />\n            </form> : ''\n          }\n        </header>\n \n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n\n    );\n  }\n}\n \nApp.propTypes = {\n  msgs: PropTypes.array.isRequired,\n  tasks: PropTypes.array.isRequired,\n  incompleteCount: PropTypes.number.isRequired,\n  currentUser: PropTypes.object,\n};\n \nexport default createContainer(() => {\n  Meteor.subscribe('tasks');\n  Meteor.subscribe('msgs');\n  Meteor.subscribe('users');\n  return {\n    msgs: Msgs.find({}).fetch(),\n    tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\n    incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),\n    currentUser: Meteor.user(),\n  };\n}, App);","import React, { Component, PropTypes } from 'react'\nimport { Meteor } from 'meteor/meteor'\nimport classnames from 'classnames'\nimport MsgBoxItem from \"./MsgBoxItem.jsx\"\n// MsgBox component - represents user's msg list\nexport default class MsgBox extends Component {\n  renderMsgList() {\n    let msgs = this.props.msgs\n    return msgs.map((msg) => {\n      return (\n        <MsgBoxItem\n          key={msg._id}\n          msg={msg}\n        />\n      )\n    })\n  }\n  render() {\n    const unreadMsgCount = 0\n    const totalMsgCount = 0\n    return (\n      <div className=\"page\">\n        <h1 className=\"page-title\">\n          My Messages\n          <div className=\"msg-count\">\n            <span className=\"msg-count-unread\"> 1 </span> / 2\n          </div>\n        </h1>\n        <ul className=\"msg-list\">  \n          { this.renderMsgList() }\n        </ul>\n      </div>\n    )\n  }\n}\n \nMsgBox.propTypes = {\n  msgs: PropTypes.array.isRequired\n}","import React, { Component, PropTypes } from 'react'\nimport { Meteor } from 'meteor/meteor'\nimport classnames from 'classnames'\nimport { Users } from '../api/users.js'\n// MsgBoxItem component - represents msg item of user's msgBox list\nexport default class MsgBoxItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friendName: '',\n      chatMsg: ''\n    }\n  }\n  getFriendName (send_id, recevier_id) {\n    let friend_id = send_id == Meteor.userId() ? recevier_id : send_id\n    Meteor.call('findUser', friend_id, (err, res) => {\n      this.setState({ friendName: res.username })\n    })\n  }\n\n  componentWillMount () {\n    this.getFriendName(this.props.msg.send_id, this.props.msg.recevier_id)\n  }\n\n  renderMsg(f_id) {\n    Meteor.call('msg.chatMsgs', f_id, (err, res) => {\n      console.log(res,'chatMsgs')\n    })\n  }\n\n  render () {\n    const itemClassName = classnames({\n      'msg-item': true,\n      'msg-item--unread': this.props.msg.isUnread\n    })\n    const msg = this.props.msg\n    return (\n      <li className=\"{{ itemClassName }}\">\n        <span className=\"msg-item_name\"> { this.state.friendName } </span> \n        <span>{ this.renderMsg(msg._id) }</span>\n      </li>\n    )\n  }\n}\n \nMsgBoxItem.propTypes = {\n  msg: PropTypes.object.isRequired\n}","import React, { Component, PropTypes } from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport classnames from 'classnames';\n// Task component - represents a single todo item\nexport default class Task extends Component {\n  togglePrivate() {\n    Meteor.call('tasks.setPrivate', this.props.task._id, ! this.props.task.private);\n  }\n\n  toggleChecked() {\n    // Set the checked property to the opposite of its current value\n    Meteor.call('tasks.setChecked', this.props.task._id, !this.props.task.checked);\n  }\n \n  deleteThisTask() {\n    Meteor.call('tasks.remove', this.props.task._id);\n  }\n\n  render() {\n    const taskClassName = classnames({\n      checked: this.props.task.checked,\n      private: this.props.task.private,\n    });\n \n    return (\n      <li className={taskClassName}>\n        <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\n          &times;\n        </button>\n \n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={this.props.task.checked}\n          onClick={this.toggleChecked.bind(this)}\n        />\n\n        { this.props.showPrivateButton ? (\n          <button className=\"toggle-private\" onClick={this.togglePrivate.bind(this)}>\n            { this.props.task.private ? 'Private' : 'Public' }\n          </button>\n        ) : ''}\n\n        <span className=\"text\">\n          <strong>{this.props.task.username}</strong>: {this.props.task.text}\n        </span>\n      </li>\n    );\n  }\n}\n \nTask.propTypes = {\n  // This component gets the task to display through a React prop.\n  // We can use propTypes to indicate it is required\n  task: PropTypes.object.isRequired,\n  showPrivateButton: React.PropTypes.bool.isRequired,\n};"]}}]