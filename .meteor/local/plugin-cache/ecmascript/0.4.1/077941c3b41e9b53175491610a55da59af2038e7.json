{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"./accounts_server.js","imported":["AccountsServer"],"specifiers":[{"kind":"named","imported":"AccountsServer","local":"AccountsServer"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/accounts-base/url_server.js","filenameRelative":"/packages/accounts-base/url_server.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/accounts-base/url_server.js.map","sourceFileName":"/packages/accounts-base/url_server.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"url_server"},"ignored":false,"code":"var _accounts_server = require('./accounts_server.js');\n\n// XXX These should probably not actually be public?\n\n_accounts_server.AccountsServer.prototype.urls = {\n  resetPassword: function () {\n    function resetPassword(token) {\n      return Meteor.absoluteUrl('#/reset-password/' + token);\n    }\n\n    return resetPassword;\n  }(),\n\n  verifyEmail: function () {\n    function verifyEmail(token) {\n      return Meteor.absoluteUrl('#/verify-email/' + token);\n    }\n\n    return verifyEmail;\n  }(),\n\n  enrollAccount: function () {\n    function enrollAccount(token) {\n      return Meteor.absoluteUrl('#/enroll-account/' + token);\n    }\n\n    return enrollAccount;\n  }()\n};","ast":null,"map":{"version":3,"sources":["/packages/accounts-base/url_server.js"],"names":[],"mappings":"AAAA;;;;AAIA,gCAAe,SAAf,CAAyB,IAAzB,GAAgC;AAC9B;AAAe,2BAAU,KAAV,EAAiB;AAC9B,aAAO,OAAO,WAAP,CAAmB,sBAAsB,KAAtB,CAA1B,CAD8B;KAAjB;;;KAAf;;AAIA;AAAa,yBAAU,KAAV,EAAiB;AAC5B,aAAO,OAAO,WAAP,CAAmB,oBAAoB,KAApB,CAA1B,CAD4B;KAAjB;;;KAAb;;AAIA;AAAe,2BAAU,KAAV,EAAiB;AAC9B,aAAO,OAAO,WAAP,CAAmB,sBAAsB,KAAtB,CAA1B,CAD8B;KAAjB;;;KAAf;CATF","file":"/packages/accounts-base/url_server.js.map","sourcesContent":["import {AccountsServer} from \"./accounts_server.js\";\n\n// XXX These should probably not actually be public?\n\nAccountsServer.prototype.urls = {\n  resetPassword: function (token) {\n    return Meteor.absoluteUrl('#/reset-password/' + token);\n  },\n\n  verifyEmail: function (token) {\n    return Meteor.absoluteUrl('#/verify-email/' + token);\n  },\n\n  enrollAccount: function (token) {\n    return Meteor.absoluteUrl('#/enroll-account/' + token);\n  }\n};\n"]},"hash":"077941c3b41e9b53175491610a55da59af2038e7"}
