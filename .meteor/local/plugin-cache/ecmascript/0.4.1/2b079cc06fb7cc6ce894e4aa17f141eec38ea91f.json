{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/reactive-dict/reactive-dict-tests.js","filenameRelative":"/packages/reactive-dict/reactive-dict-tests.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/reactive-dict/reactive-dict-tests.js.map","sourceFileName":"/packages/reactive-dict/reactive-dict-tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"reactive-dict-tests"},"ignored":false,"code":"Tinytest.add('ReactiveDict - set to undefined', function (test) {\n  var dict = new ReactiveDict();\n  dict.set('foo', undefined);\n  test.equal(_.keys(dict.all()), ['foo']);\n  dict.setDefault('foo', 'bar');\n  test.equal(dict.get('foo'), undefined);\n});\n\nTinytest.add('ReactiveDict - setDefault', function (test) {\n  var dict = new ReactiveDict();\n  dict.set('A', 'blah');\n  dict.set('B', undefined);\n  dict.setDefault('A', 'default');\n  dict.setDefault('B', 'default');\n  dict.setDefault('C', 'default');\n  dict.setDefault('D', undefined);\n  test.equal(dict.all(), { A: 'blah', B: undefined,\n    C: 'default', D: undefined });\n});\n\nTinytest.add('ReactiveDict - all() works', function (test) {\n  var all = {},\n      dict = new ReactiveDict();\n  Tracker.autorun(function () {\n    all = dict.all();\n  });\n\n  test.equal(all, {});\n\n  dict.set('foo', 'bar');\n  Tracker.flush();\n  test.equal(all, { foo: 'bar' });\n\n  dict.set('blah', undefined);\n  Tracker.flush();\n  test.equal(all, { foo: 'bar', blah: undefined });\n});\n\nTinytest.add('ReactiveDict - clear() works', function (test) {\n  var dict = new ReactiveDict();\n  dict.set('foo', 'bar');\n\n  // Clear should not throw an error now\n  // See issue #5530\n  dict.clear();\n\n  dict.set('foo', 'bar');\n\n  var val, equals, equalsUndefined, all;\n  Tracker.autorun(function () {\n    val = dict.get('foo');\n  });\n  Tracker.autorun(function () {\n    equals = dict.equals('foo', 'bar');\n  });\n  Tracker.autorun(function () {\n    equalsUndefined = dict.equals('foo', undefined);\n  });\n  Tracker.autorun(function () {\n    all = dict.all();\n  });\n\n  test.equal(val, 'bar');\n  test.equal(equals, true);\n  test.equal(equalsUndefined, false);\n  test.equal(all, { foo: 'bar' });\n\n  dict.clear();\n  Tracker.flush();\n  test.isUndefined(val);\n  test.equal(equals, false);\n  test.equal(equalsUndefined, true);\n  test.equal(all, {});\n});\n\nTinytest.add('ReactiveDict - delete(key) works', function (test) {\n  var dict = new ReactiveDict();\n  dict.set('foo', 'bar');\n  dict.set('bar', 'foo');\n\n  dict.set('baz', 123);\n  test.equal(dict['delete']('baz'), true);\n  test.equal(dict['delete']('baz'), false);\n\n  var val, equals, equalsUndefined, all;\n\n  Tracker.autorun(function () {\n    val = dict.get('foo');\n  });\n  Tracker.autorun(function () {\n    equals = dict.equals('foo', 'bar');\n  });\n  Tracker.autorun(function () {\n    equalsUndefined = dict.equals('foo', undefined);\n  });\n  Tracker.autorun(function () {\n    all = dict.all();\n  });\n\n  test.equal(val, 'bar');\n  test.equal(equals, true);\n  test.equal(equalsUndefined, false);\n  test.equal(all, { foo: 'bar', bar: 'foo' });\n\n  var didRemove = dict['delete']('foo');\n  test.equal(didRemove, true);\n\n  Tracker.flush();\n\n  test.isUndefined(val);\n  test.equal(equals, false);\n  test.equal(equalsUndefined, true);\n  test.equal(all, { bar: 'foo' });\n\n  didRemove = dict['delete']('barfoobar');\n  test.equal(didRemove, false);\n});","ast":null,"map":{"version":3,"sources":["/packages/reactive-dict/reactive-dict-tests.js"],"names":[],"mappings":"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","file":"/packages/reactive-dict/reactive-dict-tests.js.map","sourcesContent":["Tinytest.add('ReactiveDict - set to undefined', function (test) {\n  var dict = new ReactiveDict;\n  dict.set('foo', undefined);\n  test.equal(_.keys(dict.all()), ['foo']);\n  dict.setDefault('foo', 'bar');\n  test.equal(dict.get('foo'), undefined);\n});\n\nTinytest.add('ReactiveDict - setDefault', function (test) {\n  var dict = new ReactiveDict;\n  dict.set('A', 'blah');\n  dict.set('B', undefined);\n  dict.setDefault('A', 'default');\n  dict.setDefault('B', 'default');\n  dict.setDefault('C', 'default');\n  dict.setDefault('D', undefined);\n  test.equal(dict.all(), {A: 'blah', B: undefined,\n                          C: 'default', D: undefined});\n});\n\nTinytest.add('ReactiveDict - all() works', function (test) {\n  var all = {}, dict = new ReactiveDict;\n  Tracker.autorun(function() {\n    all = dict.all();\n  });\n\n  test.equal(all, {});\n\n  dict.set('foo', 'bar');\n  Tracker.flush();\n  test.equal(all, {foo: 'bar'});\n\n  dict.set('blah', undefined);\n  Tracker.flush();\n  test.equal(all, {foo: 'bar', blah: undefined});\n});\n\n\nTinytest.add('ReactiveDict - clear() works', function (test) {\n  var dict = new ReactiveDict;\n  dict.set('foo', 'bar');\n\n  // Clear should not throw an error now\n  // See issue #5530\n  dict.clear();\n\n  dict.set('foo', 'bar');\n\n  var val, equals, equalsUndefined, all;\n  Tracker.autorun(function() {\n    val = dict.get('foo');\n  });\n  Tracker.autorun(function() {\n    equals = dict.equals('foo', 'bar');\n  });\n  Tracker.autorun(function() {\n    equalsUndefined = dict.equals('foo', undefined);\n  });\n  Tracker.autorun(function() {\n    all = dict.all();\n  });\n\n  test.equal(val, 'bar');\n  test.equal(equals, true);\n  test.equal(equalsUndefined, false);\n  test.equal(all, {foo: 'bar'});\n\n  dict.clear();\n  Tracker.flush();\n  test.isUndefined(val);\n  test.equal(equals, false);\n  test.equal(equalsUndefined, true);\n  test.equal(all, {});\n});\n\nTinytest.add('ReactiveDict - delete(key) works', function (test) {\n  var dict = new ReactiveDict;\n  dict.set('foo', 'bar');\n  dict.set('bar', 'foo');\n\n  dict.set('baz', 123);\n  test.equal(dict.delete('baz'), true);\n  test.equal(dict.delete('baz'), false);\n\n  var val, equals, equalsUndefined, all;\n\n  Tracker.autorun(function() {\n    val = dict.get('foo');\n  });\n  Tracker.autorun(function() {\n    equals = dict.equals('foo', 'bar');\n  });\n  Tracker.autorun(function() {\n    equalsUndefined = dict.equals('foo', undefined);\n  });\n  Tracker.autorun(function() {\n    all = dict.all();\n  });\n\n  test.equal(val, 'bar');\n  test.equal(equals, true);\n  test.equal(equalsUndefined, false);\n  test.equal(all, {foo: 'bar', bar: 'foo'});\n\n  var didRemove = dict.delete('foo');\n  test.equal(didRemove, true);\n\n  Tracker.flush();\n\n  test.isUndefined(val);\n  test.equal(equals, false);\n  test.equal(equalsUndefined, true);\n  test.equal(all, {bar: 'foo'});\n\n  didRemove = dict.delete('barfoobar');\n  test.equal(didRemove, false);\n});\n"]},"hash":"2b079cc06fb7cc6ce894e4aa17f141eec38ea91f"}
