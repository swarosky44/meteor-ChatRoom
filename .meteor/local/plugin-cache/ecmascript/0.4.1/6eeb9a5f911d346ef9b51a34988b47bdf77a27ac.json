{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/http/httpcall_tests.js","filenameRelative":"/packages/http/httpcall_tests.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/http/httpcall_tests.js.map","sourceFileName":"/packages/http/httpcall_tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"httpcall_tests"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// URL prefix for tests to talk to\nvar _XHR_URL_PREFIX = \"/http_test_responder\";\n\nvar url_base = function url_base() {\n  if (Meteor.isServer) {\n    var address = WebApp.httpServer.address();\n    return \"http://127.0.0.1:\" + address.port;\n  } else {\n    return \"\";\n  }\n};\n\nvar url_prefix = function url_prefix() {\n  if (Meteor.isServer && _XHR_URL_PREFIX.indexOf(\"http\") !== 0) {\n    _XHR_URL_PREFIX = url_base() + _XHR_URL_PREFIX;\n  }\n  return _XHR_URL_PREFIX;\n};\n\ntestAsyncMulti(\"httpcall - basic\", [function (test, expect) {\n  var basic_get = function basic_get(url, options, expected_url) {\n\n    var callback = function callback(error, result) {\n      test.isFalse(error);\n      if (!error) {\n        test.equal(typeof result === \"undefined\" ? \"undefined\" : (0, _typeof3[\"default\"])(result), \"object\");\n        test.equal(result.statusCode, 200);\n\n        var data = result.data;\n\n        // allow dropping of final ? (which mobile browsers seem to do)\n        var allowed = [expected_url];\n        if (expected_url.slice(-1) === '?') allowed.push(expected_url.slice(0, -1));\n\n        test.include(allowed, expected_url);\n        test.equal(data.method, \"GET\");\n      }\n    };\n\n    HTTP.call(\"GET\", url_prefix() + url, options, expect(callback));\n\n    if (Meteor.isServer) {\n      // test sync version\n      try {\n        var result = HTTP.call(\"GET\", url_prefix() + url, options);\n        callback(undefined, result);\n      } catch (e) {\n        callback(e, e.response);\n      }\n    }\n  };\n\n  basic_get(\"/foo\", null, \"/foo\");\n  basic_get(\"/foo?\", null, \"/foo?\");\n  basic_get(\"/foo?a=b\", null, \"/foo?a=b\");\n  basic_get(\"/foo\", { params: { fruit: \"apple\" } }, \"/foo?fruit=apple\");\n  basic_get(\"/foo\", { params: { fruit: \"apple\", dog: \"Spot the dog\" } }, \"/foo?fruit=apple&dog=Spot+the+dog\");\n  basic_get(\"/foo?\", { params: { fruit: \"apple\", dog: \"Spot the dog\" } }, \"/foo?fruit=apple&dog=Spot+the+dog\");\n  basic_get(\"/foo?bar\", { params: { fruit: \"apple\", dog: \"Spot the dog\" } }, \"/foo?bar&fruit=apple&dog=Spot+the+dog\");\n  basic_get(\"/foo?bar\", { params: { fruit: \"apple\", dog: \"Spot the dog\" },\n    query: \"baz\" }, \"/foo?baz&fruit=apple&dog=Spot+the+dog\");\n  basic_get(\"/foo\", { params: { fruit: \"apple\", dog: \"Spot the dog\" },\n    query: \"baz\" }, \"/foo?baz&fruit=apple&dog=Spot+the+dog\");\n  basic_get(\"/foo?\", { params: { fruit: \"apple\", dog: \"Spot the dog\" },\n    query: \"baz\" }, \"/foo?baz&fruit=apple&dog=Spot+the+dog\");\n  basic_get(\"/foo?bar\", { query: \"\" }, \"/foo?\");\n  basic_get(\"/foo?bar\", { params: { fruit: \"apple\", dog: \"Spot the dog\" },\n    query: \"\" }, \"/foo?fruit=apple&dog=Spot+the+dog\");\n}]);\n\ntestAsyncMulti(\"httpcall - errors\", [function (test, expect) {\n\n  // Accessing unknown server (should fail to make any connection)\n  var unknownServerCallback = function unknownServerCallback(error, result) {\n    test.isTrue(error);\n    test.isFalse(result);\n    test.isFalse(error.response);\n  };\n\n  // 0.0.0.0 is an illegal IP address, and thus should always give an error.\n  // If your ISP is intercepting DNS misses and serving ads, an obviously\n  // invalid URL (http://asdf.asdf) might produce an HTTP response.\n  HTTP.call(\"GET\", \"http://0.0.0.0/\", expect(unknownServerCallback));\n\n  if (Meteor.isServer) {\n    // test sync version\n    try {\n      var unknownServerResult = HTTP.call(\"GET\", \"http://0.0.0.0/\");\n      unknownServerCallback(undefined, unknownServerResult);\n    } catch (e) {\n      unknownServerCallback(e, e.response);\n    }\n  }\n\n  // Server serves 500\n  var error500Callback = function error500Callback(error, result) {\n    test.isTrue(error);\n    test.isTrue(error.message.indexOf(\"500\") !== -1); // message has statusCode\n    test.isTrue(error.message.indexOf(error.response.content.substring(0, 10)) !== -1); // message has part of content\n\n    test.isTrue(result);\n    test.isTrue(error.response);\n    test.equal(result, error.response);\n    test.equal(error.response.statusCode, 500);\n\n    // in test_responder.js we make a very long response body, to make sure\n    // that we truncate messages. first of all, make sure we didn't make that\n    // message too short, so that we can be sure we're verifying that we truncate.\n    test.isTrue(error.response.content.length > 520);\n    test.isTrue(error.message.length < 520); // make sure we truncate.\n  };\n  HTTP.call(\"GET\", url_prefix() + \"/fail\", expect(error500Callback));\n\n  if (Meteor.isServer) {\n    // test sync version\n    try {\n      var error500Result = HTTP.call(\"GET\", url_prefix() + \"/fail\");\n      error500Callback(undefined, error500Result);\n    } catch (e) {\n      error500Callback(e, e.response);\n    }\n  }\n}]);\n\ntestAsyncMulti(\"httpcall - timeout\", [function (test, expect) {\n\n  // Should time out\n  var timeoutCallback = function timeoutCallback(error, result) {\n    test.isTrue(error);\n    test.isFalse(result);\n    test.isFalse(error.response);\n  };\n  var timeoutUrl = url_prefix() + \"/slow-\" + Random.id();\n  HTTP.call(\"GET\", timeoutUrl, { timeout: 500 }, expect(timeoutCallback));\n\n  if (Meteor.isServer) {\n    // test sync version\n    try {\n      var timeoutResult = HTTP.call(\"GET\", timeoutUrl, { timeout: 500 });\n      timeoutCallback(undefined, timeoutResult);\n    } catch (e) {\n      timeoutCallback(e, e.response);\n    }\n  }\n\n  // Should not time out\n  var noTimeoutCallback = function noTimeoutCallback(error, result) {\n    test.isFalse(error);\n    test.isTrue(result);\n    test.equal(result.statusCode, 200);\n    var data = result.data;\n    test.equal(data.url.substring(0, 4), \"/foo\");\n    test.equal(data.method, \"GET\");\n  };\n  var noTimeoutUrl = url_prefix() + \"/foo-\" + Random.id();\n  HTTP.call(\"GET\", noTimeoutUrl, { timeout: 2000 }, expect(noTimeoutCallback));\n\n  if (Meteor.isServer) {\n    // test sync version\n    try {\n      var noTimeoutResult = HTTP.call(\"GET\", noTimeoutUrl, { timeout: 2000 });\n      noTimeoutCallback(undefined, noTimeoutResult);\n    } catch (e) {\n      noTimeoutCallback(e, e.response);\n    }\n  }\n}]);\n\ntestAsyncMulti(\"httpcall - redirect\", [function (test, expect) {\n  // Test that we follow redirects by default\n  HTTP.call(\"GET\", url_prefix() + \"/redirect\", expect(function (error, result) {\n    test.isFalse(error);\n    test.isTrue(result);\n\n    // should be redirected transparently to /foo\n    test.equal(result.statusCode, 200);\n    var data = result.data;\n    test.equal(data.url, \"/foo\");\n    test.equal(data.method, \"GET\");\n  }));\n\n  // followRedirect option; can't be false on client\n  _.each([false, true], function (followRedirects) {\n    var do_it = function do_it(should_work) {\n      var maybe_expect = should_work ? expect : _.identity;\n      _.each([\"GET\", \"POST\"], function (method) {\n        HTTP.call(method, url_prefix() + \"/redirect\", { followRedirects: followRedirects }, maybe_expect(function (error, result) {\n          test.isFalse(error);\n          test.isTrue(result);\n\n          if (followRedirects) {\n            // should be redirected transparently to /foo\n            test.equal(result.statusCode, 200);\n            var data = result.data;\n            test.equal(data.url, \"/foo\");\n            // This is \"GET\" even when the initial request was a\n            // POST because browsers follow redirects with a GET\n            // even when the initial request was a different method.\n            test.equal(data.method, \"GET\");\n          } else {\n            // should see redirect\n            test.equal(result.statusCode, 301);\n          }\n        }));\n      });\n    };\n    if (Meteor.isClient && !followRedirects) {\n      // not supported, should fail\n      test.throws(do_it);\n    } else {\n      do_it(true);\n    }\n  });\n}]);\n\ntestAsyncMulti(\"httpcall - methods\", [function (test, expect) {\n  // non-get methods\n  var test_method = function test_method(meth, func_name) {\n    func_name = func_name || meth.toLowerCase();\n    HTTP[func_name](url_prefix() + \"/foo\", expect(function (error, result) {\n      test.isFalse(error);\n      test.isTrue(result);\n      test.equal(result.statusCode, 200);\n      var data = result.data;\n      test.equal(data.url, \"/foo\");\n\n      // IE <= 8 turns seems to turn POSTs with no body into\n      // GETs, inexplicably.\n      //\n      // XXX Except now it doesn't!? Not sure what changed, but\n      // these lines now break the test...\n      // if (Meteor.isClient && $.browser.msie && $.browser.version <= 8\n      //     && meth === \"POST\")\n      //   meth = \"GET\";\n\n      test.equal(data.method, meth);\n    }));\n  };\n\n  test_method(\"GET\");\n  test_method(\"POST\");\n  test_method(\"PUT\");\n  test_method(\"DELETE\", 'del');\n  test_method(\"PATCH\");\n}, function (test, expect) {\n  // contents and data\n  HTTP.call(\"POST\", url_prefix() + \"/foo\", { content: \"Hello World!\" }, expect(function (error, result) {\n    test.isFalse(error);\n    test.isTrue(result);\n    test.equal(result.statusCode, 200);\n    var data = result.data;\n    test.equal(data.body, \"Hello World!\");\n  }));\n\n  HTTP.call(\"POST\", url_prefix() + \"/data-test\", { data: { greeting: \"Hello World!\" } }, expect(function (error, result) {\n    test.isFalse(error);\n    test.isTrue(result);\n    test.equal(result.statusCode, 200);\n    var data = result.data;\n    test.equal(data.body, { greeting: \"Hello World!\" });\n    // nb: some browsers include a charset here too.\n    test.matches(data.headers['content-type'], /^application\\/json\\b/);\n  }));\n\n  HTTP.call(\"POST\", url_prefix() + \"/data-test-explicit\", { data: { greeting: \"Hello World!\" },\n    headers: { 'Content-Type': 'text/stupid' } }, expect(function (error, result) {\n    test.isFalse(error);\n    test.isTrue(result);\n    test.equal(result.statusCode, 200);\n    var data = result.data;\n    test.equal(data.body, { greeting: \"Hello World!\" });\n    // nb: some browsers include a charset here too.\n    test.matches(data.headers['content-type'], /^text\\/stupid\\b/);\n  }));\n}]);\n\ntestAsyncMulti(\"httpcall - http auth\", [function (test, expect) {\n  // Test basic auth\n\n  // Unfortunately, any failed auth will result in a browser\n  // password prompt.  So we don't test auth failure, only\n  // success.\n\n  // Random password breaks in Firefox, because Firefox incorrectly\n  // uses cached credentials even if we supply different ones:\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=654348\n  var password = 'rocks';\n  //var password = Random.id().replace(/[^0-9a-zA-Z]/g, '');\n  HTTP.call(\"GET\", url_prefix() + \"/login?\" + password, { auth: \"meteor:\" + password }, expect(function (error, result) {\n    // should succeed\n    test.isFalse(error);\n    test.isTrue(result);\n    test.equal(result.statusCode, 200);\n    var data = result.data;\n    test.equal(data.url, \"/login?\" + password);\n  }));\n\n  // test fail on malformed username:password\n  test.throws(function () {\n    HTTP.call(\"GET\", url_prefix() + \"/login?\" + password, { auth: \"fooooo\" }, function () {\n      throw new Error(\"can't get here\");\n    });\n  });\n}]);\n\ntestAsyncMulti(\"httpcall - headers\", [function (test, expect) {\n  HTTP.call(\"GET\", url_prefix() + \"/foo-with-headers\", { headers: { \"Test-header\": \"Value\",\n      \"another\": \"Value2\" } }, expect(function (error, result) {\n    test.isFalse(error);\n    test.isTrue(result);\n\n    test.equal(result.statusCode, 200);\n    var data = result.data;\n    test.equal(data.url, \"/foo-with-headers\");\n    test.equal(data.method, \"GET\");\n    test.equal(data.headers['test-header'], \"Value\");\n    test.equal(data.headers['another'], \"Value2\");\n  }));\n\n  HTTP.call(\"GET\", url_prefix() + \"/headers\", expect(function (error, result) {\n    test.isFalse(error);\n    test.isTrue(result);\n\n    test.equal(result.statusCode, 201);\n    test.equal(result.headers['a-silly-header'], \"Tis a\");\n    test.equal(result.headers['another-silly-header'], \"Silly place.\");\n  }));\n}]);\n\ntestAsyncMulti(\"httpcall - params\", [function (test, expect) {\n  var do_test = function do_test(method, url, params, opt_opts, expect_url, expect_body) {\n    var opts = {};\n    if (typeof opt_opts === \"string\") {\n      // opt_opts omitted\n      expect_body = expect_url;\n      expect_url = opt_opts;\n    } else {\n      opts = opt_opts;\n    }\n    HTTP.call(method, url_prefix() + url, _.extend({ params: params }, opts), expect(function (error, result) {\n      test.isFalse(error);\n      test.isTrue(result);\n      test.equal(result.statusCode, 200);\n      if (method !== \"HEAD\") {\n        var data = result.data;\n        test.equal(data.method, method);\n        test.equal(data.url, expect_url);\n        test.equal(data.body, expect_body);\n      }\n    }));\n  };\n\n  do_test(\"GET\", \"/blah\", { foo: \"bar\" }, \"/blah?foo=bar\", \"\");\n  do_test(\"GET\", \"/\", { foo: \"bar\", fruit: \"apple\" }, \"/?foo=bar&fruit=apple\", \"\");\n  do_test(\"POST\", \"/\", { foo: \"bar\", fruit: \"apple\" }, \"/\", \"foo=bar&fruit=apple\");\n  do_test(\"POST\", \"/\", { foo: \"bar\", fruit: \"apple\" }, \"/\", \"foo=bar&fruit=apple\");\n  do_test(\"GET\", \"/\", { 'foo!': \"bang!\" }, {}, \"/?foo%21=bang%21\", \"\");\n  do_test(\"POST\", \"/\", { 'foo!': \"bang!\" }, {}, \"/\", \"foo%21=bang%21\");\n  do_test(\"POST\", \"/\", { foo: \"bar\", fruit: \"apple\" }, {\n    content: \"stuff!\" }, \"/?foo=bar&fruit=apple\", \"stuff!\");\n  do_test(\"POST\", \"/\", { foo: \"bar\", greeting: \"Hello World\" }, {\n    content: \"stuff!\" }, \"/?foo=bar&greeting=Hello+World\", \"stuff!\");\n  do_test(\"POST\", \"/foo\", { foo: \"bar\", greeting: \"Hello World\" }, \"/foo\", \"foo=bar&greeting=Hello+World\");\n  do_test(\"HEAD\", \"/head\", { foo: \"bar\" }, \"/head?foo=bar\", \"\");\n  do_test(\"PUT\", \"/put\", { foo: \"bar\" }, \"/put\", \"foo=bar\");\n}]);\n\ntestAsyncMulti(\"httpcall - npmRequestOptions\", [function (test, expect) {\n  if (Meteor.isClient) {\n    test.throws(function () {\n      HTTP.get(url_prefix() + \"/\", { npmRequestOptions: { encoding: null } }, function () {});\n    });\n    return;\n  }\n\n  HTTP.get(url_prefix() + \"/\", { npmRequestOptions: { encoding: null } }, expect(function (error, result) {\n    test.isFalse(error);\n    test.isTrue(result);\n    test.equal(result.statusCode, 200);\n    test.instanceOf(result.content, Buffer);\n  }));\n}]);\n\nMeteor.isClient && testAsyncMulti(\"httpcall - beforeSend\", [function (test, expect) {\n  var fired = false;\n  var bSend = function bSend(xhr) {\n    test.isFalse(fired);\n    fired = true;\n    test.isTrue(xhr instanceof XMLHttpRequest);\n  };\n\n  HTTP.get(url_prefix() + \"/\", { beforeSend: bSend }, expect(function () {\n    test.isTrue(fired);\n  }));\n}]);\n\nif (Meteor.isServer) {\n  // This is testing the server's static file sending code, not the http\n  // package. It's here because it is very similar to the other tests\n  // here, even though it is testing something else.\n  //\n  // client http library mangles paths before they are requested. only\n  // run this test on the server.\n  testAsyncMulti(\"httpcall - static file serving\", [function (test, expect) {\n    // Suppress error printing for this test (and for any other code that sets\n    // the x-suppress-error header).\n    WebApp.suppressConnectErrors();\n\n    var do_test = function do_test(path, code, match) {\n      HTTP.get(url_base() + path, { headers: { 'x-suppress-error': 'true' } }, expect(function (error, result) {\n        test.equal(result.statusCode, code);\n        if (match) test.matches(result.content, match);\n      }));\n    };\n\n    // existing static file\n    do_test(\"/packages/local-test_http/test_static.serveme\", 200, /static file serving/);\n\n    // no such file, so return the default app HTML.\n    var getsAppHtml = [\n    // This file doesn't exist.\n    \"/nosuchfile\",\n\n    // Our static file serving doesn't process .. or its encoded version, so\n    // any of these return the app HTML.\n    \"/../nosuchfile\", \"/%2e%2e/nosuchfile\", \"/%2E%2E/nosuchfile\", \"/%2d%2d/nosuchfile\", \"/packages/http/../http/test_static.serveme\", \"/packages/http/%2e%2e/http/test_static.serveme\", \"/packages/http/%2E%2E/http/test_static.serveme\", \"/packages/http/../../packages/http/test_static.serveme\", \"/packages/http/%2e%2e/%2e%2e/packages/http/test_static.serveme\", \"/packages/http/%2E%2E/%2E%2E/packages/http/test_static.serveme\",\n\n    // ... and they *definitely* shouldn't be able to escape the app bundle.\n    \"/packages/http/../../../../../../packages/http/test_static.serveme\", \"/../../../../../../../../../../../bin/ls\", \"/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/bin/ls\", \"/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/bin/ls\"];\n\n    _.each(getsAppHtml, function (x) {\n      do_test(x, 200, /__meteor_runtime_config__ = JSON/);\n    });\n  }]);\n}\n\nMeteor.isServer && Tinytest.add(\"httpcall - npm modules\", function (test) {\n  // Make sure the version number looks like a version number. (All published\n  // request version numbers end in \".0\".)\n  test.matches(HTTPInternals.NpmModules.request.version, /^2\\.(\\d+)\\.0/);\n  test.equal((0, _typeof3[\"default\"])(HTTPInternals.NpmModules.request.module), 'function');\n  test.isTrue(HTTPInternals.NpmModules.request.module.get);\n});\n\n// TO TEST/ADD:\n// - https\n// - cookies?\n// - human-readable error reason/cause?\n// - data parse error","ast":null,"map":{"version":3,"sources":["/packages/http/httpcall_tests.js"],"names":[],"mappings":"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","file":"/packages/http/httpcall_tests.js.map","sourcesContent":["// URL prefix for tests to talk to\nvar _XHR_URL_PREFIX = \"/http_test_responder\";\n\nvar url_base = function () {\n  if (Meteor.isServer) {\n    var address = WebApp.httpServer.address();\n    return \"http://127.0.0.1:\" + address.port;\n  } else {\n    return \"\";\n  }\n};\n\nvar url_prefix = function () {\n  if (Meteor.isServer && _XHR_URL_PREFIX.indexOf(\"http\") !== 0) {\n    _XHR_URL_PREFIX = url_base() + _XHR_URL_PREFIX;\n  }\n  return _XHR_URL_PREFIX;\n};\n\n\ntestAsyncMulti(\"httpcall - basic\", [\n  function(test, expect) {\n    var basic_get = function(url, options, expected_url) {\n\n      var callback = function(error, result) {\n        test.isFalse(error);\n        if (! error) {\n          test.equal(typeof result, \"object\");\n          test.equal(result.statusCode, 200);\n\n          var data = result.data;\n\n          // allow dropping of final ? (which mobile browsers seem to do)\n          var allowed = [expected_url];\n          if (expected_url.slice(-1) === '?')\n            allowed.push(expected_url.slice(0, -1));\n\n          test.include(allowed, expected_url);\n          test.equal(data.method, \"GET\");\n        }\n      };\n\n\n      HTTP.call(\"GET\", url_prefix()+url, options, expect(callback));\n\n      if (Meteor.isServer) {\n        // test sync version\n        try {\n          var result = HTTP.call(\"GET\", url_prefix()+url, options);\n          callback(undefined, result);\n        } catch (e) {\n          callback(e, e.response);\n        }\n      }\n    };\n\n    basic_get(\"/foo\", null, \"/foo\");\n    basic_get(\"/foo?\", null, \"/foo?\");\n    basic_get(\"/foo?a=b\", null, \"/foo?a=b\");\n    basic_get(\"/foo\", {params: {fruit: \"apple\"}},\n              \"/foo?fruit=apple\");\n    basic_get(\"/foo\", {params: {fruit: \"apple\", dog: \"Spot the dog\"}},\n              \"/foo?fruit=apple&dog=Spot+the+dog\");\n    basic_get(\"/foo?\", {params: {fruit: \"apple\", dog: \"Spot the dog\"}},\n              \"/foo?fruit=apple&dog=Spot+the+dog\");\n    basic_get(\"/foo?bar\", {params: {fruit: \"apple\", dog: \"Spot the dog\"}},\n              \"/foo?bar&fruit=apple&dog=Spot+the+dog\");\n    basic_get(\"/foo?bar\", {params: {fruit: \"apple\", dog: \"Spot the dog\"},\n                           query: \"baz\"},\n              \"/foo?baz&fruit=apple&dog=Spot+the+dog\");\n    basic_get(\"/foo\", {params: {fruit: \"apple\", dog: \"Spot the dog\"},\n                       query: \"baz\"},\n              \"/foo?baz&fruit=apple&dog=Spot+the+dog\");\n    basic_get(\"/foo?\", {params: {fruit: \"apple\", dog: \"Spot the dog\"},\n                       query: \"baz\"},\n              \"/foo?baz&fruit=apple&dog=Spot+the+dog\");\n    basic_get(\"/foo?bar\", {query: \"\"}, \"/foo?\");\n    basic_get(\"/foo?bar\", {params: {fruit: \"apple\", dog: \"Spot the dog\"},\n                           query: \"\"},\n              \"/foo?fruit=apple&dog=Spot+the+dog\");\n  }]);\n\ntestAsyncMulti(\"httpcall - errors\", [\n  function(test, expect) {\n\n    // Accessing unknown server (should fail to make any connection)\n    var unknownServerCallback = function(error, result) {\n      test.isTrue(error);\n      test.isFalse(result);\n      test.isFalse(error.response);\n    };\n\n    // 0.0.0.0 is an illegal IP address, and thus should always give an error.\n    // If your ISP is intercepting DNS misses and serving ads, an obviously\n    // invalid URL (http://asdf.asdf) might produce an HTTP response.\n    HTTP.call(\"GET\", \"http://0.0.0.0/\", expect(unknownServerCallback));\n\n    if (Meteor.isServer) {\n      // test sync version\n      try {\n        var unknownServerResult = HTTP.call(\"GET\", \"http://0.0.0.0/\");\n        unknownServerCallback(undefined, unknownServerResult);\n      } catch (e) {\n        unknownServerCallback(e, e.response);\n      }\n    }\n\n    // Server serves 500\n    var error500Callback = function(error, result) {\n      test.isTrue(error);\n      test.isTrue(error.message.indexOf(\"500\") !== -1); // message has statusCode\n      test.isTrue(error.message.indexOf(\n        error.response.content.substring(0, 10)) !== -1); // message has part of content\n\n      test.isTrue(result);\n      test.isTrue(error.response);\n      test.equal(result, error.response);\n      test.equal(error.response.statusCode, 500);\n\n      // in test_responder.js we make a very long response body, to make sure\n      // that we truncate messages. first of all, make sure we didn't make that\n      // message too short, so that we can be sure we're verifying that we truncate.\n      test.isTrue(error.response.content.length > 520);\n      test.isTrue(error.message.length < 520); // make sure we truncate.\n    };\n    HTTP.call(\"GET\", url_prefix()+\"/fail\", expect(error500Callback));\n\n    if (Meteor.isServer) {\n      // test sync version\n      try {\n        var error500Result = HTTP.call(\"GET\", url_prefix()+\"/fail\");\n        error500Callback(undefined, error500Result);\n      } catch (e) {\n        error500Callback(e, e.response);\n      }\n    }\n  }\n]);\n\ntestAsyncMulti(\"httpcall - timeout\", [\n  function(test, expect) {\n\n    // Should time out\n    var timeoutCallback = function(error, result) {\n      test.isTrue(error);\n      test.isFalse(result);\n      test.isFalse(error.response);\n    };\n    var timeoutUrl = url_prefix()+\"/slow-\"+Random.id();\n    HTTP.call(\n      \"GET\", timeoutUrl,\n      { timeout: 500 },\n      expect(timeoutCallback));\n\n    if (Meteor.isServer) {\n      // test sync version\n      try {\n        var timeoutResult = HTTP.call(\"GET\", timeoutUrl, { timeout: 500 });\n        timeoutCallback(undefined, timeoutResult);\n      } catch (e) {\n        timeoutCallback(e, e.response);\n      }\n    }\n\n    // Should not time out\n    var noTimeoutCallback = function(error, result) {\n      test.isFalse(error);\n      test.isTrue(result);\n      test.equal(result.statusCode, 200);\n      var data = result.data;\n      test.equal(data.url.substring(0, 4), \"/foo\");\n      test.equal(data.method, \"GET\");\n    };\n    var noTimeoutUrl = url_prefix()+\"/foo-\"+Random.id();\n    HTTP.call(\n      \"GET\", noTimeoutUrl,\n      { timeout: 2000 },\n      expect(noTimeoutCallback));\n\n    if (Meteor.isServer) {\n      // test sync version\n      try {\n        var noTimeoutResult = HTTP.call(\"GET\", noTimeoutUrl, { timeout: 2000 });\n        noTimeoutCallback(undefined, noTimeoutResult);\n      } catch (e) {\n        noTimeoutCallback(e, e.response);\n      }\n    }\n  }\n]);\n\ntestAsyncMulti(\"httpcall - redirect\", [\n\n  function(test, expect) {\n    // Test that we follow redirects by default\n    HTTP.call(\"GET\", url_prefix()+\"/redirect\", expect(\n      function(error, result) {\n        test.isFalse(error);\n        test.isTrue(result);\n\n        // should be redirected transparently to /foo\n        test.equal(result.statusCode, 200);\n        var data = result.data;\n        test.equal(data.url, \"/foo\");\n        test.equal(data.method, \"GET\");\n      }));\n\n    // followRedirect option; can't be false on client\n    _.each([false, true], function(followRedirects) {\n      var do_it = function(should_work) {\n        var maybe_expect = should_work ? expect : _.identity;\n        _.each([\"GET\", \"POST\"], function (method) {\n          HTTP.call(\n            method, url_prefix()+\"/redirect\",\n            {followRedirects: followRedirects},\n            maybe_expect(function(error, result) {\n              test.isFalse(error);\n              test.isTrue(result);\n\n              if (followRedirects) {\n                // should be redirected transparently to /foo\n                test.equal(result.statusCode, 200);\n                var data = result.data;\n                test.equal(data.url, \"/foo\");\n                // This is \"GET\" even when the initial request was a\n                // POST because browsers follow redirects with a GET\n                // even when the initial request was a different method.\n                test.equal(data.method, \"GET\");\n              } else {\n                // should see redirect\n                test.equal(result.statusCode, 301);\n              }\n            }));\n        });\n      };\n      if (Meteor.isClient && ! followRedirects) {\n        // not supported, should fail\n        test.throws(do_it);\n      } else {\n        do_it(true);\n      }\n    });\n  }\n\n]);\n\ntestAsyncMulti(\"httpcall - methods\", [\n\n  function(test, expect) {\n    // non-get methods\n    var test_method = function(meth, func_name) {\n      func_name = func_name || meth.toLowerCase();\n      HTTP[func_name](\n        url_prefix()+\"/foo\",\n        expect(function(error, result) {\n          test.isFalse(error);\n          test.isTrue(result);\n          test.equal(result.statusCode, 200);\n          var data = result.data;\n          test.equal(data.url, \"/foo\");\n\n          // IE <= 8 turns seems to turn POSTs with no body into\n          // GETs, inexplicably.\n          //\n          // XXX Except now it doesn't!? Not sure what changed, but\n          // these lines now break the test...\n          // if (Meteor.isClient && $.browser.msie && $.browser.version <= 8\n          //     && meth === \"POST\")\n          //   meth = \"GET\";\n\n          test.equal(data.method, meth);\n        }));\n    };\n\n    test_method(\"GET\");\n    test_method(\"POST\");\n    test_method(\"PUT\");\n    test_method(\"DELETE\", 'del');\n    test_method(\"PATCH\");\n  },\n\n  function(test, expect) {\n    // contents and data\n    HTTP.call(\n      \"POST\", url_prefix()+\"/foo\",\n      { content: \"Hello World!\" },\n      expect(function(error, result) {\n        test.isFalse(error);\n        test.isTrue(result);\n        test.equal(result.statusCode, 200);\n        var data = result.data;\n        test.equal(data.body, \"Hello World!\");\n      }));\n\n    HTTP.call(\n      \"POST\", url_prefix()+\"/data-test\",\n      { data: {greeting: \"Hello World!\"} },\n      expect(function(error, result) {\n        test.isFalse(error);\n        test.isTrue(result);\n        test.equal(result.statusCode, 200);\n        var data = result.data;\n        test.equal(data.body, {greeting: \"Hello World!\"});\n        // nb: some browsers include a charset here too.\n        test.matches(data.headers['content-type'], /^application\\/json\\b/);\n      }));\n\n    HTTP.call(\n      \"POST\", url_prefix()+\"/data-test-explicit\",\n      { data: {greeting: \"Hello World!\"},\n        headers: {'Content-Type': 'text/stupid'} },\n      expect(function(error, result) {\n        test.isFalse(error);\n        test.isTrue(result);\n        test.equal(result.statusCode, 200);\n        var data = result.data;\n        test.equal(data.body, {greeting: \"Hello World!\"});\n        // nb: some browsers include a charset here too.\n        test.matches(data.headers['content-type'], /^text\\/stupid\\b/);\n      }));\n  }\n]);\n\ntestAsyncMulti(\"httpcall - http auth\", [\n  function(test, expect) {\n    // Test basic auth\n\n    // Unfortunately, any failed auth will result in a browser\n    // password prompt.  So we don't test auth failure, only\n    // success.\n\n    // Random password breaks in Firefox, because Firefox incorrectly\n    // uses cached credentials even if we supply different ones:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=654348\n    var password = 'rocks';\n    //var password = Random.id().replace(/[^0-9a-zA-Z]/g, '');\n    HTTP.call(\n      \"GET\", url_prefix()+\"/login?\"+password,\n      { auth: \"meteor:\"+password },\n      expect(function(error, result) {\n        // should succeed\n        test.isFalse(error);\n        test.isTrue(result);\n        test.equal(result.statusCode, 200);\n        var data = result.data;\n        test.equal(data.url, \"/login?\"+password);\n      }));\n\n    // test fail on malformed username:password\n    test.throws(function() {\n      HTTP.call(\n        \"GET\", url_prefix()+\"/login?\"+password,\n        { auth: \"fooooo\" },\n        function() { throw new Error(\"can't get here\"); });\n    });\n  }\n]);\n\ntestAsyncMulti(\"httpcall - headers\", [\n  function(test, expect) {\n    HTTP.call(\n      \"GET\", url_prefix()+\"/foo-with-headers\",\n      {headers: { \"Test-header\": \"Value\",\n                  \"another\": \"Value2\" } },\n      expect(function(error, result) {\n        test.isFalse(error);\n        test.isTrue(result);\n\n        test.equal(result.statusCode, 200);\n        var data = result.data;\n        test.equal(data.url, \"/foo-with-headers\");\n        test.equal(data.method, \"GET\");\n        test.equal(data.headers['test-header'], \"Value\");\n        test.equal(data.headers['another'], \"Value2\");\n      }));\n\n    HTTP.call(\n      \"GET\", url_prefix()+\"/headers\",\n      expect(function(error, result) {\n        test.isFalse(error);\n        test.isTrue(result);\n\n        test.equal(result.statusCode, 201);\n        test.equal(result.headers['a-silly-header'], \"Tis a\");\n        test.equal(result.headers['another-silly-header'], \"Silly place.\");\n      }));\n  }\n]);\n\ntestAsyncMulti(\"httpcall - params\", [\n  function(test, expect) {\n    var do_test = function(method, url, params, opt_opts, expect_url, expect_body) {\n      var opts = {};\n      if (typeof opt_opts === \"string\") {\n        // opt_opts omitted\n        expect_body = expect_url;\n        expect_url = opt_opts;\n      } else {\n        opts = opt_opts;\n      }\n      HTTP.call(\n        method, url_prefix()+url,\n        _.extend({ params: params }, opts),\n        expect(function(error, result) {\n          test.isFalse(error);\n          test.isTrue(result);\n          test.equal(result.statusCode, 200);\n          if (method !== \"HEAD\") {\n            var data = result.data;\n            test.equal(data.method, method);\n            test.equal(data.url, expect_url);\n            test.equal(data.body, expect_body);\n          }\n      }));\n    };\n\n    do_test(\"GET\", \"/blah\", {foo:\"bar\"}, \"/blah?foo=bar\", \"\");\n    do_test(\"GET\", \"/\", {foo:\"bar\", fruit:\"apple\"}, \"/?foo=bar&fruit=apple\", \"\");\n    do_test(\"POST\", \"/\", {foo:\"bar\", fruit:\"apple\"}, \"/\", \"foo=bar&fruit=apple\");\n    do_test(\"POST\", \"/\", {foo:\"bar\", fruit:\"apple\"}, \"/\", \"foo=bar&fruit=apple\");\n    do_test(\"GET\", \"/\", {'foo!':\"bang!\"}, {}, \"/?foo%21=bang%21\", \"\");\n    do_test(\"POST\", \"/\", {'foo!':\"bang!\"}, {}, \"/\", \"foo%21=bang%21\");\n    do_test(\"POST\", \"/\", {foo:\"bar\", fruit:\"apple\"}, {\n      content: \"stuff!\"}, \"/?foo=bar&fruit=apple\", \"stuff!\");\n    do_test(\"POST\", \"/\", {foo:\"bar\", greeting:\"Hello World\"}, {\n      content: \"stuff!\"}, \"/?foo=bar&greeting=Hello+World\", \"stuff!\");\n    do_test(\"POST\", \"/foo\", {foo:\"bar\", greeting:\"Hello World\"},\n            \"/foo\", \"foo=bar&greeting=Hello+World\");\n    do_test(\"HEAD\", \"/head\", {foo:\"bar\"}, \"/head?foo=bar\", \"\");\n    do_test(\"PUT\", \"/put\", {foo:\"bar\"}, \"/put\", \"foo=bar\");\n  }\n]);\n\ntestAsyncMulti(\"httpcall - npmRequestOptions\", [\n  function (test, expect) {\n    if (Meteor.isClient) {\n      test.throws(function () {\n        HTTP.get(url_prefix() + \"/\",\n                 { npmRequestOptions: { encoding: null } },\n                 function () {});\n      });\n      return;\n    }\n\n    HTTP.get(\n      url_prefix() + \"/\",\n      { npmRequestOptions: { encoding: null } },\n      expect(function (error, result) {\n        test.isFalse(error);\n        test.isTrue(result);\n        test.equal(result.statusCode, 200);\n        test.instanceOf(result.content, Buffer);\n      })\n    );\n  }\n]);\n\nMeteor.isClient && testAsyncMulti(\"httpcall - beforeSend\", [\n  function (test, expect) {\n    var fired = false;\n    var bSend = function(xhr){\n      test.isFalse(fired);\n      fired = true;\n      test.isTrue(xhr instanceof XMLHttpRequest);\n    };\n\n    HTTP.get(url_prefix() + \"/\", {beforeSend: bSend}, expect(function () {\n      test.isTrue(fired);\n    }));\n  }\n]);\n\n\nif (Meteor.isServer) {\n  // This is testing the server's static file sending code, not the http\n  // package. It's here because it is very similar to the other tests\n  // here, even though it is testing something else.\n  //\n  // client http library mangles paths before they are requested. only\n  // run this test on the server.\n  testAsyncMulti(\"httpcall - static file serving\", [\n    function(test, expect) {\n      // Suppress error printing for this test (and for any other code that sets\n      // the x-suppress-error header).\n      WebApp.suppressConnectErrors();\n\n      var do_test = function (path, code, match) {\n        HTTP.get(\n          url_base() + path,\n          {headers: {'x-suppress-error': 'true'}},\n          expect(function(error, result) {\n            test.equal(result.statusCode, code);\n            if (match)\n              test.matches(result.content, match);\n          }));\n      };\n\n      // existing static file\n      do_test(\"/packages/local-test_http/test_static.serveme\", 200, /static file serving/);\n\n      // no such file, so return the default app HTML.\n      var getsAppHtml = [\n        // This file doesn't exist.\n        \"/nosuchfile\",\n\n        // Our static file serving doesn't process .. or its encoded version, so\n        // any of these return the app HTML.\n        \"/../nosuchfile\",\n        \"/%2e%2e/nosuchfile\",\n        \"/%2E%2E/nosuchfile\",\n        \"/%2d%2d/nosuchfile\",\n        \"/packages/http/../http/test_static.serveme\",\n        \"/packages/http/%2e%2e/http/test_static.serveme\",\n        \"/packages/http/%2E%2E/http/test_static.serveme\",\n        \"/packages/http/../../packages/http/test_static.serveme\",\n        \"/packages/http/%2e%2e/%2e%2e/packages/http/test_static.serveme\",\n        \"/packages/http/%2E%2E/%2E%2E/packages/http/test_static.serveme\",\n\n        // ... and they *definitely* shouldn't be able to escape the app bundle.\n        \"/packages/http/../../../../../../packages/http/test_static.serveme\",\n        \"/../../../../../../../../../../../bin/ls\",\n        \"/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/bin/ls\",\n        \"/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/bin/ls\"\n      ];\n\n      _.each(getsAppHtml, function (x) {\n        do_test(x, 200, /__meteor_runtime_config__ = JSON/);\n      });\n    }\n  ]);\n}\n\nMeteor.isServer && Tinytest.add(\"httpcall - npm modules\", function (test) {\n  // Make sure the version number looks like a version number. (All published\n  // request version numbers end in \".0\".)\n  test.matches(HTTPInternals.NpmModules.request.version, /^2\\.(\\d+)\\.0/);\n  test.equal(typeof(HTTPInternals.NpmModules.request.module), 'function');\n  test.isTrue(HTTPInternals.NpmModules.request.module.get);\n});\n\n// TO TEST/ADD:\n// - https\n// - cookies?\n// - human-readable error reason/cause?\n// - data parse error\n"]},"hash":"6eeb9a5f911d346ef9b51a34988b47bdf77a27ac"}
