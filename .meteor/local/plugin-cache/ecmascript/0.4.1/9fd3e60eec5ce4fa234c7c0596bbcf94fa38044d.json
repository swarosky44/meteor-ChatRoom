{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"./ChatBoxItem.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ChatBoxItem"}]},{"source":"../api/msgs.js","imported":["Msgs"],"specifiers":[{"kind":"named","imported":"Msgs","local":"Msgs"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/ui/ChatBox.jsx","filenameRelative":"/imports/ui/ChatBox.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/ChatBox.jsx.map","sourceFileName":"/imports/ui/ChatBox.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"ChatBox"},"ignored":false,"code":"exports.__esModule = true;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _this2 = this;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactMeteorData = require('meteor/react-meteor-data');\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _meteor = require('meteor/meteor');\n\nvar _ChatBoxItem = require('./ChatBoxItem.jsx');\n\nvar _ChatBoxItem2 = _interopRequireDefault(_ChatBoxItem);\n\nvar _msgs = require('../api/msgs.js');\n\nvar _reactRouter = require('react-router');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ChatBox = function (_Component) {\n  (0, _inherits3['default'])(ChatBox, _Component);\n\n  function ChatBox() {\n    (0, _classCallCheck3['default'])(this, ChatBox);\n    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));\n  }\n\n  ChatBox.prototype.renderChatList = function () {\n    function renderChatList() {\n      var msgs = this.props.msgs;\n      var friend_name = msgs[0].sender.name == _meteor.Meteor.user().username ? msgs[0].recevier.name : msgs[0].sender.name;\n      return msgs.map(function (msg) {\n        return _react2['default'].createElement(_ChatBoxItem2['default'], {\n          key: msg._id,\n          msg: msg,\n          friendName: friend_name\n        });\n      });\n    }\n\n    return renderChatList;\n  }();\n\n  ChatBox.prototype.handleSubmit = function () {\n    function handleSubmit(event) {\n      event.preventDefault();\n      var text = _reactDom2['default'].findDOMNode(this.refs.textInput).value.trim();\n      if (text) {\n        var _msg = this.props.msgs[0];\n        var friend = {\n          id: _msg.sender.id === _meteor.Meteor.userId() ? _msg.recevier.id : _msg.sender.id,\n          name: _msg.sender.name == _meteor.Meteor.user().username ? _msg.recevier.name : _msg.sender.name\n        };\n        _meteor.Meteor.call('msgs.insert', text, friend);\n        _reactDom2['default'].findDOMNode(this.refs.textInput).value = '';\n        var list = _reactDom2['default'].findDOMNode(this.refs.list);\n        list.scrollTop = list.scrollHeight;\n      }\n    }\n\n    return handleSubmit;\n  }();\n\n  ChatBox.prototype.render = function () {\n    function render() {\n      var msgs = this.props.msgs;\n      var friend_name = msgs[0].sender.name == _meteor.Meteor.user().username ? msgs[0].recevier.name : msgs[0].sender.name;\n      return _react2['default'].createElement(\n        'div',\n        { className: 'chat-box page' },\n        _react2['default'].createElement(\n          'h1',\n          { className: 'page-title' },\n          _react2['default'].createElement(\n            _reactRouter.Link,\n            { className: 'page-title_back', to: '/' },\n            '<'\n          ),\n          friend_name\n        ),\n        _react2['default'].createElement(\n          'ul',\n          { ref: 'list', className: 'chat-box_list' },\n          this.renderChatList()\n        ),\n        _react2['default'].createElement(\n          'form',\n          { className: 'chat-box_msg', onSubmit: this.handleSubmit.bind(this) },\n          _react2['default'].createElement('input', { className: 'chat-box_input', type: 'text', ref: 'textInput', placeholder: 'Type to send a messsage' })\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return ChatBox;\n}(_react.Component);\n\nChatBox.propTypes = {\n  msgs: _react.PropTypes.array.isRequired\n};\n\nexports['default'] = (0, _reactMeteorData.createContainer)(function () {\n  var user_id = _meteor.Meteor.userId();\n  // TODO  == Don't know how to get friend_id from component's props ==\n  var friend_id = _this2.location.pathname.slice(1);\n  _meteor.Meteor.subscribe('chatMsgs', friend_id);\n  return {\n    msgs: _msgs.Msgs.find({\n      $or: [{ 'sender.id': user_id, 'recevier.id': friend_id }, { 'sender.id': friend_id, 'recevier.id': user_id }]\n    }).fetch()\n  };\n}, ChatBox);","ast":null,"map":{"version":3,"sources":["/imports/ui/ChatBox.jsx"],"names":[],"mappings":"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","file":"/imports/ui/ChatBox.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { createContainer } from 'meteor/react-meteor-data'\nimport ReactDOM from 'react-dom'\nimport { Meteor } from 'meteor/meteor'\nimport ChatBoxItem from './ChatBoxItem.jsx'\nimport { Msgs } from \"../api/msgs.js\"\nimport { Link } from 'react-router'\n\nclass ChatBox extends Component {\n  renderChatList() {\n    const msgs = this.props.msgs\n    const friend_name = msgs[0].sender.name == Meteor.user().username ? msgs[0].recevier.name : msgs[0].sender.name\n    return msgs.map((msg) => {\n      return (\n        <ChatBoxItem\n         key={msg._id}\n         msg={msg}\n         friendName={friend_name}\n        />\n      )\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim()\n    if (text) {\n      const _msg = this.props.msgs[0]\n      const friend = {\n        id: _msg.sender.id === Meteor.userId() ? _msg.recevier.id : _msg.sender.id,\n        name: _msg.sender.name == Meteor.user().username ? _msg.recevier.name : _msg.sender.name\n      }\n      Meteor.call('msgs.insert', text, friend)\n      ReactDOM.findDOMNode(this.refs.textInput).value = ''\n      let list = ReactDOM.findDOMNode(this.refs.list)\n      list.scrollTop = list.scrollHeight\n    }\n  }\n\n  render() {\n    const msgs = this.props.msgs\n    const friend_name = msgs[0].sender.name == Meteor.user().username ? msgs[0].recevier.name : msgs[0].sender.name\n    return (\n      <div className=\"chat-box page\">\n        <h1 className=\"page-title\">\n          <Link className=\"page-title_back\" to={'/'}>&lt;</Link>\n          { friend_name }\n        </h1>\n        <ul ref=\"list\" className=\"chat-box_list\">\n          { this.renderChatList() }\n        </ul>\n        <form className=\"chat-box_msg\" onSubmit={this.handleSubmit.bind(this)}>\n          <input className=\"chat-box_input\" type=\"text\" ref=\"textInput\" placeholder=\"Type to send a messsage\"/>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nChatBox.propTypes = {\n  msgs: PropTypes.array.isRequired\n}\n\nexport default createContainer(() => {\n  const user_id = Meteor.userId()\n  // TODO  == Don't know how to get friend_id from component's props ==\n  const friend_id = this.location.pathname.slice(1)\n  Meteor.subscribe('chatMsgs', friend_id)\n  return {\n    msgs: Msgs.find({\n      $or: [\n        {'sender.id': user_id, 'recevier.id': friend_id}, \n        {'sender.id': friend_id, 'recevier.id': user_id}\n      ] \n    }).fetch()\n  }\n}, ChatBox)\n"]},"hash":"9fd3e60eec5ce4fa234c7c0596bbcf94fa38044d"}
