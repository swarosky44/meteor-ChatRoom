{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/ecmascript/ecmascript.js","filenameRelative":"/packages/ecmascript/ecmascript.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/ecmascript/ecmascript.js.map","sourceFileName":"/packages/ecmascript/ecmascript.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"ecmascript"},"ignored":false,"code":"ECMAScript = {\n  compileForShell: function () {\n    function compileForShell(command) {\n      var babelOptions = Babel.getDefaultOptions();\n      babelOptions.sourceMap = false;\n      babelOptions.ast = false;\n      return Babel.compile(command, babelOptions).code;\n    }\n\n    return compileForShell;\n  }()\n};","ast":null,"map":{"version":3,"sources":["/packages/ecmascript/ecmascript.js"],"names":[],"mappings":"AAAA,aAAa;AACX;6BAAgB,SAAS;AACvB,UAAM,eAAe,MAAM,iBAAN,EAAf,CADiB;AAEvB,mBAAa,SAAb,GAAyB,KAAzB,CAFuB;AAGvB,mBAAa,GAAb,GAAmB,KAAnB,CAHuB;AAIvB,aAAO,MAAM,OAAN,CAAc,OAAd,EAAuB,YAAvB,EAAqC,IAArC,CAJgB;;;;KADd;CAAb","file":"/packages/ecmascript/ecmascript.js.map","sourcesContent":["ECMAScript = {\n  compileForShell(command) {\n    const babelOptions = Babel.getDefaultOptions();\n    babelOptions.sourceMap = false;\n    babelOptions.ast = false;\n    return Babel.compile(command, babelOptions).code;\n  }\n};\n"]},"hash":"bc7204604144622a0997be4f7718a75d21fd0834"}
