{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]},{"source":"./ChatBoxItem.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ChatBoxItem"}]},{"source":"../api/users.js","imported":["Users"],"specifiers":[{"kind":"named","imported":"Users","local":"Users"}]},{"source":"../api/msgs.js","imported":["Msgs"],"specifiers":[{"kind":"named","imported":"Msgs","local":"Msgs"}]},{"source":"react-router","imported":["Link"],"specifiers":[{"kind":"named","imported":"Link","local":"Link"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/ui/ChatBox.jsx","filenameRelative":"/imports/ui/ChatBox.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/ChatBox.jsx.map","sourceFileName":"/imports/ui/ChatBox.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"ChatBox"},"ignored":false,"code":"exports.__esModule = true;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _this2 = this;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactMeteorData = require('meteor/react-meteor-data');\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _meteor = require('meteor/meteor');\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _ChatBoxItem = require('./ChatBoxItem.jsx');\n\nvar _ChatBoxItem2 = _interopRequireDefault(_ChatBoxItem);\n\nvar _users = require('../api/users.js');\n\nvar _msgs = require('../api/msgs.js');\n\nvar _reactRouter = require('react-router');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ChatBox = function (_Component) {\n  (0, _inherits3['default'])(ChatBox, _Component);\n\n  function ChatBox() {\n    (0, _classCallCheck3['default'])(this, ChatBox);\n    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));\n  }\n\n  ChatBox.prototype.renderChatList = function () {\n    function renderChatList() {\n      var msgs = this.props.msgs;\n      var friendName = this.props.friend[0] && this.props.friend[0].username;\n      if (!friendName) return;\n      return msgs.map(function (msg) {\n        return _react2['default'].createElement(_ChatBoxItem2['default'], {\n          key: msg._id,\n          msg: msg,\n          friendName: friendName\n        });\n      });\n    }\n\n    return renderChatList;\n  }();\n\n  ChatBox.prototype.handleSubmit = function () {\n    function handleSubmit(event) {\n      event.preventDefault();\n      var text = _reactDom2['default'].findDOMNode(this.refs.textInput).value.trim();\n      var r_id = this.props.msgs[0].send_id === _meteor.Meteor.userId() ? this.props.msgs[0].recevier_id : this.props.msgs[0].send_id;\n      _meteor.Meteor.call('msgs.insert', text, r_id);\n      _reactDom2['default'].findDOMNode(this.refs.textInput).value = '';\n    }\n\n    return handleSubmit;\n  }();\n\n  ChatBox.prototype.render = function () {\n    function render() {\n      return _react2['default'].createElement(\n        'div',\n        { className: 'chat-box' },\n        _react2['default'].createElement(\n          'h1',\n          { className: 'chat-box-tit' },\n          _react2['default'].createElement(\n            _reactRouter.Link,\n            { className: 'chat-box-tit-back', to: '/' },\n            '返回'\n          ),\n          this.props.friend[0] && this.props.friend[0].username\n        ),\n        _react2['default'].createElement(\n          'ul',\n          { className: 'chat-box-list' },\n          _react2['default'].createElement(\n            'li',\n            null,\n            _react2['default'].createElement(\n              'div',\n              { className: 'chat-box-wrap' },\n              _react2['default'].createElement(\n                'div',\n                { className: 'chat-box-info' },\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'name' },\n                  'Ann'\n                ),\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'time' },\n                  '2015-01-02'\n                )\n              ),\n              _react2['default'].createElement(\n                'p',\n                { className: 'content' },\n                'hello sf'\n              )\n            )\n          ),\n          _react2['default'].createElement(\n            'li',\n            null,\n            _react2['default'].createElement(\n              'div',\n              { className: 'chat-box-wrap' },\n              _react2['default'].createElement(\n                'div',\n                { className: 'chat-box-info' },\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'name' },\n                  'lisen'\n                ),\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'time' },\n                  '2015-01-02'\n                )\n              ),\n              _react2['default'].createElement(\n                'p',\n                { className: 'content' },\n                'NO! I am listen'\n              )\n            )\n          ),\n          _react2['default'].createElement(\n            'li',\n            null,\n            _react2['default'].createElement(\n              'div',\n              { className: 'chat-box-wrap' },\n              _react2['default'].createElement(\n                'div',\n                { className: 'chat-box-info' },\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'name' },\n                  'Ann'\n                ),\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'time' },\n                  '2015-01-02'\n                )\n              ),\n              _react2['default'].createElement(\n                'p',\n                { className: 'content' },\n                'haaaaaaaaa'\n              )\n            )\n          ),\n          _react2['default'].createElement(\n            'li',\n            null,\n            _react2['default'].createElement(\n              'div',\n              { className: 'chat-box-wrap' },\n              _react2['default'].createElement(\n                'div',\n                { className: 'chat-box-info' },\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'name' },\n                  'Ann'\n                ),\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'time' },\n                  '2015-01-02'\n                )\n              ),\n              _react2['default'].createElement(\n                'p',\n                { className: 'content' },\n                'haaaaaaaaaaaaaaaaaaa'\n              )\n            )\n          ),\n          _react2['default'].createElement(\n            'li',\n            null,\n            _react2['default'].createElement(\n              'div',\n              { className: 'chat-box-wrap' },\n              _react2['default'].createElement(\n                'div',\n                { className: 'chat-box-info' },\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'name' },\n                  'lisen'\n                ),\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'time' },\n                  '2015-01-02'\n                )\n              ),\n              _react2['default'].createElement(\n                'p',\n                { className: 'content' },\n                'sbbbbbbbbbbb'\n              )\n            )\n          ),\n          _react2['default'].createElement(\n            'li',\n            null,\n            _react2['default'].createElement(\n              'div',\n              { className: 'chat-box-wrap' },\n              _react2['default'].createElement(\n                'div',\n                { className: 'chat-box-info' },\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'name' },\n                  'Ann'\n                ),\n                _react2['default'].createElement(\n                  'span',\n                  { className: 'time' },\n                  '2015-01-02'\n                )\n              ),\n              _react2['default'].createElement(\n                'p',\n                { className: 'content' },\n                'fuck U!!!'\n              )\n            )\n          )\n        ),\n        _react2['default'].createElement(\n          'form',\n          { className: 'chat-box-msg', onSubmit: this.handleSubmit.bind(this) },\n          _react2['default'].createElement('input', { className: 'chat-box-msg-input', type: 'text', ref: 'textInput', placeholder: 'Type to add new Msgs' })\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return ChatBox;\n}(_react.Component);\n\nChatBox.propTypes = {\n  msgs: _react.PropTypes.array.isRequired,\n  friend: _react.PropTypes.array.isRequired\n};\n\nexports['default'] = (0, _reactMeteorData.createContainer)(function () {\n  var f_id = _this2.location.pathname.slice(1);\n  var user_id = _meteor.Meteor.userId();\n  _meteor.Meteor.subscribe('users');\n  _meteor.Meteor.subscribe('findUsers', f_id);\n  _meteor.Meteor.subscribe('chatMsgs', f_id);\n  return {\n    msgs: _msgs.Msgs.find({\n      $or: [{ send_id: user_id, recevier_id: f_id }, { send_id: f_id, recevier_id: user_id }]\n    }).fetch(),\n    friend: _users.Users.find({ _id: f_id }).fetch()\n  };\n}, ChatBox);","ast":null,"map":{"version":3,"sources":["/imports/ui/ChatBox.jsx"],"names":[],"mappings":"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","file":"/imports/ui/ChatBox.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { createContainer } from 'meteor/react-meteor-data'\nimport ReactDOM from 'react-dom'\nimport { Meteor } from 'meteor/meteor'\nimport classnames from 'classnames'\nimport ChatBoxItem from './ChatBoxItem.jsx'\nimport { Users } from \"../api/users.js\"\nimport { Msgs } from \"../api/msgs.js\"\nimport { Link } from 'react-router'\n\nclass ChatBox extends Component {\n  renderChatList() {\n    let msgs = this.props.msgs\n    let friendName = this.props.friend[0] && this.props.friend[0].username\n    if(!friendName) return\n    return msgs.map((msg) => {\n      return (\n        <ChatBoxItem\n         key={msg._id}\n         msg={msg}\n         friendName={friendName}\n        />\n      )\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim()\n    let r_id = this.props.msgs[0].send_id === Meteor.userId() ? this.props.msgs[0].recevier_id : this.props.msgs[0].send_id\n    Meteor.call('msgs.insert', text, r_id)\n    ReactDOM.findDOMNode(this.refs.textInput).value = ''\n  }\n\n  render() {\n    return (\n      <div className=\"chat-box\">\n        <h1 className=\"chat-box-tit\">\n          <Link className=\"chat-box-tit-back\" to={'/'}>返回</Link>\n          { this.props.friend[0] && this.props.friend[0].username }\n        </h1>\n        <ul className=\"chat-box-list\">\n          <li>\n            <div className=\"chat-box-wrap\">\n              <div className=\"chat-box-info\">\n                <span className=\"name\">Ann</span>\n                <span className=\"time\">2015-01-02</span>\n              </div>\n              <p className=\"content\">hello sf</p>\n            </div>\n          </li>\n          <li>\n            <div className=\"chat-box-wrap\">\n              <div className=\"chat-box-info\">\n                <span className=\"name\">lisen</span>\n                <span className=\"time\">2015-01-02</span>\n              </div>\n              <p className=\"content\">NO! I am listen</p>\n            </div>\n          </li>\n          <li>\n            <div className=\"chat-box-wrap\">\n              <div className=\"chat-box-info\">\n                <span className=\"name\">Ann</span>\n                <span className=\"time\">2015-01-02</span>\n              </div>\n              <p className=\"content\">haaaaaaaaa</p>\n            </div>\n          </li>\n          <li>\n            <div className=\"chat-box-wrap\">\n              <div className=\"chat-box-info\">\n                <span className=\"name\">Ann</span>\n                <span className=\"time\">2015-01-02</span>\n              </div>\n              <p className=\"content\">haaaaaaaaaaaaaaaaaaa</p>\n            </div>\n          </li>\n          <li>\n            <div className=\"chat-box-wrap\">\n              <div className=\"chat-box-info\">\n                <span className=\"name\">lisen</span>\n                <span className=\"time\">2015-01-02</span>\n              </div>\n              <p className=\"content\">sbbbbbbbbbbb</p>\n            </div>\n          </li>\n          <li>\n            <div className=\"chat-box-wrap\">\n              <div className=\"chat-box-info\">\n                <span className=\"name\">Ann</span>\n                <span className=\"time\">2015-01-02</span>\n              </div>\n              <p className=\"content\">fuck U!!!</p>\n            </div>\n          </li>\n        </ul>\n        <form className=\"chat-box-msg\" onSubmit={this.handleSubmit.bind(this)}>\n          <input className=\"chat-box-msg-input\" type=\"text\" ref=\"textInput\" placeholder=\"Type to add new Msgs\"/>\n        </form>\n      </div>\n    )\n  } \n}\n\n\nChatBox.propTypes = {\n  msgs: PropTypes.array.isRequired,\n  friend: PropTypes.array.isRequired\n}\n\nexport default createContainer(() => {\n  let f_id = this.location.pathname.slice(1)\n  let user_id = Meteor.userId()\n  Meteor.subscribe('users')\n  Meteor.subscribe('findUsers', f_id)\n  Meteor.subscribe('chatMsgs', f_id)\n  return {\n    msgs: Msgs.find({\n      $or: [\n        { send_id: user_id, recevier_id: f_id},\n        { send_id: f_id, recevier_id: user_id }\n      ],\n    }).fetch(),\n    friend: Users.find({_id:f_id}).fetch()\n  }\n}, ChatBox)\n"]},"hash":"d37b57ce46733ef666a2ee60e79b7467985e7c50"}
