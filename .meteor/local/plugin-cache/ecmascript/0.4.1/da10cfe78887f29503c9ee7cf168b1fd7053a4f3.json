{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]},{"source":"./ChatBoxItem.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ChatBoxItem"}]}],"exports":{"exported":["ChatBox"],"specifiers":[{"kind":"local","local":"ChatBox","exported":"default"}]}}},"options":{"filename":"/imports/ui/ChatBox.jsx","filenameRelative":"/imports/ui/ChatBox.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/ChatBox.jsx.map","sourceFileName":"/imports/ui/ChatBox.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"ChatBox"},"ignored":false,"code":"exports.__esModule = true;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _meteor = require('meteor/meteor');\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _ChatBoxItem = require('./ChatBoxItem.jsx');\n\nvar _ChatBoxItem2 = _interopRequireDefault(_ChatBoxItem);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar ChatBox = function (_Component) {\n  (0, _inherits3['default'])(ChatBox, _Component);\n\n  function ChatBox() {\n    (0, _classCallCheck3['default'])(this, ChatBox);\n    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));\n  }\n\n  ChatBox.prototype.renderChatList = function () {\n    function renderChatList() {\n      var msgs = this.props.msgs;\n      var name = \"Ann\";\n      return msgs.map(function (msg) {\n        return _react2['default'].createElement(_ChatBoxItem2['default'], {\n          key: msg._id,\n          msg: msg,\n          name: name\n        });\n      });\n    }\n\n    return renderChatList;\n  }();\n\n  ChatBox.prototype.handleSubmit = function () {\n    function handleSubmit(event) {\n      event.preventDefault();\n      var text = _reactDom2['default'].findDOMNode(this.refs.textInput).value.trim();\n\n      // let r_id = this.props.msgs[0].send_id === Meteor.userId() ? this.props.msgs[0].recevier_id : this.props.msgs[0].send_id\n      var r_id = \"jb6BJiYd7aKK2tvG4\";\n      _meteor.Meteor.call('msgs.insert', text, r_id);\n\n      _reactDom2['default'].findDOMNode(this.refs.textInput).value = '';\n    }\n\n    return handleSubmit;\n  }();\n\n  ChatBox.prototype.render = function () {\n    function render() {\n      return _react2['default'].createElement(\n        'div',\n        { className: 'chat-box' },\n        _react2['default'].createElement(\n          'h1',\n          { className: 'chat-box-tit' },\n          this.props.name\n        ),\n        _react2['default'].createElement(\n          'ul',\n          { className: 'chat-list' },\n          this.renderChatList()\n        ),\n        _react2['default'].createElement(\n          'form',\n          { className: 'msg-send', onSubmit: this.handleSubmit.bind(this) },\n          _react2['default'].createElement('input', { type: 'text', ref: 'textInput', placeholder: 'Type to add new Msgs' })\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return ChatBox;\n}(_react.Component);\n\nexports['default'] = ChatBox;\n\n\nChatBox.propTypes = {\n  name: _react.PropTypes.string.isRequired,\n  msgs: _react.PropTypes.array.isRequired\n};","ast":null,"map":{"version":3,"sources":["/imports/ui/ChatBox.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;;;;;IAEqB;;;;;;;;oBACnB;8BAAiB;AACf,UAAI,OAAO,KAAK,KAAL,CAAW,IAAX,CADI;AAEf,UAAM,OAAO,KAAP,CAFS;AAGf,aAAO,KAAK,GAAL,CAAS,UAAC,GAAD,EAAS;AACvB,eACE;AACC,eAAK,IAAI,GAAJ;AACL,eAAK,GAAL;AACA,gBAAM,IAAN;SAHD,CADF,CADuB;OAAT,CAAhB,CAHe;;;;;;AADE,oBAenB;0BAAa,OAAO;AAClB,YAAM,cAAN,GADkB;AAElB,UAAM,OAAO,sBAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAAV,CAArB,CAA0C,KAA1C,CAAgD,IAAhD,EAAP;;;AAFY,UAKd,OAAO,mBAAP,CALc;AAMlB,qBAAO,IAAP,CAAY,aAAZ,EAA2B,IAA3B,EAAiC,IAAjC,EANkB;;AAQlB,4BAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAAV,CAArB,CAA0C,KAA1C,GAAkD,EAAlD,CARkB;;;;;;AAfD,oBA0BnB;sBAAS;AACP,aACE;;UAAK,WAAU,UAAV,EAAL;QACE;;YAAI,WAAU,cAAV,EAAJ;UACI,KAAK,KAAL,CAAW,IAAX;SAFN;QAIE;;YAAI,WAAU,WAAV,EAAJ;UACI,KAAK,cAAL,EADJ;SAJF;QAOE;;YAAM,WAAU,UAAV,EAAqB,UAAU,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,CAAV,EAA3B;UACE,4CAAO,MAAK,MAAL,EAAY,KAAI,WAAJ,EAAgB,aAAY,sBAAZ,EAAnC,CADF;SAPF;OADF,CADO;;;;;;SA1BU;;;;;;AA2CrB,QAAQ,SAAR,GAAoB;AAClB,QAAM,iBAAU,MAAV,CAAiB,UAAjB;AACN,QAAM,iBAAU,KAAV,CAAgB,UAAhB;CAFR","file":"/imports/ui/ChatBox.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Meteor } from 'meteor/meteor'\nimport classnames from 'classnames'\n\nimport ChatBoxItem from './ChatBoxItem.jsx'\n\nexport default class ChatBox extends Component {\n  renderChatList() {\n    let msgs = this.props.msgs\n    const name = \"Ann\"\n    return msgs.map((msg) => {\n      return (\n        <ChatBoxItem\n         key={msg._id}\n         msg={msg}\n         name={name}\n        />\n      )\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim()\n    \n    // let r_id = this.props.msgs[0].send_id === Meteor.userId() ? this.props.msgs[0].recevier_id : this.props.msgs[0].send_id\n    let r_id = \"jb6BJiYd7aKK2tvG4\"\n    Meteor.call('msgs.insert', text, r_id)\n\n    ReactDOM.findDOMNode(this.refs.textInput).value = ''\n  }\n\n  render() {\n    return (\n      <div className=\"chat-box\">\n        <h1 className=\"chat-box-tit\">\n          { this.props.name }\n        </h1>\n        <ul className=\"chat-list\">\n          { this.renderChatList() }\n        </ul>\n        <form className=\"msg-send\" onSubmit={this.handleSubmit.bind(this)}>\n          <input type=\"text\" ref=\"textInput\" placeholder=\"Type to add new Msgs\"/>\n        </form>\n      </div>\n    )\n  }\n}\n\nChatBox.propTypes = {\n  name: PropTypes.string.isRequired,\n  msgs: PropTypes.array.isRequired\n}\n"]},"hash":"da10cfe78887f29503c9ee7cf168b1fd7053a4f3"}
