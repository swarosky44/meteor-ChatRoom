{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/ddp-server/session_view_tests.js","filenameRelative":"/packages/ddp-server/session_view_tests.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/ddp-server/session_view_tests.js.map","sourceFileName":"/packages/ddp-server/session_view_tests.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"session_view_tests"},"ignored":false,"code":"var newView = function newView(test) {\n  var results = [];\n  var view = new DDPServer._SessionCollectionView('test', {\n    added: function () {\n      function added(collection, id, fields) {\n        results.push({ fun: 'added', id: id, fields: fields });\n      }\n\n      return added;\n    }(),\n    changed: function () {\n      function changed(collection, id, _changed) {\n        if (_.isEmpty(_changed)) return;\n        results.push({ fun: 'changed', id: id, changed: _changed });\n      }\n\n      return changed;\n    }(),\n    removed: function () {\n      function removed(collection, id) {\n        results.push({ fun: 'removed', id: id });\n      }\n\n      return removed;\n    }()\n  });\n  var v = {\n    view: view,\n    results: results\n  };\n  _.each([\"added\", \"changed\", \"removed\"], function (it) {\n    v[it] = _.bind(view[it], view);\n  });\n  v.expectResult = function (result) {\n    test.equal(results.shift(), result);\n  };\n  v.expectNoResult = function () {\n    test.equal(results, []);\n  };\n  v.drain = function () {\n    var ret = results;\n    results = [];\n    return ret;\n  };\n  return v;\n};\n\nTinytest.add('livedata - sessionview - exists reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {});\n  v.expectResult({ fun: 'added', id: \"A1\", fields: {} });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added a second field in another sub', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { a: \"foo\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { a: \"foo\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { a: \"foo\", b: \"bar\" });\n  v.expectResult({ fun: 'changed', 'id': \"A1\", changed: { b: \"bar\" } });\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n  // Somewhere in here we must have changed foo to baz. Legal either on the\n  // added or on the removed, but only once.\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { foo: \"baz\" }, []);\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change makes a new field', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { baz: \"quux\" });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { baz: \"quux\" } });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - add, remove, add', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change to canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  var canon = \"bar\";\n  var maybeResults = v.drain();\n  if (!_.isEmpty(maybeResults)) {\n    // if something happened, it was a change message to baz.\n    // if nothing did, canon is still bar.\n    test.length(maybeResults, 1);\n    test.equal(maybeResults[0], { fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n    canon = \"baz\";\n  }\n  v.changed(\"B\", \"A1\", { foo: canon });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - new field of canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n\n  v.changed(\"B\", \"A1\", { foo: \"bar\" });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - clear all clears only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"bar\" });\n  v.added(\"C\", \"A1\", { foo: \"bar\" });\n  v.changed(\"A\", \"A1\", { foo: undefined });\n  v.changed(\"B\", \"A1\", { foo: undefined });\n  v.changed(\"C\", \"A1\", { foo: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change all changes only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"bar\" });\n  v.added(\"C\", \"A1\", { foo: \"bar\" });\n  v.changed(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { foo: \"baz\" });\n  v.changed(\"C\", \"A1\", { foo: \"baz\" });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple operations at once in a change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\", thing: \"stuff\", baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: undefined } });\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - more than one document', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"baz\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"baz\" } });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: \"stuff\", foo: undefined, baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple docs removed', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"baz\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"baz\" } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - complicated sequence', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { foo: \"bar\", baz: \"quux\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: \"bar\", baz: \"quux\" } });\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", { foo: \"eats\" });\n  v.expectResult({ fun: 'added', id: \"A2\", fields: { foo: \"eats\" } });\n\n  v.added(\"B\", \"A1\", { foo: \"baz\" });\n  v.changed(\"A\", \"A1\", { thing: \"stuff\", foo: undefined, baz: undefined });\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { foo: \"baz\", thing: \"stuff\", baz: undefined } });\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.removed(\"A\", \"A2\");\n  v.expectResult({ fun: 'changed', id: \"A1\", changed: { thing: undefined } });\n  v.expectResult({ fun: 'removed', id: \"A2\" });\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({ fun: 'removed', id: \"A1\" });\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added becomes changed', function (test) {\n  var v = newView(test);\n\n  v.added('A', \"A1\", { foo: 'bar' });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { foo: 'bar' } });\n\n  v.added('B', \"A1\", { hi: 'there' });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { hi: 'there' } });\n\n  v.removed('A', 'A1');\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { foo: undefined } });\n\n  v.removed('B', 'A1');\n  v.expectResult({ fun: 'removed', id: 'A1' });\n});\n\nTinytest.add('livedata - sessionview - weird key names', function (test) {\n  var v = newView(test);\n\n  v.added('A', \"A1\", {});\n  v.expectResult({ fun: 'added', id: \"A1\", fields: {} });\n\n  v.changed('A', \"A1\", { constructor: 'bla' });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { constructor: 'bla' } });\n});\n\nTinytest.add('livedata - sessionview - clear undefined value', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", { field: \"value\" });\n  v.expectResult({ fun: 'added', id: \"A1\", fields: { field: \"value\" } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { field: undefined });\n  v.expectResult({ fun: 'changed', id: 'A1', changed: { field: undefined } });\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", { field: undefined });\n  v.expectNoResult();\n});","ast":null,"map":{"version":3,"sources":["/packages/ddp-server/session_view_tests.js"],"names":[],"mappings":"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","file":"/packages/ddp-server/session_view_tests.js.map","sourcesContent":["var newView = function(test) {\n  var results = [];\n  var view = new DDPServer._SessionCollectionView('test', {\n    added: function (collection, id, fields) {\n      results.push({fun: 'added', id: id, fields: fields});\n    },\n    changed: function (collection, id, changed) {\n      if (_.isEmpty(changed))\n        return;\n      results.push({fun: 'changed', id: id, changed: changed});\n    },\n    removed: function (collection, id) {\n      results.push({fun: 'removed', id: id});\n    }\n  });\n  var v = {\n    view: view,\n    results: results\n  };\n  _.each([\"added\", \"changed\", \"removed\"], function (it) {\n    v[it] = _.bind(view[it], view);\n  });\n  v.expectResult = function (result) {\n    test.equal(results.shift(), result);\n  };\n  v.expectNoResult = function () {\n    test.equal(results, []);\n  };\n  v.drain = function() {\n    var ret = results;\n    results = [];\n    return ret;\n  };\n  return v;\n};\n\nTinytest.add('livedata - sessionview - exists reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {}});\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added a second field in another sub', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {a: \"foo\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {a: \"foo\"}});\n  v.expectNoResult();\n\n  v.added(\"B\", \"A1\", {a: \"foo\", b: \"bar\"});\n  v.expectResult({fun: 'changed', 'id': \"A1\", changed: {b: \"bar\"}});\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\n\nTinytest.add('livedata - sessionview - field reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n  // Somewhere in here we must have changed foo to baz. Legal either on the\n  // added or on the removed, but only once.\n\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {foo: \"baz\"}, []);\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - field clear', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change makes a new field', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {baz:\"quux\"});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {baz: \"quux\"}});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - add, remove, add', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n});\n\nTinytest.add('livedata - sessionview - field clear reveal', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change to canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  var canon = \"bar\";\n  var maybeResults = v.drain();\n  if (!_.isEmpty(maybeResults)) {\n    // if something happened, it was a change message to baz.\n    // if nothing did, canon is still bar.\n    test.length(maybeResults, 1);\n    test.equal(maybeResults[0], {fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n    canon = \"baz\";\n  }\n  v.changed(\"B\", \"A1\", {foo: canon});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - new field of canonical value produces no change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {});\n\n  v.changed(\"B\", \"A1\", {foo: \"bar\"});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - clear all clears only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"bar\"});\n  v.added(\"C\",  \"A1\", {foo: \"bar\"});\n  v.changed(\"A\", \"A1\", {foo: undefined});\n  v.changed(\"B\", \"A1\", {foo: undefined});\n  v.changed(\"C\", \"A1\", {foo: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - change all changes only once', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\"}});\n  v.expectNoResult();\n\n  v.added(\"B\",  \"A1\", {foo: \"bar\"});\n  v.added(\"C\",  \"A1\", {foo: \"bar\"});\n  v.changed(\"B\", \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {foo: \"baz\"});\n  v.changed(\"C\", \"A1\", {foo: \"baz\"});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - multiple operations at once in a change', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\", thing: \"stuff\", baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: undefined}});\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - more than one document', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"A\", \"A2\", {foo: \"baz\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"baz\"}});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: \"stuff\", foo: undefined, baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n\n});\n\nTinytest.add('livedata - sessionview - multiple docs removed', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n\n  v.added(\"A\", \"A2\", {foo: \"baz\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"baz\"}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n});\n\n\nTinytest.add('livedata - sessionview - complicated sequence', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\",  \"A1\", {foo: \"bar\", baz: \"quux\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: \"bar\", baz: \"quux\"}});\n  v.expectNoResult();\n\n  v.added(\"A\", \"A2\", {foo: \"eats\"});\n  v.expectResult({fun: 'added', id: \"A2\", fields: {foo: \"eats\"}});\n\n  v.added(\"B\",  \"A1\", {foo: \"baz\"});\n  v.changed(\"A\", \"A1\", {thing: \"stuff\", foo: undefined, baz: undefined});\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {foo: \"baz\", thing: \"stuff\", baz: undefined}});\n  v.expectNoResult();\n\n  v.removed(\"A\", \"A1\");\n  v.removed(\"A\", \"A2\");\n  v.expectResult({fun: 'changed', id: \"A1\", changed: {thing: undefined}});\n  v.expectResult({fun: 'removed', id: \"A2\"});\n  v.expectNoResult();\n  v.removed(\"B\", \"A1\");\n  v.expectResult({fun: 'removed', id: \"A1\"});\n  v.expectNoResult();\n});\n\nTinytest.add('livedata - sessionview - added becomes changed', function (test) {\n  var v = newView(test);\n\n  v.added('A',  \"A1\", {foo: 'bar'});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {foo: 'bar'}});\n\n  v.added('B',  \"A1\", {hi: 'there'});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {hi: 'there'}});\n\n  v.removed('A', 'A1');\n  v.expectResult({fun: 'changed', id: 'A1', changed: {foo: undefined}});\n\n  v.removed('B', 'A1');\n  v.expectResult({fun: 'removed', id: 'A1'});\n});\n\nTinytest.add('livedata - sessionview - weird key names', function (test) {\n  var v = newView(test);\n\n  v.added('A',  \"A1\", {});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {}});\n\n  v.changed('A',  \"A1\", {constructor: 'bla'});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {constructor: 'bla'}});\n});\n\nTinytest.add('livedata - sessionview - clear undefined value', function (test) {\n  var v = newView(test);\n\n  v.added(\"A\", \"A1\", {field: \"value\"});\n  v.expectResult({fun: 'added', id: \"A1\", fields: {field: \"value\"}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {field: undefined});\n  v.expectResult({fun: 'changed', id: 'A1', changed: {field: undefined}});\n  v.expectNoResult();\n\n  v.changed(\"A\", \"A1\", {field: undefined});\n  v.expectNoResult();\n\n});\n"]},"hash":"fccc913f40ac4c13c3c69c466baa0d75ab77ae09"}
